{"rule_id": 10, "name": "Cisco Talos Intelligence Group - Comprehensive Threat Intelligence_ Iranian APT MuddyWater targets Turkish users via malicious PDFs, executables", "description": "-", "references": [], "File_Names": ["turkey.html", "VirtualBoxer.conf", "pcwutl.dll", "bot.html", "Teklif_form_onayl\u0131.xls", "Offer_form_approved.xls", "32018.exe", "post.jsp", "System.Text", "canarytokens.com", "CloudDrive.conf", "index.html", "CloudCache.conf", "eta332018.exe", "SyncAppvPublishingServer.vbs", "layer.jpg", "gallery.jpg", "Canarytokens.com", "a.sara"], "MD5_Hashes": ["ef4f0d9af47d737076923cfccfe01ba7"], "SHA1_Hashes": [], "SHA256_Hashes": ["69e3a454c191ee38663112cf5358a54cca1229188087ed18e92bc9c59b014912", "d7de68febbbdb72ff820f6554afb464b5c204c434faa6ffe9b4daf6b691d535f", "f6569039513e261ba9c70640e6eb8f59a0c72471889d3c0eaba51bdebb91d285", "b4d0161ecab5a7847d325c88ce1a4fc2ca2e11fad0b77638b63ae1781c8b5793", "8d6ed63f2ffa053a683810f5f96c76813cdca2e188f16d549e002b2f63cee001", "28f2198f811bbd09be31ad51bac49ba0be5e46ebf5c617c49305bb7e274b198c", "b1e30cce6df16d83b82b751edca57aa17795d8d0cdd960ecee7d90832b0ee76c", "450302fb71d8e0e30c80f19cfe7fb7801b223754698cac0997eb3a3c8e440a48", "dc28b5e878152b5305b8d251019895caa56a7a95a68eccb89a6ecc41da8aadb9", "b726f4dd745891070f2e516d5d4e4f2f1ce0bf3ff685dc3800455383f342e54d", "c13cb1c9277324534075f807a3fcd24d0d3c024197c7437bf65db78f6a987f7a", "d851badfcf3b3a8b4210bdb33948d0d1d918ec6bf0f1f85cbae6bb8feec7cd74", "9991b185c9e9732501e0c2bd841e32a4022f0735a0527150bc8e64ac363d409d", "26ed7e89b3c5058836252e0a8ed9ec6b58f5f82a2e543bc6a97b3fd17ae3e4ec", "6910ddb58aee9a77e7bb9cadef9e6280a9b5b495edf0b6538cf8bdc1db8b1f4c", "63e404011aeabb964ce63f467be29d678d0576bddb72124d491ab5565e1044cf", "d3ecc4137fc9a6d7418b4780864baf64cf7417d7badf463dff6ea48cd455915b", "7dc49601fa6485c3a2cb1d519794bee004fb7fc0f3b37394a1aef6fceefec0c8", "cddd5514b7ed3d33ff8eaa16b7b71621ced857755246683e0d28c4650ea744bf", "42aa5a474abc9efd3289833eab9e72a560fee48765b94b605fac469739a515c1", "c9931382f844b61a002f83db1ae475953bbab449529be737df1eee8b3065f6eb", "d9de66497ad189d785d7535ab263e92ffad81df20b903c5e1d36859b4ed38b6d", "5cdc7dd6162a8c791d50f5b2c5136d7ba3bf417104e6096bd4a2b76ea499a2f4", "a8701fd6a5eb45e044f8bf150793f4189473dde46e0af8314652f6bf670c0a34", "921b4520b75fcd0071944a483d738223b222ba101e70f2950fbfbc22afbdb5d0", "aa72f1543d4a4e6ecbfc2da0167f5601c5c692bed73243cf01f616bc4af68afe", "8b9be9e4d18c5fc71cd12dbfd60ea41eb88a07497e96faa2ba20fdc929b32c0b", "fcdd38ff378605c66333429d9df2242fbce25a5f69f4d6d4c11d9613bcb409b0", "8f255a1f2e17828a5b9205d6991e2c85c3320311da28048785262396cbc568c7", "a69fee382cf86f9e457e0688932cbd00671d0d5218f8043f1ee385278ee19c8c", "04d6ed9c6d4a37401ad3c586374f169b0aa8d609710bdcf5434d39e0fd4ed9bd"], "Registry_Entries": ["HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run]\n\n", "HKCU\\SOFTWARE\\MICROSOFT\\WINDOWS\\CURRENTVERSION\\RUN | <Some Application Name> for\npersistence.\n\nFor example:\n\nHKCU\\SOFTWARE\\MICROSOFT\\WINDOWS\\CURRENTVERSION\\RUN | CloudDrive.\n\nThe registry Run key takes advantage of lolbins to run the payload. In this case, it uses\nSyncAppvPublishingServer.vbs to execute PowerShell code, which will execute the code stored in the\ninstrumentor script (", "HKCU\\Software\\Microsoft\\windows\\CurrentVersion\\Run | <random>\n\nThis campaign relies on the use of a LoLBin to execute the malicious VBScript.\n\nIn some instances, the attackers make use of a LoLBin DLL called pcwutl.dll, which is part of the operating\nsystem, to execute the VBScript on reboot or re-login. Although the usage of LoLBins is fairly common as a\nmeans of lateral movement, it is not commonly used to execute the malicious payload.\n\nTracking tokens\n\nAs the maldocs were evolving, some of the metadata details were removed or generalized, and eventually,\nthe latest versions consisted of obfuscated PowerShell payloads residing in the comments field.\n\nhttps://blog.talosintelligence.com/2022/01/iranian-apt-muddywater-targets-turkey.html\n\n3/19\n\n \n \n \n \n\f2/10/22, 10:46 PM\n\nCisco Talos Intelligence Group - Comprehensive Threat Intelligence: Iranian APT MuddyWater targets Turkish users via malicious PDFs,\u2026\n\nThe malicious VBA macros consisted of the same set of functionalities for creating the malicious VBS and\nPS1 scripts, and achieving persistence across reboots. However, there was one interesting addition to the\nmacro functionality now. The latest versions of the VBA code deployed could make HTTP requests to a\ncanary token from canarytokens.com.\n\nCanary tokens are tokens that can be embedded in objects like documents, web pages and emails. When that\nobject is opened, an HTTP request to canarytokens.com is generated, alerting the token's owner that the\nobject was opened.\n\nThe canary token is typically silently executed twice during the execution of the macro. In cooperation with\nCanarytokens.com, a list of other tokens created by the same user was added to the IOC section below.\n\nAn attacker may use such tokens to serve one or more purposes such as:\n\nTracking Tokens: A way of tracking who is detonating the malicious code, keeping track of successful\ninfections.\n\nTracking tokens can be an anti-analysis method. In this campaign, the server that hosts the final\npayload may only deliver if it first receives two almost simultaneous requests to the token. This would\nthwart researchers that solely request the payload from the server without registering with the canary\ntokens using an HTTP request.\n\nTracking tokens may also be used as another means of anti-analysis: timing checks. The infection\nchain consists of a PS1-based downloader and two sets of HTTP requests for the canary tokens. A\nreasonable timing check on the duration between the token requests and the request to download a\npayload can indicate automated analysis. Automated sandboxed systems would typically execute the\nmalicious macro generating the token requests. A sandbox would also identify the creation of the\nregistry Run key and re-login the infected user to execute the malicious PS1 that generates the request\nto download the next payload. Typically, since sandbox-based analysis systems spin up analysis\nenvironments for a limited number of minutes, the token requests and payload requests wouldn't be\ntoo far apart from each other temporally. A substantially low interval between the HTTP token\nrequests and PS1 requesting the payload may indicate automated analysis of the maldocs and can be\nused to block payload requests from the infected endpoint.\n\nTracking tokens can also be a method to detect the blocking of the payload server. If they keep\nreceiving requests to the token but not to the payload server, that is an indication of their payload\nserver being blocked, and by whom.\n\nIntermediate VB Script component (VBS)\n\nhttps://blog.talosintelligence.com/2022/01/iranian-apt-muddywater-targets-turkey.html\n\n4/19\n\n \n \n \n\f2/10/22, 10:46 PM\n\nCisco Talos Intelligence Group - Comprehensive Threat Intelligence: Iranian APT MuddyWater targets Turkish users via malicious PDFs,\u2026\n\nThe VBS file is a straightforward executor of the PowerShell script dropped by the macro to disk.\n\nVBS executing the PS1 on the endpoint.\n\nMalicious PowerShell-based downloader\n\nThe PowerShell script deployed in the attack is meant to download and execute the next payload (also a PS1\nscript) on the infected endpoint. This PS1 script resides in the metadata of the maldoc and is dropped by the\nmacro.\n\nPrimitive versions of the maldocs consisted of unobfuscated versions of the PS1 script, with obfuscations\nbeing introduced in newer versions.\n\nPS1 downloader script.\n\nThe PowerShell script that downloads another PowerShell from a remote location which will then be\nexecuted. It tries twice, with a custom timeout of 40 seconds and a custom user agent, which is appended\nwith the character "], "URLs": ["http://<C2_IP>/images?guid=<base64_encoded", "http://www.google.com/bot.html)", "https://blog.talosintelligence.com/2022/01/iranian-apt-muddywater-targets-turkey.html"], "weight": 0.0}