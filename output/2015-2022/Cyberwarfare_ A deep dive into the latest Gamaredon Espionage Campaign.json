{"rule_id": 188, "name": "Cyberwarfare_ A deep dive into the latest Gamaredon Espionage Campaign", "description": "-", "references": [], "File_Names": ["templates.vbs", "IndexOf\ufb01ce.vbs", "IndexOf\ufb01ce.exe", "WordMacros.txt", "post.php", "autoindex.php", "wordMacros.txt", "WuaucltIC.exe", "ddns.net", "template.vbs", "f.doc", "28847.exe", "8957.cmd", "ExcelMyMacros.txt", "IndexOf\ufb01ce.txt"], "MD5_Hashes": [], "SHA1_Hashes": [], "SHA256_Hashes": ["e2cb06e0a5c14b4c5f58d0e56a1dc10b6a1007cf56c77ae6cb07946c3dfe82d8", "145a61a14ec6d32b105a6279cd943317b41f1d27f21ac64df61bcdd464868edd", "2f310c5b16620d9f6e5d93db52607f21040b4829aa6110e22ac55fab659e9fa1", "f66e820de46bc0d2053c7d24169deb9424f5fdc6973935b108030b03184fcba5", "3dfadf9f23b4c5d17a0c5f5e89715d239c832dbe78551da67815e41e2000fdf1", "40cd2384824ae960a85fc540a763c342c4dc5c9226308d9eb690c98a302fa7a2", "76ea98e1861c1264b340cf3748c3ec74473b04d042cd6bfda9ce51d086cb5a1a", "ad61df516fb038e806d13d9cc968abaf55eae3b52780d20976ed4e0db440d87b", "c1524a4573bc6acbe59e559c2596975c657ae6bbc0b64f943fffca663b98a95f", "def13f94cdf793df3e9b42b168550a09ee906f07f61a3f5c9d25ceca44e8068c", "86977a785f361d4f26eb3e189293c0e30871de3c93b19653c26a31dd4ed068cc"], "Registry_Entries": ["HKEY_CURRENT_USER\\Software\\Microsoft\\Of\ufb01ce\\\u201d &\nApplication.Version & _\u201d\\Word\\Security\\\u201d and the declaration of some other variables, such as the dropurl \u201cget-\nicons.]ddns.net\u201d;\nThe second one is the setting of the persistence mechanism through the writing of the vbs code in the Startup\nfolder with name \u201ctemplates.vbs\u201d. This vbs is properly the macro executed by the macro engine of word\n\nhttps://blog.yoroi.company/research/cyberwarfare-a-deep-dive-into-the-latest-gamaredon-espionage-campaign/\n\n3/15\n\n\f2/24/2020\n\nCyberwarfare: A deep dive into the latest Gamaredon Espionage Campaign \u2013 Yoroi Blog\n\nFigure 4. Code of the \u201ctemplate.vbs\u201d stored in the Startup folder\n\nThe evidence of the written \ufb01le in the Startup folder:\n\nFigure 5. Evidence of the \u201ctemplate.vbs\u201d \ufb01le in the Startup folder\n\nAnalyzing the content of \u201ctemplates.vbs\u201d it is possible to notice that it de\ufb01ne a variable containing a URL like \u201chxxp://get-\nicons.]ddns.]net/ADMIN-PC_E42CAF54//autoindex.]php\u201d obtained from \u201chxp://get-icons.]ddns.]net/\u201d & NlnQCJG & \u201c_\u201d &\nuRDEJCn & \u201c//autoindex.]php\u201d, where \u201cNlnQCJG\u201d is the name that identi\ufb01es the computer on the network and\n\u201cuRDEJCn\u201d is the serial number of drive in hexadecimal encoding. From this URL it tries to download another stage\nthen storing it into \u201cC:\\Users\\admin\\AppData\\Roaming\\\u201d path with random name. At the end, \u201ctemplates.vbs\u201d script will\nforce the machine to reboot.\u00a0\n\nThe dropped sample is an SFX archive, like the tradition of Gamaredon implants.\n\nFigure 6. Function used to force machine reboot\n\nhttps://blog.yoroi.company/research/cyberwarfare-a-deep-dive-into-the-latest-gamaredon-espionage-campaign/\n\n4/15\n\n\f2/24/2020\n\nCyberwarfare: A deep dive into the latest Gamaredon Espionage Campaign \u2013 Yoroi Blog\n\nHash\n\nc1524a4573bc6acbe59e559c2596975c657ae6bbc0b64f943fffca663b98a95f\n\nThreat Gamaredon Pteranodon implant SFX archive\n\nBrief\nDe\u2010\nscrip\u2010\ntion\n\nSs\u2010\ndeep\n\nSFX Archive First Stage\u00a0\n\n24576:zXwOrRsTQlIIIIwIEuCRqKlF8kmh/ZGg4kAL/WUKN7UMOtcv:zgwR/lIIIIwI6RqoukmhxGgZ+WUKZUMv\n\nTable 3. Information about \ufb01rst SFX archive\n\nBy simply opening the SFX archive, it is possible to notice two different \ufb01les that are shown below and named\nrespectively \u201c8957.cmd\u201d and \u201c28847\u201d.\u00a0\n\nFigure 7. Content of the Gamaredon Pteranodon\u00a0 SFX archive\n\nWhen executed, the SFX archive will be extracted and the \u201c8957.cmd\u201d will be run. The batch script looks like the\nfollowing screen:\n\nIt contains several junk instructions with the attemption to make the analysis harder. Cleaning the script we obtain:\n\nFigure 8. Bat script source code (with junk instructions)\n\nhttps://blog.yoroi.company/research/cyberwarfare-a-deep-dive-into-the-latest-gamaredon-espionage-campaign/\n\n5/15\n\n\f2/24/2020\n\nCyberwarfare: A deep dive into the latest Gamaredon Espionage Campaign \u2013 Yoroi Blog\n\nFigure 9. Batch script source code (cleaned)\n\nAt this point, the batch script renames the \u201c28847\u201d \ufb01le in \u201c28847.exe\u201d, opens it using \u201cp\ufb02jk,fkbcerbgblfhs\u201d as password\nand the \ufb01le contained inside the \u201c28847.exe\u201d \ufb01le will be renamed in \u201cWuaucltIC.exe\u201d. Finally, it will be run using \u201c-\npost.php\u201d as argument.\n\nThe fact that the \u201c28847.exe\u201d \ufb01le can be opened makes us understand that\u00a0 the \u201c28847\u201d \ufb01le is another SFX \ufb01le. Some\nstatic information about SFX are:\n\nHash\n\nThreat\n\n3dfadf9f23b4c5d17a0c5f5e89715d239c832dbe78551da67815e41e2000fdf1\n\nGamaredon Pteranodon implant SFX archive\n\nBrief Description SFX Archive Second Stage\n\nSsdeep\n\n24576:vmoO8itbaZiW+qJnmCcpv5lKbbJAiUqKXM:OoZwxVvfoaPu\n\nTable 4. Information about the second SFX archive\n\nExploring it, it is possible to see several \ufb01les inside of it,\u00a0 as well as the 6323 \ufb01le. The following \ufb01gure shows a complete\nlist.\n\nIn this case, the SFX archive contains 8 \ufb01les: \ufb01ve of them are legit DLLs\nused by the \u201c6323\u201d executable to interoperate with the OLE format\nde\ufb01ned and used by Microsoft Of\ufb01ce. The \u201cExcelMyMacros.txt\u201d and\n\u201cwordMacros.txt\u201d \ufb01les contain further macro script, described next. So,\nstatic analysis on the \u201c6323\u201d \ufb01le shown as its nature: it is written using\nMicrosoft Visual Studio .NET, therefore easily to reverse. Before reversing\nthe executable, it is possible to clean it allowing the size reduction and\nthe junk instruction reduction inside the code. The below image shows\nthe information about the sample before and after the cleaning.\u00a0\n\nFigure 10. Content of the second SFX archive\n\nhttps://blog.yoroi.company/research/cyberwarfare-a-deep-dive-into-the-latest-gamaredon-espionage-campaign/\n\n6/15\n\n\f2/24/2020\n\nCyberwarfare: A deep dive into the latest Gamaredon Espionage Campaign \u2013 Yoroi Blog\n\nFigure 11. Static information about .NET sample before and after the cleaning\n\nThe source code looks as follows.\u00a0\n\nFigure 12. Part of .NET sample source code\n\nThe \ufb01rst check performed is on the arguments: if the arguments length is equal to zero, the malware terminates the\nexecution. After that, the malware checks if the existence of the \ufb01les \u201cExcelMyMacros.txt\u201d and \u201cwordMacros.txt\u201d in the\nsame path where it is executed: if true then it reads their contents otherwise it will exit.\u00a0\n\nhttps://blog.yoroi.company/research/cyberwarfare-a-deep-dive-into-the-latest-gamaredon-espionage-campaign/\n\n7/15\n\n\f2/24/2020\n\nCyberwarfare: A deep dive into the latest Gamaredon Espionage Campaign \u2013 Yoroi Blog\n\nFigure 13. Function used by .NET sample to check the presence of the \u201cWordMacros.txt\u201d and the \u201cExcelMyMacros.txt\u201d \ufb01les\u201d\n\nPart of the content of the variable \u201cxVGlMEP\u201d:\n\nhttps://blog.yoroi.company/research/cyberwarfare-a-deep-dive-into-the-latest-gamaredon-espionage-campaign/\n\n8/15\n\n\f2/24/2020\n\nCyberwarfare: A deep dive into the latest Gamaredon Espionage Campaign \u2013 Yoroi Blog\n\nThere is a thin difference between the two \ufb01les.\u00a0\n\nFigure 14.Piece of the \u201cWordMacros.txt\u201d code\n\nFigure 15. Difference between \u201cWordMacros.txt\u201d and\u00a0 \u201cExcelMyMacros.txt\u201d \ufb01les\u201d\n\nAs visible in the previous \ufb01gure, the only difference between the \ufb01les are in the variable, registry key and path used by\nWord rather than by Excel. Finally the macros are executed using the Of\ufb01ce engine like in the following \ufb01gure.\u00a0\n\nSo let\u2019s start to dissect the macros. For a better comprehension we will be considering\nonly one macro and in the speci\ufb01c case we will analyze \u201cwordMacros.txt\u201d\u00a0 ones. First\nof all the macro will set the registry key\n\u201cHKEY_CURRENT_USER\\Software\\Microsoft\\Of\ufb01ce\\\u201d & Application.Version &\n_\u201d\\Word\\Security\\\u201d and then will set up two scheduled tasks that will start respectively\nevery 12 and 15 minutes: the \ufb01rst one will run a \u201cIndexOf\ufb01ce.vbs\u201d in the path\n\u201c%APPDATA%\\Microsoft\\Of\ufb01ce\\\u201d and the second one will run \u201cIndexOf\ufb01ce.exe\u201d in the\nsame path.\u00a0\n\nFigure 16. Winword with malicious\nmacro\n\nhttps://blog.yoroi.company/research/cyberwarfare-a-deep-dive-into-the-latest-gamaredon-espionage-campaign/\n\n9/15\n\n\f2/24/2020\n\nCyberwarfare: A deep dive into the latest Gamaredon Espionage Campaign \u2013 Yoroi Blog\n\nFigure 17. Registry keys and Scheduled tasks set by malware\n\nFinally, the malware will write the \u201cIndexOf\ufb01ce.txt\u201d \ufb01le in the\u00a0 \u201c%APPDATA%\\Microsoft\\Of\ufb01ce\\\u201d path. The following \ufb01gure\nshows what has been previously described:\n\nThe script will check the presence of the\u00a0 \u201cIndexOf\ufb01ce.exe\u201d artifact: if true then it will delete it and it will download a new\n\ufb01le/script from \u201chxxp://masseffect.]space/<PC_Name>_<Hex_Drive_SN>/post.]php\u201d.\u00a0\n\nFigure 18. Part of \u201cIndexOf\ufb01ce.txt\u201d \ufb01le\n\nhttps://blog.yoroi.company/research/cyberwarfare-a-deep-dive-into-the-latest-gamaredon-espionage-campaign/\n\n10/15\n\n\f2/24/2020\n\nCyberwarfare: A deep dive into the latest Gamaredon Espionage Campaign \u2013 Yoroi Blog\n\nFigure 19. Domain \u201cmasseffect.]space\u201d declaration and use of the Encode function\n\nThe malware tries to save the C2 response and encoding it using Encode function. This function accepts three\nparameters: the input \ufb01le, the output \ufb01le and the arrKey; arrKey is calculated thanks to\u00a0 GetKey function that accepts as\ninput the Hexadecimal value of the Driver SN installed on the machine and returns the key as results. Part of Encode\nfunction and complete code of GetKey function are shown below.\n\nFigure 20. Encode function\u00a0\n\nhttps://blog.yoroi.company/research/cyberwarfare-a-deep-dive-into-the-latest-gamaredon-espionage-campaign/\n\n11/15\n\n\f2/24/2020\n\nCyberwarfare: A deep dive into the latest Gamaredon Espionage Campaign \u2013 Yoroi Blog\n\nVisiting the web page relative to C2, it shows a \u201cForbidden message\u201d so this means that the domain is still active but\nrefuses incoming requests.\n\nFigure 21. Function GetKey\n\nFigure 22. Browser view of the URL \u201cmasseffect.]space\u201d\u00a0\n\nConclusion\n\nGamaredon cyberwarfare operations against Ukraine are still active. This technical analysis reveals that the modus\noperandi of the Group has remained almost identical over the years.\u00a0\n\nThe massive use of weaponized Of\ufb01ce documents, Of\ufb01ce template injection, sfx archives, wmi and some VBA macro\nstages that dinamically changes,\u00a0 make the Pterodon attack chain very malleable and adaptive. However, the\nintroduction of a .Net component is a novelty compared to previous Pterodon samples. \n\nIndicator of Compromise\n\nHashes\n\n76ea98e1861c1264b340cf3748c3ec74473b04d042cd6bfda9ce51d086cb5a1a\ne2cb06e0a5c14b4c5f58d0e56a1dc10b6a1007cf56c77ae6cb07946c3dfe82d8\ndef13f94cdf793df3e9b42b168550a09ee906f07f61a3f5c9d25ceca44e8068c\nc1524a4573bc6acbe59e559c2596975c657ae6bbc0b64f943fffca663b98a95f\n86977a785f361d4f26eb3e189293c0e30871de3c93b19653c26a31dd4ed068cc\n\nhttps://blog.yoroi.company/research/cyberwarfare-a-deep-dive-into-the-latest-gamaredon-espionage-campaign/\n\n12/15\n\n\f2/24/2020\n\nCyberwarfare: A deep dive into the latest Gamaredon Espionage Campaign \u2013 Yoroi Blog\n\n3dfadf9f23b4c5d17a0c5f5e89715d239c832dbe78551da67815e41e2000fdf1\n2f310c5b16620d9f6e5d93db52607f21040b4829aa6110e22ac55fab659e9fa1\n145a61a14ec6d32b105a6279cd943317b41f1d27f21ac64df61bcdd464868edd\nad61df516fb038e806d13d9cc968abaf55eae3b52780d20976ed4e0db440d87b\nf66e820de46bc0d2053c7d24169deb9424f5fdc6973935b108030b03184fcba5\n40cd2384824ae960a85fc540a763c342c4dc5c9226308d9eb690c98a302fa7a2\n\nPersistence\n\n%AppData%\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\templates.vbs\n\nURL\n\nC2\n\nhxxp://win-apu.]ddns.]net/apu.]dot/\nhxxp://get-icons.]ddns.]net/apu.]dot/\n\nhxxp://masseffect.]space/\n\nYara Rule\n\nhttps://blog.yoroi.company/research/cyberwarfare-a-deep-dive-into-the-latest-gamaredon-espionage-campaign/\n\n13/15\n\n\f2/24/2020\n\nCyberwarfare: A deep dive into the latest Gamaredon Espionage Campaign \u2013 Yoroi Blog\n\nrule Gamaredon_Campaign_January_2020_Initial_Dropper { \n\nmeta: \ndescription = "], "URLs": ["https://blog.yoroi.company/research/cyberwarfare-a-deep-dive-into-the-latest-gamaredon-espionage-campaign/"], "weight": 0.0}