{"rule_id": 840, "name": "eset-gazer", "description": "-", "references": [], "File_Names": ["soligro.com", "Turla.AH", "ultimatecomsup.biz", "rss_0.php", "gallery_preview_page_field.old", "greenweb.co", "aviasiya.com", "class.php", "Delicious.php", "mill.es", "SCRNSAVE.exe", "adobeup.exe", "module.php", "lifestyle.com", "hight.php", "4d4idgkxxx.php", "16mb.com", "xxx.php", "single.php", "Turla.CL", "DF1E06.tmp", "weandcats.com", "zszinhyosz.pe", "t3x0ftu9xxx.php", "lo3r6v4xxx.php", "solidloop.org", "giadinhvabe.net", "chagiocaxuanson.esy", "kennynguyen.esy", "daybreakhealthcare.co", "CommandHandler.php", "settings.php", "warrixmalaysia.com", "AdobeUpdater.exe", "SystemTime.wDay", "ales.ball", "Turla.AD", "x3ljjxxx.php", "Turla.AG", "tekfordummies.com", "Turla.CF", "Turla.AA", "themees.php", "murad.by", "front_footer.old", "dyskurs.com", "zerogov.com", "springwaterfeatures.com", "Explorer.EXE", "sonneteck.com", "BuildTest.php", "activation.php"], "MD5_Hashes": [], "SHA1_Hashes": ["7CED96b08D7593E28FEE616ECCbC6338896517CF", "52F6D09CCCDbC38D66C184521E7CCF6b28C4b4D9", "C3E6511377DFE85A34E19b33575870DDA8884C3C", "411EF895FE8DD4E040E8bF4048F4327F917E5724", "228DA957A9ED661E17E00EFbA8E923FD17FAE054", "8184AD9D6bbD03E99A397F8E925FA66CFbE5CF1b", "22542A3245D52b7bCDb3EAEF5b8b2693F451F497", "35F205367E2E5F8A121925bbAE6FF07626b526A7", "A5EEC8C6AADF784994bF68D9D937bb7AF3684D5C", "CECC70F2b2D50269191336219A8F893D45F5E979", "bAE3AE65C32838Fb52A0F5AD2CDE8659D2bFF9F3", "795C6EE27b147FF0A05C0477F70477E315916E0E", "3944253F6b7019EED496FAD756F4651bE0E282b4", "0F97F599FAb7F8057424340C246D3A836C141782", "Dbb185E493A0FDC959763533D86D73F986409F1b", "6FD611667bA19691958b5b72673b9b802EDD7FF8", "475C59744ACCb09724DAE610763b7284646Ab63F", "b548863DF838069455A76D2A63327434C02D0D9D", "b151CD7C4F9E53A8DCbDEb7CE61CCDD146Eb68Ab", "5838A51426CA6095b1C92b87E1bE22276C21A044", "63C534630C2CE0070AD203F9704F1526E83AE586", "C1288DF9022bCD2C0A217b1536DFA83928768D06", "4b6EF62D5D59F2FE7F245DD3042DC7b83E3CC923", "295D142A7bDCED124FDCC8EDFE49b9F3ACCEAb8A", "9E6DE3577b463451b7AFCE24Ab646EF62AD6C2bD", "2b9FAA8b0FCADAC710C7b2b93D492FF1028b5291", "9FF4F59CA26388C37D0b1F0E0b22322D926E294A", "950F0b0C7701835C5FbDb6C5698A04b8AFE068E6", "267F144D771b4E2832798485108DECD505Cb824A", "23F1E3bE3175D49E7b262CD88CFD517694DCbA18", "6DEC3438D212b67356200bbAC5EC7FA41C716D86", "E05Ab6978C17724b7C874F44F8A6CbFb1C56418D", "11b35320Fb1CF21D2E57770D8D8b237Eb4330EAA", "75831DF9CbCFD7bF812511148D2A0F117324A75F", "522E5F02C06AD215C9D0C23C5A6A523D34AE4E91", "029AA51549D0b9222Db49A53D2604D79AD1C1E59", "37FF6841419ADC51EEb8756660b2Fb46F3Eb24ED", "E40bb5bEEC5678537E8FE537F872b2AD6b77E08A", "7F54F9F2A6909062988AE87C1337F3CF38D68D35", "4701828DEE543b994ED2578b9E0D3991F22bD827", "7A6F1486269AbDC1D658Db618DC3C6F2AC85A4A7", "C380038A57FFb8C064851b898F630312FAbCbbA7", "E8A2bAD87027F2bF3ECAE477F805DE13FCCC0181", "FCAbEb735C51E2b8Eb6Fb07bDA8b95401D069bD8", "7FAC4FC130637AFAb31C56CE0A01E555D5DEA40D", "27FA78DE705EbAA4b11C4b5FE7277F91906b3F92"], "SHA256_Hashes": [], "Registry_Entries": ["HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\n\n1: HiddenTaskAutorun\nIt is very similar to the \u201cTaskScheduler Autorun (4)\u201d method described below. The main difference  \nis that the task is hidden from the user by using the TASK_FLAG_HIDDEN flag (set up via  \nthe SetFlags method from the ITask interface).\n\n2: ScreenSaverAutorun\nIn this mode, Gazer achieves persistency by setting up in the Windows registry the executable  \nfile used for the screensaver.\n\nMany values are created under the HKCU\\Control Panel\\Desktop registry key:\n\n\u2022\t SCRNSAVE.exe with the malware executable path\n\n\u2022\t ScreenSaveActive is set to \u201c1\u201d: enable the screensaver\n\n\u2022\t ScreenSaverIsSecure is set to \u201c0\u201d: specifies that the screensaver is not password-protected\n\n\u2022\t ScreenSaveTimeout is set to a value given in the resource. It specifies how long the system \n\nremains idle before the screensaver (in this case: the malware) starts.\n\n3: StartupAutorun\nIf the resource 105 begins with the dword value \u201c3\u201d, a LNK file will be created in the Start Menu.  \nThe resource will also provide a description for the shortcut file, the path for the target  \nand the filename for the LNK.\n\nThe IShellLink interface is used to create the shell link.\n\n4: TaskSchedulerAutorun\nThis method is used to achieve persistence by creating a scheduled task.\n\nThe task is created and set up through COM interfaces related to tasks (ITaskService, \nITaskSettings, \u2026 ).\n\nSome information such as the task name and its description is retrieved from the resource.  \nFor example, in one of the sample\u2019s resources, the persistency mode is set to 04 (TaskSchedulerAutorun)  \nwith the persistency data:\n\n%APPDATA%\\Adobe\\adobeup.exe Adobe Acrobat Reader Updater. This task was \ngenerated by Adobe Systems, Inc to keep your Adobe Software up-to-data.  \n\\Adobe\\AcrobatReader.Adobe\n\nIn this example, a scheduled task will be created and set up thus:\n\n\u2022\t Task name: \u201cAdobe Acrobat Reader Updater\u201d\n\n\u2022\t Executable: \u201c%APPDATA%\\Adobe\\adobeup.exe\u201d\n\n\u2022\t The orchestrator will copy the loader received through the named pipe to this location\n\n10\n\nGazing at GazerTurla\u2019s new second stage backdoor\f\u2022\t Task description: \u201cThis task was generated by Adobe Systems, Inc to keep your \n\nAdobe Software up-to-data\u201d\n\n\u2022\t Task folder: \u201c\\Adobe\\AcrobatReader.Adobe\u201d\n\nLast but not least, the task is configured to be started by the task scheduler at any time after  \nits scheduled time has passed. The task will be triggered when the current user logs on.\n\n5: LinkAutorun\nThis persistence method modifies existing LNK files to execute the malware through cmd.exe.\n\nFor each LNK file in the folder given in the resource, the icon and arguments are removed  \nand the path is set to \u201ccmd.exe\u201d with the argument set to:\n\n/q /c start \u201c%s\u201d && start \u201c%s\u201d\n\nIn most of the samples we analyzed, the configuration file specified that the TaskSchedulerAutorun \npersistence method should be used.\n\nLogs\n\nAll three Gazer components log their actions into logfiles. They are encrypted with the same \nalgorithm: 3DES.\n\nIn some versions of Gazer, it is easy to retrieve these logfiles because their filenames are hardcoded \ninto the binaries:\n\n\u2022\t %TEMP%\\CVRG72B5.tmp.cvr: the logs from the loader\n\n\u2022\t %TEMP%\\CVRG1A6B.tmp.cvr: the logs from the orchestrator\n\n\u2022\t %TEMP%\\CVRG38D9.tmp.cvr: the logs from the communication module\n\nEach logfile is structured in the following way:\n\n\u2022\t [LOGSIZE][DECRYPTION_KEY][ENCRYPTED_LOG]\n\n\u2022\t logsize: when this value (2 bytes) is subtracted from the magic value 0xf18b, it gives  \n\nthe encrypted log size\n\n\u2022\t decryption_key: when this 12 bytes blob is XORed with another hardcoded key of 12 bytes,  \n\nit gives the 3DES key that can be used to decrypt the log\n\n\u2022\t encrypted_log: log encrypted with the 3DES algorithm in CBC mode\n\nOnce decrypted, each log entry is formatted in the following way:\n\n|Hour:Min:Sec:Ms| [log ID] [log]\n\n11\n\nGazing at GazerTurla\u2019s new second stage backdoor\fHere is an example with the decrypted orchestrator logfile:\n\nHeaps=32 \n\n\\HKCU\\Software\\Microsoft\\Windows\\\n\n******************[...]****************\nDATE: 25.05.2017\nPID=900 TID=2324  \n\nDLL_PROCESS_ATTACH\n4164\n==================[...]================\nCurrent thread = 2080\nHeap aff0000 [34]\n### PE STORAGE ###\n### PE CRYPTO ###\n### EXTERNAL STORAGE ###\nOk\nPath = \\HKCU\\Software\\Microsoft\\\n\n|10:29:56:197|  [1556]\n|10:29:56:197|  [1557] \n|10:29:56:197|  [1558] \n|10:29:56:197|  [1559] \nC:\\Windows\\Explorer.EXE\n|10:29:56:197|  [1565] \n|10:29:56:197|  [1574] \n|10:29:58:197|  [0137] \n|10:29:58:197|  [0138] \n|10:29:58:197|  [0183] \n|10:29:58:197|  [0189] \n|10:29:58:197|  [0215] \n|10:29:58:197|  [0246] \n|10:29:58:197|  [1688] \n|10:29:58:197|  [0279] \nWindows\\CurrentVersion\\Explorer\\ScreenSaver\n|10:29:58:197|  [0190] \nCurrentVersion\\Explorer\\ScreenSaver\n---FAILED\n|10:29:58:197|  [0338] \nInitializing standart reg storage...\n|10:29:58:197|  [0346] \n|10:29:58:197|  [0190] \nSoftware\\Microsoft\\Windows\\\nCurrentVersion\\Explorer\\ScreenSaver\n|10:29:58:197|  [2605] \n|10:29:58:197|  [0392] \n|10:29:59:666|  [1688] \n|10:29:59:713|  [1473] \n|10:29:59:760|  [1688] \n|10:29:59:775|  [1473] \n|10:29:59:775|  [1688] \n|10:29:59:775|  [1473] \n|10:29:59:791|  [1688] \n|10:29:59:791|  [1473] \n|10:29:59:806|  [1688] \n|10:29:59:806|  [1473] \n|10:29:59:806|  [0270] \n|10:29:59:806|  [0286] \n|10:29:59:806|  [0425] \n|10:29:59:806|  [0463] \n2510664113-1000\n|10:29:59:806|  [0471]\n|10:29:59:806|  [0787] \n|10:29:59:806|  [1473] \n|10:29:59:822|  [0514] \n|10:29:59:822|  [0370] \n|10:29:59:822|  [0482] \n|10:29:59:822|  [1754] \n|10:29:59:822|  [1688] \n|10:29:59:822|  [1473] \n|10:29:59:838|  [0505] \nSZ_172 SC_0(50)  --+- \n|10:29:59:838|  [0625] \n|10:29:59:838|  [0286] \n|10:29:59:838|  [0425] \n|10:29:59:838|  [0463] \n2510664113-1000\n|10:29:59:838|  [0471]\n|10:29:59:838|  [0165] \nCatalogChangeListener-2313-4\n|10:29:59:838|  [0131] \nCatalogChangeListener-2313-4\n|10:29:59:838|  [0041] \n[...]\n\nStorage is empty!\n### EXTERNAL CRYPTO ###\nOk\nOk\nOk\nOk\nOk\nOk\nOk\nOk\nOk\nOk\n08-00-27-90-05-2A\n_GETSID_METHOD_1_\n28 7 8 122\nS-1-5-21-84813077-3085987743-\n\nOk\nOk\n### QUEUES ###\nT Empty\nR Empty\nOk\nOk\nOk\nR #4294967295 PR_100 TR_00000000 \nEX_0\n### TRANSPORT ###\n_GETSID_METHOD_1_\n28 7 25 122\nS-1-5-21-84813077-3085987743-\n\nPipeName = \\\\.\\pipe\\Winsock2\\\n\n\\\\.\\pipe\\Winsock2\\\n\ntrue\n\n12\n\nGazing at GazerTurla\u2019s new second stage backdoor\fNote that in older Gazer versions, the \u201clog ID\u201d was replaced by the name of the current function.  \nWe believe that this log ID is an ID for the function where the log occurs.\n\nWorking Directory\n\nUsing the Windows Registry\n\nAll the files related to Gazer (except the logs) are stored encrypted within the registry. The orchestrator\u2019s  \nresource \u201c109\u201d contains the root storage path (it will be designated %RootStoragePath% in the rest  \nof this paper). In every sample we examined, this resource pointed to the same storage path:\n\nHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ScreenSaver\n\nIf this resource is empty, the registry key above is used by default. Except for RSA keys, all the data  \nin the storage is encrypted2.\n\nSeveral subdirectories (whose names are hardcoded in the binary) are created.\n\n\u2022\t %RootStoragePath%{119D263D-68FC-1942-3CA3-46B23FA652A0}\n\n\u2022\t Object ID: a unique ID to identify the victim\n\n\u2022\t %RootStoragePath%{1DC12691-2B24-2265-435D-735D3B118A70}\n\n\u2022\t Task Queue: linked list of tasks to be executed\n\n\u2022\t %RootStoragePath%{28E74BDA-4327-31B0-17B9-56A66A818C1D}\n\n\u2022\t Plugins\n\n\u2022\t %RootStoragePath%{31AC34A1-2DE2-36AC-1F6E-86F43772841F}\n\n\u2022\t Communication Module: the DLL that communicates with the C&C server\n\n\u2022\t %RootStoragePath%{3CDC155D-398A-646E-1021-23047D9B4366}\n\n\u2022\t Autorun: the persistency method\n\n\u2022\t %RootStoragePath%{4A3130BD-2608-730F-31A7-86D16CE66100}\n\n\u2022\t Local Transport Settings: the computers IPs that are on the same network\n\n\u2022\t %RootStoragePath%{56594FEA-5774-746D-4496-6361266C40D0}\n\n\u2022\t Last Connection: last connection time with the C&C server (structure SYSTEMTIME)\n\n\u2022\t %RootStoragePath%{629336E3-58D6-633B-5182-576588CF702A}\n\n\u2022\t RSA Private Key: generated on the fly; used to decrypt the data from Gazer storage.\n\n\u2022\t %RootStoragePath%{6CEE6FE1-10A2-4C33-7E7F-855A51733C77}\n\n\u2022\t Result Queue: linked list of the tasks results\n\n\u2022\t %RootStoragePath%{81A03BF8-60AA-4A56-253C-449121D61CAF}\n\n\u2022\t Inject Settings: the list of processes to use to try to inject the communications module\n\n\u2022\t %RootStoragePath%{8E9810C5-3014-4678-27EE-3B7A7AC346AF}\n\n\u2022\t C&C servers\n\n2 \n\n See the \u201cGazer Resources\u201d section for details\n\n13\n\nGazing at GazerTurla\u2019s new second stage backdoor\fUsing Alternate Data Streams\n\nIf it is not possible to access the registry, these configuration items are stored using alternate  \ndata streams.\n\nThe function GetVolumeInformation is called to ensure that the volume \u201cC:\\\u201d supports named \nstreams in order to use ADS.\n\nThe same GUIDs as above are used to hide the different data in an ADS for the file (hardcoded  \nin the binary):\n\n\u201c%TEMP%\\KB943729.log\u201d\n\nFor example, here is the full path to access the object ID:\n\n%TEMP%\\KB943729.log:{1DC12691-2B24-2265-435D-735D3B118A70}\n\nOrchestrator\n\nGazer Resources\n\nThe Gazer-related files are stored in the orchestrator\u2019s resources.\n\nFile format\nThere are a total of 11 resources (101 to 111) each structured in the following way:\n\n\u2022\t [DATATYPE][SIZE][DATA][PADDING]\n\n\u2022\t DATATYPE: A dword that specifies the type of data in the resource\n\n\u2022\t 0x0: raw data\n\n\u2022\t 0xFFFFFFFF: empty\n\n\u2022\t 0x4: undefined\n\n\u2022\t 0x1030001: strings array\n\n\u2022\t 0x1: binary\n\n\u2022\t SIZE: the size of the data (without padding)\n\nEncryption\nExcept for resources 101 and 102 which are RSA keys, every resource is compressed with BZip  \nand encrypted with 3DES.\n\n[RSAEncryptedBlob][SignatureBlob][3DESBlob]\n\n\u2022\t RSAEncryptedBlob: The first 1024 bits of the data is a blob that contains a 3DES key. This blob \n\nis encrypted using RSA and can be decrypted using resource 101.\n\n\u2022\t SignatureBlob: The second part of the data is a blob of 1024 bits containing the signature  \n\nof the last part of the data once decrypted.\n\n\u2022\t 3DESBlob: The last part is the effective data, which is encrypted with the 3DES key from  \n\nthe first blob.\n\nEach resource is decrypted on the fly; the signature is compared with the decrypted data to check  \nthe integrity. Decrypted resources that pass this integrity check are encrypted with a new RSA key \ngenerated randomly by the orchestrator code. The private key and the encrypted resource are then \nstored in the registry under a specific GUID subkey.\n\n14\n\nGazing at GazerTurla\u2019s new second stage backdoor\fResources listing\n\u2022\t 101: RSA private key. It is used to decrypt the other resources.\n\n\u2022\t 102: an RSA public key.\n\n\u2022\t 103: empty\n\n\u2022\t 104: unknown\n\n\u2022\t 105: store the persistency information\n\n\u2022\t 106:  the list of processes to use to try to inject the communications module\n\n\u2022\t 107: C&C communication DLL\n\n\u2022\t 108: C&C server list\n\n\u2022\t 109: Gazer working directory path\n\n\u2022\t 110: plugins list\n\n\u2022\t 111: local transport information\n\nTask Execution\n\nWhen a task is retrieved from the C&C, it is either executed by the infected machine or by another \ncomputer on the same network through a P2P mechanism (in the same way this was done  \nin Carbon and Snake).\n\nThe task can be:\n\n\u2022\t file upload\n\n\u2022\t file download\n\n\u2022\t configuration update\n\n\u2022\t command execution\n\nThe result of the task is stored in a queue and forwarded to the module that communicates  \nwith the C&C server when access to the Internet is available.\n\nClasses Hierarchy\n\nThe malware is written in C++ and the RTTI that contains information about the objects used  \nin the code is not overwritten.\n\nThere are 5 abstract classes that have several implementations.\n\nTable 1. \n\nAbstract Class Autorun\n\nClass Name\n\nLinkAutorun\n\nStartupAutorun\n\nShellAutorun\n\nScreenSaverAutorun\n\nTaskSchedulerAutorun\n\nHiddenTaskAutorun\n\n15\n\nGazing at GazerTurla\u2019s new second stage backdoor \n\fTable 2. \n\nAbstract Class Queue\n\nClass Name\n\nTaskQueue\n\nResultQueue\n\nTable 3. \n\nAbstract Class Storage\n\nClass Name\n\nExeStorage\n\nFSStorage\n\nRegStorage\n\nTable 4. \n\nAbstract Class TListenerInterface\n\nClass Name\n\nLTMessageProcessing\n\nCMessageProcessingSystem\n\nTable 5. \n\nAbstract Class TAbstractTransport\n\nClass Name\n\nLTNamedPipe\n\nTNPTransport\n\nCommunication Module\n\nThe communication module is used to retrieve tasks from the C&C server and to dispatch them  \nto the orchestrator.\n\nThis library is injected into a process which can legitimately communicate over the Internet.  \nThe injection library is the same as the one found in the loader to inject the orchestrator  \ninto \u201cexplorer.exe\u201d.\n\nCommunication Initialization\n\nIf a proxy server exists, it is retrieved and used by Gazer to make the HTTP requests. There are two \ndifferent methods used to retrieve this value, either by requesting the following registry key:\n\nHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\n\nor through the function InternetQueryOption with the flag INTERNET_OPTION_PROXY if the proxy \nserver cannot be retrieved through the registry.\n\nThe system user agent is then set up:\n\n\u2022\t the default value of the \u201cHKCU\\Software\\Microsoft\\Windows\\Current Version\\\n\nInternet Settings\\User Agent\u201d key is retrieved;\n\n16\n\nGazing at GazerTurla\u2019s new second stage backdoor \n \n \n \n\f\u2022\t the value keys under \u201cHKLM\\Software\\Microsoft\\Windows\\Current Version\\Internet \nSettings\\5.0\\User Agent\\Post Platform\u201d are enumerated and those that contain  \nthe sub-string \u201cIEAK\u201d are concatenated with the user agent string from the previous step;\n\n\u2022\t in the case that no user agent was found in the registry, the hardcoded UA Mozilla/4.0 \n\n(compatible; MSIE 6.0) is used\n\nBefore attempting any contact with the C&C server, the internet connection is checked by trying  \nto reach the following servers one by one until one returns a HTTP status code 200:\n\n\u2022\t update.microsoft.com\n\n\u2022\t microsoft.com\n\n\u2022\t windowsupdate.microsoft.com\n\n\u2022\t yahoo.com\n\n\u2022\t google.com\n\nC&C server communication\n\nThe malware communicates with its C&C server to retrieve tasks (through HTTP GET requests)  \nand to send the tasks results (through HTTP POST requests).\n\nBefore sending a request to the C&C, the command CMC_GIVE_SETTINGS is sent to the orchestrator \nthrough its communication channel (a named pipe, more on this in the next section). The message \n(MSG) contained in the packet in this case is a single byte set by the orchestrator for the command \nresult status.\n\nThe orchestrator replies on the same channel with the settings retrieved from the working directory \nwith the object id, the list of the C&C servers and the last connection date.\n\nA GET request is performed to retrieve a task from the C&C.\n\nThe parameters of the GET request are chosen from amongst a hardcoded list of keywords that does  \nnot look suspicious. Their values are generated randomly in the charset [a-z0-9] with a random size \nfrom a range given for each parameter:\n\n\u2022\t id [6-12] (As with all other parameters, if this parameter is used in the request, it will have a random \n\nvalue (of letters and digits) with a random size between 6 and 12 characters.)\n\n\u2022\t hash [10-15]\n\n\u2022\t session [10-15]\n\n\u2022\t photo [6-10]\n\n\u2022\t video [6-10]\n\n\u2022\t album [6-10]\n\n\u2022\t client [5-10]\n\n\u2022\t key [5-10]\n\n\u2022\t account [6-12]\n\n\u2022\t member [6-12]\n\n\u2022\t partners [5-10]\n\n\u2022\t adm [6-12]\n\n\u2022\t author [6-12]\n\n17\n\nGazing at GazerTurla\u2019s new second stage backdoor\f\u2022\t contact [6-12]\n\n\u2022\t content [6-12]\n\n\u2022\t user [6-12]\n\nHere are few examples of such requests:\n\nxxx.php?album=2ildzq&key=hdr2a&partners=d2lic33f&session=nurvxd2x0z8bztz&video \n=sg508tujm&photo=4d4idgkxxx.php?photo=he29zms5fc&user=hvbc2a&author=xvfj5r0q \n9c&client=7mvvc&partners=t4mgmuy&adm=lo3r6v4xxx.php?member=ectwzo820&contact \n=2qwi15&album=f1qzoxuef4&session=x0z8bztz8hrs65f&id=t3x0ftu9xxx.php?partners \n=ha9hz9sn12&hash=5740kptk3acmu&album=uef4nm5d&session=dpeb67ip65f&member=arj6 \nx3ljjxxx.php?video=nfqsz570&client=28c7lu2&partners=818eguh70&contact=ibj3xch \n&content=1udm9t799ixr&session=5fjjt61qred9uo\n\nA timeout of 10 minutes is set for each request (send/receive/connect) through InternetSetOption.\n\nOnce the request is sent, the response is handled only if the returned HTTP status code is 404. \nThe content of the response is encrypted and can be decrypted with the private RSA key generated \nby the orchestrator. The response body contains a blob of data and an MD5 hash of the data. The blob \nis hashed and compared to the MD5 to ensure the integrity of the server\u2019s response.\n\nIf the response size is 20 bytes (a blob of 4 bytes + the hash), there are no tasks to retrieve.\n\nA command CMC_TAKE_TASK is sent to the orchestrator with the encrypted task received from \nthe C&C server and its size. The orchestrator will be in charge of executing the task and will send \nthe results to the communication module. Once the blob of the tasks results (encrypted by the \norchestrator) is received, it is sent to the C&C server through a POST request in the same way  \nthat it was done for the GET request (using parameters with random values).\n\nMessages between components\n\nA global named pipe is used for the communication between the different components. The data \nsent through this named pipe is formatted in the following way:\n\nDatatype\n\nID_CMD\n\nMSG\n\nFigure 3.  Message format\n\n\u2022\t DATATYPE: the same constants are used for the resources (check the File Format entry  \n\nin the \u201cResources section\u201d)\n\n\u2022\t ID_CMD: the command name (check below for a complete list)\n\n\u2022\t MSG: the data to be sent\n\nHere is a listing of the different commands:\n\n\u2022\t CMC_TAKE_TASK (ID_CMD: 1)\n\n\u2022\t When a task is retrieved by the C&C server module, it is sent to the orchestrator,  \n\nwhich stores the task in the task queue.\n\n\u2022\t CMC_TAKE_LOADER_BODY (ID_CMD: 2)\n\n18\n\nGazing at GazerTurla\u2019s new second stage backdoor03148 \n\f\u2022\t Wipe Gazer\u2019s original loader file, clean persistency and set up a copy of the loader  \n\nand its persistency according to one of the resources (check persistency part for details).\n\n\u2022\t CMC_GIVE_RESULT (ID_CMD: 4)\n\n\u2022\t When this message is received, the orchestrator will retrieve the task\u2019s result from  \n\nthe result queue, compress and encrypt it using the server\u2019s public RSA key (the one  \nfrom the resource 102) and send the blob to the communication module which will send \nthe whole result to the server through a POST request.\n\n\u2022\t CMC_GIVE_SETTINGS (ID_CMD: 5)\n\n\u2022\t The communication module sends this message to the orchestrator to request  \n\nthe information needed to contact the server (list of the servers to contact, the last \nconnection time and the victim ID).\n\n\u2022\t CMC_TAKE_CONFIRM_RESULT (ID_CMD: 6)\n\n\u2022\t When the communication module sends a task\u2019s result to the server, a message is sent  \n\nto the orchestrator that will remove the task\u2019s result from the queue.\n\n\u2022\t CMC_TAKE_CAN_NOT_WORK (ID_CMD: 7)\n\n\u2022\t When an operation has failed (for example, if the communication module cannot correctly \nparse the data received from the orchestrator), this message is sent to the orchestrator \nwith the last error code. The error code will be added to the logfile.\n\n\u2022\t CMC_TAKE_UNINSTALL (ID_CMD: 8)\n\n\u2022\t Used to wipe a file from the disk.\n\n\u2022\t CMC_TAKE_NOP (ID_CMD: 9)\n\n\u2022\t No operation\n\n\u2022\t CMC_NO_CONNECT_TO_GAZER (ID_CMD: 0xA)\n\n\u2022\t This command is sent to the orchestrator when the communication module cannot \ncontact any of the servers. In this case, if a pending task\u2019s results are in the queue,  \nthey are stored encrypted in Gazer\u2019s storage.\n\n\u2022\t CMC_TAKE_LAST_CONNECTION (ID_CMD: 0xB)\n\n\u2022\t This command is sent from the communication module to the orchestrator each time  \n\na connection is established to the C&C server. It contains a structure SystemTime (filled \nwith the current system time). Once the message is received by the orchestrator,  \nthe last connection date is stored compressed and encrypted in the Gazer storage  \n(either the registry or ADS).\n\n\u2022\t CMC_GIVE_CACHE / CMC_TAKE_CACHE (ID_CMD: 0xC / 0xD)\n\n\u2022\t Not implemented\n\n19\n\nGazing at GazerTurla\u2019s new second stage backdoor\fGazer verSIonS\n\nFour different versions have been identified.\n\nIn the first version, the function used to write logs has as its parameter the real function name  \nwhere the log occurs. There were also different methods used to inject code (the one documented  \nin this whitepaper and one based on window injection). \n\nIn a second version, the function names used as parameters are replaced by an ID and only one method  \nis used for code injection. Also, the string \u201cNO OLD METHODS\u201d appears in this part of the code.\n\nSome samples from the first versions were signed with a valid certificate issued by Comodo for \u201cSolid \nLoop Ltd\u201d. The compilation date appears to be 2002 but is likely to be faked because the certificate  \nwas issued in 2015.\n\nThe latest versions are signed with a different certificate: \u201cUltimate Computer Support Ltd\u201d.\n\nFigure 4. \n\nCertificates used to sign the malware variants\n\nSome efforts have been made to obfuscate strings that can be used as IoCs. The mutex name and \nthe named pipe do not appear in cleartext anymore; they are now encoded with a XOR key. On the \nprevious versions, the logfile names were hardcoded in the binary. The function GetTempFileNameA \nis now used to generate a random filename. The C&C server returns a 404 or 502 status code page, \nwhereas it was only a 404 in the previous versions.\n\nIn the latest versions compiled in 2017, the log messages are different (although they have the same \nmeaning). For example: \u201cPE STORAGE\u201d is replaced by \u201cEXE SHELTER\u201d, \u201cPE CRYPTO\u201d by \u201cEXE \nCIPHER\u201d etc\u2026 \n\nLast but not least, the compilation timestamp seems not to be faked anymore.\n\nIn conclusion, Gazer is a very sophisticated piece of malware that has been used against different \ntargets in several countries around the world. Through the different versions we found and analyzed, \nwe can see that this malicious backdoor is still being actively developed and used by its creators.\n\nIndicators of Compromise can also be found on github. For any inquiries, or to make sample submissions related \nto the subject, contact us at: threatintel@eset.com. \n\n20\n\nGazing at GazerTurla\u2019s new second stage backdoor \n\fIoCS\n\nFilenames\n\n\u2022\t %TEMP%\\KB943729.log\n\u2022\t %TEMP%\\CVRG72B5.tmp.cvr\n\u2022\t %TEMP%\\CVRG1A6B.tmp.cvr\n\u2022\t %TEMP%\\CVRG38D9.tmp.cvr\n\u2022\t %TEMP%\\~DF1E06.tmp\n\u2022\t %HOMEPATH%\\ntuser.dat.LOG3\n\n\u2022\t %HOMEPATH%\\AppData\\Local\\Adobe\\AdobeUpdater.exe\n\nRegistry keys\n\n\u2022\t HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ScreenSaver\n\n\u2022\t HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Explorer\\ScreenSaver\n\nC&C URLs\n\n\u2022\t daybreakhealthcare.co.uk/wp-includes/themees.php\n\u2022\t simplecreative.design/wp-content/plugins/calculated-fields-form/single.php\n\u2022\t 169.255.137.203/rss_0.php\n\u2022\t outletpiumini.springwaterfeatures.com/wp-includes/pomo/settings.php\n\u2022\t zerogov.com/wp-content/plugins.deactivate/paypal-donations/src/PaypalDonations/SimpleSubsribe.\n\nphp\n\n\u2022\t ales.ball-mill.es/ckfinder/core/connector/php/php4/CommandHandler/CommandHandler.php\n\u2022\t dyskurs.com.ua/wp-admin/includes/map-menu.php\n\u2022\t warrixmalaysia.com.my/wp-content/plugins/jetpack/modules/contact-form/grunion-table-form.php\n\u2022\t 217.171.86.137/config.php\n\u2022\t 217.171.86.137/rss_0.php\n\u2022\t shinestars-lifestyle.com/old_shinstar/includes/old/front_footer.old.php\n\u2022\t www.aviasiya.com/murad.by/life/wp-content/plugins/wp-accounting/inc/pages/page-search.php\n\u2022\t baby.greenweb.co.il/wp-content/themes/san-kloud/admin.php\n\u2022\t soligro.com/wp-includes/pomo/db.php\n\u2022\t giadinhvabe.net/wp-content/themes/viettemp/out/css/class.php\n\u2022\t tekfordummies.com/wp-content/plugins/social-auto-poster/includes/libraries/delicious/Delicious.php\n\u2022\t kennynguyen.esy.es/wp-content/plugins/wp-statistics/vendor/maxmind-db/reader/tests/MaxMind/Db/\n\ntest/Reader/BuildTest.php\n\n\u2022\t sonneteck.com/wp-content/plugins/yith-woocommerce-wishlist/plugin-fw/licence/templates/panel/\n\nactivation/activation.php\n\n\u2022\t chagiocaxuanson.esy.es/wp-content/plugins/nextgen-gallery/products/photocrati_nextgen/modules/\n\nngglegacy/admin/templates/manage_gallery/gallery_preview_page_field.old.php\n\n\u2022\t hotnews.16mb.com/wp-content/themes/twentysixteen/template-parts/content-header.php\n\u2022\t zszinhyosz.pe.hu/wp-content/themes/twentyfourteen/page-templates/full-hight.php\n\n\u2022\t weandcats.com/wp-content/plugins/broken-link-checker/modules/checkers/http-module.php\n\nMutexes\n\n{531511FA-190D-5D85-8A4A-279F2F592CC7}\n\n21\n\nGazing at GazerTurla\u2019s new second stage backdoor\fHashes\n\nTable 6. \n\nGazer sample hashes\n\nSHA1 hash \n\nComponent\n\nCompilation \nTime\n\nCertificate\n\nEset Detection \nName\n\n27FA78DE705EbAA4b11C4b5FE7277F91906b3F92\n\nGazer wiper x32\n\n35F205367E2E5F8A121925bbAE6FF07626b526A7\n\nGazer loader x32\n\nb151CD7C4F9E53A8DCbDEb7CE61CCDD146Eb68Ab\n\nGazer loader x32\n\nE40bb5bEEC5678537E8FE537F872b2AD6b77E08A\n\nGazer loader x32\n\n522E5F02C06AD215C9D0C23C5A6A523D34AE4E91\n\nGazer loader x64\n\nC380038A57FFb8C064851b898F630312FAbCbbA7\n\nGazer loader x64\n\n267F144D771b4E2832798485108DECD505Cb824A\n\nGazer loader x64\n\n52F6D09CCCDbC38D66C184521E7CCF6b28C4b4D9\n\nGazer loader x32\n\n475C59744ACCb09724DAE610763b7284646Ab63F\n\nGazer loader x32\n\n22542A3245D52b7bCDb3EAEF5b8b2693F451F497\n\nGazer loader x32\n\n2b9FAA8b0FCADAC710C7b2b93D492FF1028b5291\n\nGazer loader x64\n\nE05Ab6978C17724b7C874F44F8A6CbFb1C56418D\n\nGazer loader x64\n\n6DEC3438D212b67356200bbAC5EC7FA41C716D86\n\nGazer loader x64\n\nb548863DF838069455A76D2A63327434C02D0D9D\n\nGazer loader x64\n\n07/04/2016 \n\n15:04:24\n\n05/02/2002 \n\n17:36:10\n\n05/02/2002 \n\n17:36:10\n\n05/02/2002 \n\n17:36:10\n\n05/02/2002 \n\n17:36:26\n\n05/02/2002 \n\n17:36:26\n\n05/02/2002 \n\n17:36:26\n\n04/10/2002 \n\n18:31:37\n\n04/10/2002 \n\n18:31:37\n\n04/10/2002 \n\n18:31:37\n\n04/10/2002 \n\n18:34:18\n\n04/10/2002 \n\n18:34:18\n\n04/10/2002 \n\n18:34:18\n\n09/01/2016 \n\n19:30:10\n\nnot signed\n\nWin32/Turla.CL\n\nadmin@solidloop.org \n\nvalid from 14/10/2015 \n\nWin32/Turla.CC\n\nto 14/10/2016\nadmin@solidloop.org \n\nvalid from 14/10/2015 \n\nWin32/Turla.CC\n\nto 14/10/2016\nadmin@solidloop.org \n\nvalid from 14/10/2015 \n\nWin32/Turla.CC\n\nto 14/10/2016\nadmin@solidloop.org \n\nvalid from 14/10/2015 \n\nWin64/Turla.AA\n\nto 14/10/2016\nadmin@solidloop.org \n\nvalid from 14/10/2015 \n\nWin64/Turla.AA\n\nto 14/10/2016\nadmin@solidloop.org \n\nvalid from 14/10/2015 \n\nWin64/Turla.AA\n\nto 14/10/2016\nadmin@solidloop.org \n\nvalid from 14/10/2015 \n\nWin32/Turla.CC\n\nto 14/10/2016\nadmin@solidloop.org \n\nvalid from 14/10/2015 \n\nWin32/Turla.CC\n\nto 14/10/2016\nadmin@solidloop.org \n\nvalid from 14/10/2015 \n\nWin32/Turla.CC\n\nto 14/10/2016\nadmin@solidloop.org \n\nvalid from 14/10/2015 \n\nWin64/Turla.AA\n\nto 14/10/2016\nadmin@solidloop.org \n\nvalid from 14/10/2015 \n\nWin64/Turla.AA\n\nto 14/10/2016\nadmin@solidloop.org \n\nvalid from 14/10/2015 \n\nWin64/Turla.AA\n\nto 14/10/2016\n\nnot signed\n\nWin64/Turla.AA\n\nadmin@\n\nC3E6511377DFE85A34E19b33575870DDA8884C3C\n\nGazer loader x64\n\n06/02/2016 \n\nultimatecomsup.biz \n\n19:29:15\n\nvalid from 16/12/2015 \n\nWin64/Turla.AA\n\n9FF4F59CA26388C37D0b1F0E0b22322D926E294A\n\nGazer loader x64\n\nto 16/12/2017\nadmin@\n\n16/02/2016 \n\nultimatecomsup.biz \n\n16:00:44\n\nvalid from 16/12/2015 \n\nWin64/Turla.AA\n\nto 16/12/2017\n\n22\n\nGazing at GazerTurla\u2019s new second stage backdoor \n\fSHA1 hash \n\nComponent\n\nCompilation \nTime\n\nCertificate\n\nadmin@\n\nEset Detection \nName\n\n029AA51549D0b9222Db49A53D2604D79AD1C1E59\n\nGazer loader x64\n\n18/02/2016 \n\nultimatecomsup.biz \n\n15:29:58\n\nvalid from 16/12/2015 \n\nWin64/Turla.AA\n\nto 16/12/2017\nadmin@\n\nCECC70F2b2D50269191336219A8F893D45F5E979\n\nGazer loader x64\n\n01/01/2017 \n\nultimatecomsup.biz \n\n08:39:30\n\nvalid from 16/12/2015 \n\nWin64/Turla.AG\n\nto 16/12/2017\nadmin@\n\n7FAC4FC130637AFAb31C56CE0A01E555D5DEA40D\n\nGazer loader x64\n\n11/06/2017 \n\nultimatecomsup.biz \n\n23:43:51\n\nvalid from 16/12/2015 \n\nWin64/Turla.AD\n\nto 16/12/2017\nadmin@\n\n5838A51426CA6095b1C92b87E1bE22276C21A044\n\nGazer loader x32\n\n19/06/2017 \n\nultimatecomsup.biz \n\n01:28:51\n\nvalid from 16/12/2015 \n\nWin32/Turla.CF\n\nto 16/12/2017\nadmin@\n\n3944253F6b7019EED496FAD756F4651bE0E282b4\n\nGazer loader x64\n\n19/06/2017 \n\nultimatecomsup.biz \n\n01:30:00\n\nvalid from 16/12/2015 \n\nWin64/Turla.AD\n\n228DA957A9ED661E17E00EFbA8E923FD17FAE054\n\n295D142A7bDCED124FDCC8EDFE49b9F3ACCEAb8A\n\n0F97F599FAb7F8057424340C246D3A836C141782\n\nDbb185E493A0FDC959763533D86D73F986409F1b\n\n4701828DEE543b994ED2578b9E0D3991F22bD827\n\n6FD611667bA19691958b5b72673b9b802EDD7FF8\n\nFCAbEb735C51E2b8Eb6Fb07bDA8b95401D069bD8\n\n75831DF9CbCFD7bF812511148D2A0F117324A75F\n\nbAE3AE65C32838Fb52A0F5AD2CDE8659D2bFF9F3\n\n37FF6841419ADC51EEb8756660b2Fb46F3Eb24ED\n\n9E6DE3577b463451b7AFCE24Ab646EF62AD6C2bD\n\n795C6EE27b147FF0A05C0477F70477E315916E0E\n\n8184AD9D6bbD03E99A397F8E925FA66CFbE5CF1b\n\n7CED96b08D7593E28FEE616ECCbC6338896517CF\n\n63C534630C2CE0070AD203F9704F1526E83AE586\n\n23F1E3bE3175D49E7b262CD88CFD517694DCbA18\n\nGazer \n\norchestrator x32\nGazer \n\norchestrator x32\nGazer \n\norchestrator x32\nGazer \n\norchestrator x32\nGazer \n\norchestrator x64\nGazer \n\norchestrator x64\nGazer \n\norchestrator x64\nGazer \n\norchestrator x32\nGazer \n\norchestrator x32\nGazer \n\norchestrator x64\nGazer \n\norchestrator x64\nGazer \n\norchestrator x64\nGazer \n\norchestrator x64\nGazer \n\norchestrator x64\nGazer \n\norchestrator x64\nGazer \n\n05/02/2002 \n\n17:31:28\n05/02/2002 \n\n17:31:28\n05/02/2002 \n\n17:31:28\n05/02/2002 \n\n17:31:28\n05/02/2002 \n\n17:34:25\n05/02/2002 \n\n17:34:25\n05/02/2002 \n\n17:34:25\n04/10/2002 \n\n18:31:28\n04/10/2002 \n\n18:31:28\n04/10/2002 \n\n18:33:02\n04/10/2002 \n\n18:33:02\n04/10/2002 \n\n18:33:02\n09/01/2016 \n\n19:28:29\n06/02/2016 \n\n19:29:04\n06/02/2016 \n\n19:29:04\n18/02/2016 \n\norchestrator x64\n\n15:29:32\n\n23\n\nto 16/12/2017\n\nnot signed\n\nWin32/Turla.CF\n\nnot signed\n\nWin32/Turla.CF\n\nnot signed\n\nWin32/Turla.CF\n\nnot signed\n\nWin32/Turla.CC\n\nnot signed\n\nWin64/Turla.AA\n\nnot signed\n\nWin64/Turla.AA\n\nnot signed\n\nWin64/Turla.AA\n\nnot signed\n\nWin32/Turla.CC\n\nnot signed\n\nWin32/Turla.CC\n\nnot signed\n\nWin64/Turla.AA\n\nnot signed\n\nWin64/Turla.AA\n\nnot signed\n\nWin64/Turla.AA\n\nnot signed\n\nWin64/Turla.AA\n\nnot signed\n\nWin64/Turla.AA\n\nnot signed\n\nWin64/Turla.AA\n\nnot signed\n\nWin64/Turla.AA\n\nGazing at GazerTurla\u2019s new second stage backdoor\fCompilation \nTime\n\nCertificate\n\nEset Detection \nName\n\nnot signed\n\nWin64/Turla.AG\n\nnot signed\n\nWin64/Turla.AD\n\nnot signed\n\nWin32/Turla.CF\n\nnot signed\n\nWin64/Turla.AD\n\nadmin@solidloop.org \n\nvalid from 14/10/2015 \n\nWin64/Turla.AH\n\nto 14/10/2016\nadmin@solidloop.org \n\nvalid from 14/10/2015 \n\nWin32/Turla.CC\n\nto 14/10/2016\n\nnot signed\n\nWin32/Turla.CC\n\nnot signed\n\nWin32/Turla.CF\n\nadmin@solidloop.org \n\nvalid from 14/10/2015 \n\nWin32/Turla.CL\n\nto 14/10/2016\n\nSHA1 hash \n\n7A6F1486269AbDC1D658Db618DC3C6F2AC85A4A7\n\n11b35320Fb1CF21D2E57770D8D8b237Eb4330EAA\n\nE8A2bAD87027F2bF3ECAE477F805DE13FCCC0181\n\n950F0b0C7701835C5FbDb6C5698A04b8AFE068E6\n\nComponent\n\nGazer \n\norchestrator x64\nGazer \n\norchestrator x64\nGazer \n\norchestrator x32\nGazer \n\n01/01/2017 \n\n08:39:19\n11/06/2017 \n\n23:42:28\n19/06/2017 \n\n01:28:21\n19/06/2017 \n\norchestrator x64\n\n01:29:46\n\nA5EEC8C6AADF784994bF68D9D937bb7AF3684D5C Gazer comm x64\n\n411EF895FE8DD4E040E8bF4048F4327F917E5724\n\nGazer comm x32\n\nC1288DF9022bCD2C0A217b1536DFA83928768D06\n\nGazer comm x32\n\n4b6EF62D5D59F2FE7F245DD3042DC7b83E3CC923\n\nGazer comm x32\n\n7F54F9F2A6909062988AE87C1337F3CF38D68D35\n\nGazer wiper x32\n\n05/02/2002 \n\n17:57:07\n\n05/02/2002 \n\n17:58:22\n\n06/02/2016 \n\n19:23:52\n11/06/2017 \n\n23:44:24\n\n05/02/2002 \n\n17:39:07\n\n24\n\nGazing at GazerTurla\u2019s new second stage backdoor\fappendICeS\n\nFunction names\n\nThere are a few samples of Gazer that use the current function name as first parameter for the log \nfunction. Here is a list of some function names used in Gazer:\n\n\u2022\t AutorunManager Class\n\n\u2022\t AutorunManager::~AutorunManger\n\u2022\t AutorunManager::Init\n\u2022\t AutorunManger::ReInit\n\u2022\t AutorunManager::BuildAutorunSettings\n\u2022\t AutorunManager::FreeAutorunsSettings\n\u2022\t AutorunManager::FullCheck\n\u2022\t AutorunManager::StartAutorunEx\n\u2022\t AutorunManager::FullStart\n\n\u2022\t HiddenTaskAutorun Class\n\n\u2022\t HiddenTaskAutorun::IsPathsEqual\n\n\u2022\t LinkAutorun Class\n\n\u2022\t LinkAutorunClass::InfectLnkFile\n\u2022\t LinkAutorunClass::ClearLnkFile\n\u2022\t LinkAutorunClass::CheckLnkFile\n\n\u2022\t RemoteImport32 Class\n\n\u2022\t RemoteImport32::RemoteImport32\n\u2022\t RemoteImport32::GetRemoteProcAddress\n\u2022\t RemoteImport32::GetRemoteModuleHandle\n\n\u2022\t ScreenSaverAutorun Class\n\n\u2022\t ScreenSaverAutorun::ChangeScreenSaver\n\u2022\t ScreenSaverAutorun::WndProc1\n\u2022\t ScreenSaverAutorun::GetMessageThreadProc\n\u2022\t ScreenSaverAutorun::CreateHiddenWindow\n\u2022\t ScreenSaverAutorun::CloseHiddenWindow\n\n\u2022\t ShellAutorun Class\n\n\u2022\t ShellAutorun::AutorunInstallEx\n\u2022\t ShellAutorun::AutorunUninstallEx\n\u2022\t ShellAutorun::AutorunCheckEx\n\u2022\t ShellAutorun::IsPathsEqual\n\n\u2022\t StartupAutorun Class\n\n\u2022\t StartupAutorun::AutorunInstallEx\n\u2022\t StartupAutorun::AutorunUninstallEx\n\u2022\t StartupAutorun::AutorunCheckEx\n\u2022\t StartupAutorun::IsPathsEqual\n\n\u2022\t TaskScheduler20Autorun Class\n\n\u2022\t TaskScheduler20Autorun::Init\n\u2022\t TaskScheduler20Autorun::AutorunCheckEx\n\u2022\t TaskScheduler20Autorun::AutorunInstallEx\n\u2022\t TaskScheduler20Autorun::AutorunUninstallEx\n\u2022\t TaskScheduler20Autorun::IsPathsEqual\n\n25\n\nGazing at GazerTurla\u2019s new second stage backdoor\f\u2022\t DllInjector Class\n\n\u2022\t DllInjector::LoadDllToProcess\n\u2022\t DllInjector::GetProcHandle\n\u2022\t DllInjector::CheckDllAndSetPlatform\n\u2022\t DllInjector::CopyDllFromBuffer\n\u2022\t DllInjector::MapLibrary\n\u2022\t DllInjector::Map86Library_tox64\n\u2022\t DllInjector::CallEntryPoint\n\u2022\t DllInjector::FindDllImageBase\n\u2022\t DllInjector::WindowInject\n\n\u2022\t InjectManager Class\n\n\u2022\t InjectManager::~InjectManager\n\u2022\t InjectManager::BuildInjectSettingsList\n\u2022\t InjectManager::FreeInjectSettingsList\n\u2022\t InjectManager::Stop\n\u2022\t InjectManager::DetachAll\n\u2022\t InjectManager::FindAndInjectInVictim\n\u2022\t InjectManager::FindProcessSimple2\n\u2022\t InjectManager::LoadNtdll\n\u2022\t InjectManager::UnLoadNtdll\n\u2022\t InjectManager::LoadWinsta\n\u2022\t InjectManager::UnLoadWinsta\n\u2022\t InjectManager::SetStatusTransportDll\n\u2022\t InjectManager::GetTransportState\n\u2022\t InjectManager::DestroyManuallyCreatedVictim\n\u2022\t InjectManager::VictimManualCreateIE\n\n\u2022\t TNPTransport Class\n\n\u2022\t TNPTransport::Init\n\u2022\t TNPTransport::ReInit\n\u2022\t TNPTransport::~TNPTransport\n\u2022\t TNPTransport::Receive\n\u2022\t TNPTransport::RunServer\n\u2022\t TNPTransport::ServerProc\n\n\u2022\t ExeStorage Class\n\n\u2022\t ExeStorage::Migrate\n\u2022\t ExeStorage::SecureHeapFree\n\n\u2022\t FSStorage Class\n\n\u2022\t FSStorage::~FSStorage\n\u2022\t FSStorage::Init\n\u2022\t FSStorage::GetBlock\n\u2022\t FSStorage::GetListBlock\n\u2022\t FSStorage::Migrate\n\u2022\t FSStorage::SecureHeapFree\n\u2022\t FSStorage::Update\n\n\u2022\t FSStorage::Empty\n\n\u2022\t RegStorage Class\n\n\u2022\t RegStorage::~RegStorage\n\u2022\t RegStorage::Init\n\u2022\t RegStorage::FreeList\n\n26\n\nGazing at GazerTurla\u2019s new second stage backdoor\f\u2022\t RegStorage::GetListBlock\n\u2022\t RegStorage::DeleteListBlock\n\u2022\t RegStorage::Migrate\n\u2022\t RegStorage::SecureHeapFree\n\u2022\t RegStorage::Update\n\u2022\t RegStorage::Empty\n\n\u2022\t ResultQueue Class\n\n\u2022\t ResultQueue::~ResultQueue\n\u2022\t ResultQueue::DumpQueueToStorage\n\u2022\t ResultQueue::RestoreFromStorage\n\u2022\t ResultQueue::ClearQueue\n\u2022\t ResultQueue::RemoveResult\n\u2022\t ResultQueue::GetNextResultToSendWithModule\n\u2022\t ResultQueue::SetPredeterminedResult\n\u2022\t ResultQueue::print\n\n\u2022\t TaskQueue Class\n\n\u2022\t TaskQueue::~TaskQueue\n\u2022\t TaskQueue::DumpQueueToStorage\n\u2022\t TaskQueue::RestoreFromStorage\n\u2022\t TaskQueue::ClearQueue\n\u2022\t TaskQueue::RemoveCompletedTasks\n\u2022\t TaskQueue::print\n\n\u2022\t CExecutionSubsystem Class\n\n\u2022\t CExecutionSubsystem::~CExecutionSubsystem\n\u2022\t CExecutionSubsystem::Stop\n\u2022\t CExecutionSubsystem::TaskExecusion\n\u2022\t CExecutionSubsystem::TaskConfigure\n\u2022\t CExecutionSubsystem::TaskUpload\n\u2022\t CExecutionSubsystem::TaskDownload\n\u2022\t CExecutionSubsystem::TaskReplacement\n\u2022\t CExecutionSubsystem::TaskDelete\n\u2022\t CExecutionSubsystem::TaskPacketLocalTransport\n\u2022\t CExecutionSubsystem::FinishTask\n\u2022\t CExecutionSubsystem::PushTaskResult\n\u2022\t CExecutionSubsystem::UpdateStorage\n\n\u2022\t CMessageProcessingSystem Class\n\n\u2022\t CMessageProcessingSystem::~CMessageProcessing\n\u2022\t CMessageProcessingSystem::ListenerCallBack\n\u2022\t CMessageProcessingSystem::WaitShutdownModule\n\u2022\t CMessageProcessingSystem::SetCompulsorySMC\n\u2022\t CMessageProcessingSystem::UnSetCompulsorySMC\n\u2022\t CMessageProcessingSystem::IsCompulsorySMC\n\u2022\t CMessageProcessingSystem::GetCompulsorySMC\n\u2022\t CMessageProcessingSystem::Receive_TAKE_NOP\n\u2022\t CMessageProcessingSystem::Receive_GIVE_SETTINGS\n\u2022\t CMessageProcessingSystem::Receive_TAKE_CAN_NOT_WORK\n\u2022\t CMessageProcessingSystem::Receive_GIVE_CACHE\n\u2022\t CMessageProcessingSystem::Receive_TAKE_CACHE\n\u2022\t CMessageProcessingSystem::Receive_TAKE_TASK\n\u2022\t CMessageProcessingSystem::Receive_GIVE_RESULT\n\n27\n\nGazing at GazerTurla\u2019s new second stage backdoor\f\u2022\t CMessageProcessingSystem::Receive_TAKE_CONFIRM_RESULT\n\u2022\t CMessageProcessingSystem::Receive_TAKE_LOADER_BODY\n\u2022\t CMessageProcessingSystem::Receive_TAKE_UNINSTALL\n\u2022\t CMessageProcessingSystem::Receive_NO_CONNECT_TO_Gazer\n\u2022\t CMessageProcessingSystem::Receive_TAKE_LAST_CONNECTION\n\u2022\t CMessageProcessingSystem::Send_TAKE_FIN\n\u2022\t CMessageProcessingSystem::Send_TAKE_SHUTDOWN\n\u2022\t CMessageProcessingSystem::Send_TAKE_SETTINGS\n\u2022\t CMessageProcessingSystem::Send_TAKE_RESULT\n\n\u2022\t Crypto Class\n\n\u2022\t Crypto::GetPublicKey\n\u2022\t Crypto::EncryptRSA\n\u2022\t Crypto::Sign\n\u2022\t Crypto::EncryptAndSignBufferRSAEx\n\u2022\t Crypto::DecryptRSA\n\u2022\t Crypto::Verify\n\u2022\t Crypto::DecryptAndVerifyBufferRSAEx\n\u2022\t Crypto::EncryptAndSignBufferRSA1\n\u2022\t Crypto::EncryptAndSignBufferRSAC\n\u2022\t Crypto::DecryptAndVerifyBufferRSA0\n\u2022\t Crypto::DecryptAndVerifyBufferRSA1\n\u2022\t Crypto::DecryptAndVerifyBufferRSAL\n\u2022\t Crypto::VerifyLoaderFile\n\u2022\t Crypto::VerifyLoader\n\u2022\t Crypto::CompressBuffer\n\u2022\t Crypto::DecompressBuffer\n\n\u2022\t LTManager Class\n\n\u2022\t LTManager::~LTManager\n\u2022\t LTManager::Init\n\u2022\t LTManager::GetResultFromQueue\n\u2022\t LTManager::SetResultToCache\n\u2022\t LTManager::GetTaskFromCache\n\u2022\t LTManager::SetTaskToQueue\n\u2022\t LTManager::IsSendPacketFurtherOnRoute\n\u2022\t LTManager::SendPacketNextRouteUnit\n\u2022\t LTManager::SetCache\n\u2022\t LTManager::SetPacket\n\u2022\t LTManager::DumpCacheToStorage\n\u2022\t LTManager::DeSerializeCache\n\u2022\t LTManager::DeSerializePacket\n\u2022\t LTManager::DeSerializeRoute\n\u2022\t LTManager::DeSerializeTask\n\u2022\t LTManager::DeSerializeResult\n\u2022\t LTManager::SerializeCache\n\u2022\t LTManager::SerializePacket\n\u2022\t LTManager::SerialiazeRoute\n\u2022\t LTManager::SerializeTask\n\u2022\t LTManager::SerializeResult\n\u2022\t LTManager::ClearCache\n\u2022\t LTManager::ClearPacket\n\u2022\t LTManager::ClearRoute\n\n28\n\nGazing at GazerTurla\u2019s new second stage backdoor\f\u2022\t LTManager::ClearTask\n\u2022\t LTManager::ClearResult\n\u2022\t LTManager::PrintCache\n\u2022\t LTManager::CreateEvents\n\u2022\t LTManager::SetEvents\n\u2022\t LTManager::ResetEvents\n\u2022\t LTManager::WaitEvents\n\u2022\t LTManager::DeleteEvents\n\n\u2022\t LTMessageProcessing Class\n\n\u2022\t LTMessageProcessing::ListenerCallBack\n\u2022\t LTMessageProcessing::Send_TAKE_OK\n\u2022\t LTMessageProcessing::Send_TAKE_ERROR_CRYPT\n\u2022\t LTMessageProcessing::Send_TAKE_ERROR_UNKNOWN\n\n\u2022\t LTNamedPipe Class\n\n\u2022\t LTNamedPipe::ReInit\n\u2022\t LTNamedPipe::BuildLocalTransportSettings\n\u2022\t LTNamedPipe::~LTNamedPipe\n\u2022\t LTNamedPipe::Receive\n\u2022\t LTNamedPipe::RunServer\n\u2022\t LTNamedPipe::Stop\n\u2022\t LTNamedPipe::CreateNewNPInstance\n\u2022\t LTNamedPipe::ServerProc\n\u2022\t LTNamedPipe::ClientCommunication\n\nYara rules\n\nimport \u201cpe\u201d\nimport \u201cmath\u201d\nimport \u201chash\u201d\n\nrule Gazer_certificate_subject {\n  condition:\n    for any i in (0..pe.number_of_signatures - 1):\n       (pe.signatures[i].subject contains \u201cSolid Loop\u201d or \npe.signatures[i].subject contains \u201cUltimate Computer Support\u201d)\n}\n\nrule Gazer_certificate\n{\n  strings:\n    $certif1 = {52 76 a4 53 cd 70 9c 18 da 65 15 7e 5f 1f de 02}\n    $certif2 = {12 90 f2 41 d9 b2 80 af 77 fc da 12 c6 b4 96 9c}\n  condition:\n    (uint16(0) == 0x5a4d) and 1 of them and filesize < 2MB\n}\n\nrule Gazer_logfile_name\n{\n    strings:\n     $s1 = \u201cCVRG72B5.tmp.cvr\u201d\n     $s2 = \u201cCVRG1A6B.tmp.cvr\u201d\n     $s3 = \u201cCVRG38D9.tmp.cvr\u201d\n    condition:\n    (uint16(0) == 0x5a4d) and 1 of them\n}\n\n29\n\nGazing at GazerTurla\u2019s new second stage backdoor\f"], "URLs": [], "weight": 0.0}