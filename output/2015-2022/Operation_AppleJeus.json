{"rule_id": 282, "name": "Operation_AppleJeus", "description": "-", "references": [], "File_Names": ["msndll.dat", "00.msi", "libertyvps.net", "uploadmgrsvc.dll", "domains4bitcoins.com", "Installer.msi", "cellasllc.com", "dloader.pdb", "temp.gif", "msndll.tmp", "namecheap.com", "njal.la", "msncf.dat", "00.dmg", "ServerDll.pdb", "black.host", "celasllc.com", "msn.exe", "msndll.log", "Updater.exe", "svc.dll", "uploadmgr.dat"], "MD5_Hashes": ["E1ed584a672cab33af29114576ad6cce", "d8484469587756ce0d10a09027044808", "9e740241ca2acdc79f30ad2c3f50990a", "D7089e6bc8bd137a7241a7ad297f975d", "0a15a33844c9df11f12a4889ae7b7e4b", "21694c8db6234df74102e8b5994b7627", "4126e1f34cf282c354e17587bb6e8da3", "81c3a3c5a0129477b59397173fdc0b01", "6cb34af551b3fb63df6c9b86900cf044", "cea1a63656fb199dd5ab90528188e87c", "5ad7d35f0617595f26d565a3b7ebc6d0", "56f5088f488e50999ee6cced1f5dd6aa", "0bdb652bbe15942e866083f29fb6dd62", "D8484469587756ce0d10a09027044808", "b054a7382adf6b774b15f52d971f3799", "14b6d24873f19332701177208f85e776", "e1ed584a672cab33af29114576ad6cce", "94dfcabd8ba5ca94828cd5a88d6ed488", "bbbcf6da5a4c352e8846bf91c3358d5c", "abec84286df80704b823e698199d89f7", "c501ea6c56ba9133c3c26a7d5ed4ce49", "cafda7b3e9a4f86d4bd005075040a712", "d7089e6bc8bd137a7241a7ad297f975d", "cd6796f324ecb7cf34bc9bc38ce4e649"], "SHA1_Hashes": [], "SHA256_Hashes": [], "Registry_Entries": ["HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\u201d. It seems that such values only exist from\n\nWindows 10, so we assume that the author developed and tested it on Windows 10.\n\nProductName: Windows OS version\n\nCurrentBuildNumber: Windows 10 build version\n\nReleaseID: Windows 10 version information\n\nUBR: Sub version of Windows 10 build\n\nBuildBranch: Windows 10 build branch information\n\nThe code encrypts the collected information with the hardcoded XOR key (\u201cMoz&Wie;#t/6T!2y\u201c) before\n\nuploading it to the server.\n\nhttps://securelist.com/operation-applejeus/87553/\n\n5/30\n\n\f8/23/2018\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\nThe code sends the victim\u2019s information to a webserver using HTTP and the following URL: \n\nwww.celasllc[.]com/checkupdate.php\n\nData encryption routine\n\nThe server is a legitimate looking website owned by the developer of the program: Celas LLC. At this point\n\nwe were not able to conclude with high con\ufb01dence whether the server was compromised by the threat\n\nactor or had belonged to the threat actor from the beginning. To learn more about the server, please read\n\nthe \u201cInfrastructure\u201d section below.\n\nThe malware used a hardcoded User-Agent string \u201cMozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1;\n\nTrident/6.0)\u201d and \ufb01xed a multipart form data separator string \u201cjeus\u201c.\n\nUsing encryption, the custom separator string wouldn\u2019t be a red \ufb02ag for a legitimate application, but\n\nsending a request with the context-irrelevant string \u201cget_con\ufb01g\u201d, as well as uploading collected system\n\ninformation as \u201ctemp.gif\u201d, mimicking a GIF image with a magic number in the header, de\ufb01nitely made us\n\nraise our eyebrows.\n\nhttps://securelist.com/operation-applejeus/87553/\n\nCommunication with the C2 server\n\n6/30\n\n\f8/23/2018\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\nAfter successfully uploading data, the updater checks the server response. If the server responds with HTTP\n\ncode 300, it means the updater should keep quiet and take no action. However, if the response is HTTP\n\ncode 200, it extracts the payload with base64 and decrypts it using RC4 with another hardcoded key\n\n(\u201cW29ab@ad%Df324V$Yd\u201c). The decrypted data is an executable \ufb01le that is prepended with the\n\n\u201cMAX_PATHjeusD\u201d string.\n\nDuring our research, we found other similar \ufb01les. One was created on August 3rd and another on August\n\n11th. The PDB path shows that the author keeps improving this updater tool, apparently forked from some\n\nstable version released on July 2, 2018 according to the internal directory name.\n\nInstallation package MD5\n\nAdditional trojanized sample #1\n\nAdditional trojanized sample #1\n\n4126e1f34cf282c354e17587bb6\n\n0bdb652bbe15942e866083f29f\n\ne8da3\n\nb6dd62\n\nPackage creation date\n\n2018-08-03 09:57:29\n\n2018-08-13 0:12:10\n\nDropped updater MD5\n\n\ufb00ae703a1e327380d85880b9037\n\nbbbcf6da5a4c352e8846bf91c33\n\na0aeb\n\n58d5c\n\nUpdater creation date\n\n2018-08-03 09:50:08\n\n2018-08-11 7:28:08\n\nUpdater Build path\n\nH:\\DEV\\TManager\\DLoader\\201\n\nH:\\DEV\\TManager\\DLoader\\201\n\n80702\\dloader\\WorkingDir\\Out\n\n80702\\dloader\\WorkingDir\\Out\n\nput\\00000009\\Release\\dloader.\n\nput\\00000006\\Release\\dloader.\n\npdb\n\npdb\n\nNote the TManager directory in the PDB path from the table. It will pop up again in another unexpected\n\nplace later.\n\nTrojanized trading program for macOS\n\nFor macOS users, Celas LLC also provided a native version of its trading app. A hidden \u201cautoupdater\u201d\n\nmodule is installed in the background to start immediately after installation, and after each system reboot. It\nhttps://securelist.com/operation-applejeus/87553/\n\n7/30\n\n\f8/23/2018\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\nkeeps contacting the command and control (C2) server in order to download and run an additional\n\nexecutable from the server. The communication conforms to the Windows version of the updater and is\n\ndisguised as an image \ufb01le upload and download, while carrying encrypted data inside.\n\nWe have analyzed the following installation \ufb01le:\n\nMD5: 48ded52752de9f9b73c6bf9ae81cb429 \n\nFile Size: 15,020,544 bytes \n\nFile Type: DMG disk image \n\nKnown \ufb01le name: celastradepro_mac_installer_1.00.00.dmg \n\nDate of creation: 13 July 2018\n\nOnce the Cellas Trade Pro app is installed on macOS, it starts the Updater application on the system load via\n\na \ufb01le named \u201c.com.celastradepro.plist\u201d (note that it starts with a dot symbol, which makes it unlisted in the\n\nFinder app or default Terminal directory listing). The \u201cUpdater\u201d \ufb01le is passed the \u201cCheckUpdate\u201d parameter\n\non start.\n\nhttps://securelist.com/operation-applejeus/87553/\n\n8/30\n\n\f8/23/2018\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\nCelas Trade Pro app plist \ufb01le (Apple Property List)\n\nThe command-line argument \u201cCheckUpdate\u201d looks redundant from a code analysis perspective: there is no\n\nother argument that the application expects. In the absence of all arguments, it doesn\u2019t do anything and\n\nquits. This may or may not be way to trick sandboxes that could automatically execute this trojan updater,\n\nwith no suspicious activity produced without such a \u201csecret\u201d extra argument. The choice of a benign string\n\nsuch as \u201cCheckUpdate\u201d helps it to hide in plain sight of any user or administrator looking into running\n\nprocesses.\n\nThe trojanized updater works similar to the Windows version in many ways. Both applications are\n\nimplemented using a cross-platform QT framework. Upon launch, the downloader creates a unique\n\nidenti\ufb01er for the infected host using a \u201c%09d-%06d\u201d format string template. Next, the app collects basic\n\nsystem information, which for macOS is done via dedicated QT classes:\n\nHost name\n\nOS type and version\n\nSystem architecture\n\nOS kernel type and version\n\nThe process of encrypting and transferring data is the same as in the Windows version. This information is\n\nXOR-encrypted with hardcoded 16-byte static key \u201cMoz&Wie;#t/6T!2y\u201d, prepended with GIF89a header\n\nand uploaded to the C2 server via HTTP POST and the following URL:\n\nhttps://www.celasllc[.]com/checkupdate.php \n\nhttps://securelist.com/operation-applejeus/87553/\n\n9/30\n\n\f8/23/2018\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\nPOST request template strings\n\nThe module relies on a hardcoded User-Agent string for macOS: \n\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko)\n\nChrome/66.0.3359.139 Safari/537.36\n\nOnce the server replies, it checks the HTTP response code. HTTP response code 300 indicates that the\n\nserver has no task for the updater and the application terminates immediately. If the HTTP response is code\n\n200, then the updater gets the data in the response, decodes it from base64 encoding and decrypts it using\n\nRC4 with the hardcoded static key \u201cW29ab@ad%Df324V$Yd\u201c. It calculates the MD5 of the decoded and\n\ndecrypted data, which is compared to a value stored inside, to verify the integrity of the transferred \ufb01le.\n\nAfter that, the payload is extracted and saved to a hardcoded \ufb01le location \u201c/var/zdi\ufb00sec\u201c, sets executable\n\npermissions for all users and starts the app with another secret hardcoded command-line argument\n\n\u201cbf6a0c760cc642\u201c. Apparently the command-line argument is the way to prevent the detection of its\n\nmalicious functionality via sandboxes or even reverse engineering. We have previously seen this technique\n\nadopted by Lazarus group in 2016 in attacks against banks. As of 2018, it is still using this in almost every\n\nattack we investigated.\n\nDownloaded payload\n\nAccording to data from Kaspersky Security Network, the threat actor delivered the malicious payload using\n\none of the shadowy updaters described above. We found a malicious \ufb01le created at the same host:\n\nMD5: 0a15a33844c9df11f12a4889ae7b7e4b \n\nFile Size: 104,898,560 bytes \n\nFile Type: PE32+ executable (GUI) x86-64, for MS Windows \n\nKnown \ufb01le name: C:\\Recovery\\msn.exe \n\nLink time: 2018-04-19 13:30:19\n\nNote the unusually large size for an executable \ufb01le. We believe that it was in\ufb02ated with junk data on\n\npurpose to prevent easy download or transfer over the internet.\n\nhttps://securelist.com/operation-applejeus/87553/\n\n10/30\n\n\f8/23/2018\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\nSearching for the reason for the malware\u2019s appearance on the system revealed that there was an additional\n\nprocess responsible for producing several \ufb01les before this malware was launched, suggesting a trojan\n\ndropper in action. The main function of this malware is to implant the Fallchill backdoor loader linked to\n\nseveral \ufb01les. Upon launch, the malware checks one of the command-line arguments passed to it. The\n\nmalware chooses one of the service names located in the following registry value as a disguise:\n\nHKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Svchost\\netsvcs\n\nThis value includes a list of several dozen standard system service names.\n\nThe randomly chosen service name is used to name the dropped \ufb01le and newly registered Windows service.\n\nLet\u2019s refer to this randomly chosen service name as [service]. The malware contains references to several\n\n\ufb01les inside:\n\nThe \ufb01le passed as argument: contains a 16-byte key\n\nmsncf.dat: Encrypted con\ufb01guration data\n\nmsndll.tmp: Encrypted Fallchill loader\n\nmsndll.dat: Encrypted Fallchill backdoor (payload for the loader)\n\n[service]svc.dll: Fallchill backdoor loader\n\n[service].dat: Copy of msndll.dat\n\nA mix of the above-mentioned \ufb01les produces the \ufb01nal backdoor known as Fallchill. A more detailed\n\nprocedure for technical specialists is as follows:\n\n1. Check whether the command-line argument points to a \ufb01le of 16 byte size.\n\n2. Read the \ufb01le passed via the command-line argument. The contents of this \ufb01le contains a crypto key,\n\nwhich we will call the main key.\n\n3. Open the msncf.dat \ufb01le (con\ufb01guration \ufb01le). If the \ufb01le size equals 192 bytes, read the content of the \ufb01le.\n\n4. Open msndll.tmp \ufb01le and decrypt it using the main key.\n\n5. Create the [service]svc.dll \ufb01le and \ufb01ll it with pseudo-random data.\n\nhttps://securelist.com/operation-applejeus/87553/\n\n11/30\n\n\f8/23/2018\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\np\n\n1. The malware \ufb01lls the \ufb01le with 10,240 bytes of pseudo-random data, and iterates (rand() % 10 +\n\n10240) times. This is why it produces \ufb01les which are at least 104,851,000 bytes.\n\n6. Copy the 16-byte main key at the end of the [service]svc.dll \ufb01le.\n\n7. Encrypt the [service].dat \ufb01le name with the main key and append it at the end of [service]svc.dll.\n\n8. Overwrite the beginning of [service]svc.dll with data decrypted from msndll.tmp.\n\n9. Move msndll.dat \ufb01le to [service].dat.\n\n10. Delete temporary \ufb01les: msndll.tmp, msncf.dat, msndll.log.\n\n11. Timestamp [service]svc.dll and [service].dat \ufb01les.\n\n12. Register [service]svc.dll as a Windows service.\n\n13. Save a copy of data from msncf.dat \ufb01le in the following registry value \n\nHKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\TaskCon\ufb01gs\\Description.\n\nInfection process diagram\n\nFallchill backdoor loader\n\nWe con\ufb01rmed that the following malware was created on the infected host using the method described\n\nabove:\n\nFallchill backdoor loader:\nhttps://securelist.com/operation-applejeus/87553/\n\n12/30\n\n\f8/23/2018\nFallchill backdoor loader:\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\nMD5: e1ed584a672cab33af29114576ad6cce \n\nFile Size: 104,878,356 bytes \n\nFile Type: PE32+ executable (DLL) (console) x86-64, for MS Windows \n\nKnown \ufb01le name: C:\\Windows\\system32\\uploadmgrsvc.dll \n\nLink time: 2018-01-18 01:56:32\n\nEncrypted Fallchill backdoor:\n\nMD5: d8484469587756ce0d10a09027044808 \n\nFile Size: 143,872 bytes \n\nFile Type: encrypted data \n\nKnown \ufb01le name: C:\\Windows\\system32\\uploadmgr.dat\n\nUpon starting, uploadmgrsvc.dll reads 276 bytes from the end of its own executable \ufb01le. The \ufb01rst 16 bytes\n\nof this 276-byte data are used as a decryption key, and the remaining 260 bytes contain the encrypted \ufb01le\n\npath used by the backdoor.\n\nhttps://securelist.com/operation-applejeus/87553/\n\n13/30\n\n\f8/23/2018\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\nData at the end of the loader module\n\nAfter decryption of the last 260-bytes, the malware retrieves the name or path of the \ufb01le that contains the\n\nactual backdoor body in encrypted form.\n\nDecrypted \ufb01le name in the end of loader module\n\nThe malware reads the speci\ufb01ed \ufb01le and decrypts it using the same decryption routine. This is how the\n\nexecutable code of the backdoor is produced in memory and executed by the loader. Below is the meta\n\ninformation about the decrypted \ufb01nal payload in memory:\n\nMD5: d7089e6bc8bd137a7241a7ad297f975d \n\nFile Size: 143,872 bytes \n\nFile Type: PE32+ executable (DLL) (GUI) x86-64, for MS Windows \n\nLink Time: 2018-03-16 07:15:31\n\nWe can summarize the Fallchill backdoor loading process as follows:\n\nhttps://securelist.com/operation-applejeus/87553/\n\n14/30\n\n\f8/23/2018\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\nLoading the Fallchill backdoor\n\nAs mentioned previously, the \ufb01nal payload belongs to a Fallchill malware cluster formerly attributed to the\n\nLazarus APT group. Upon launching, this malware resolves the API function addresses at runtime, and reads\n\nthe C2 server address from the registry value created during the installation stage: \n\nHKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\TaskCon\ufb01gs\\Description\n\nIf there is no con\ufb01guration value, the malware falls back to a default C2 server address.\n\n196.38.48[.]121\n\n185.142.236[.]226\n\nThis is a full-featured backdoor that contains enough functions to fully control the infected host. Some of\n\nits network protocol commands are described below.\n\nCommand\n\nID\n\nDescription\n\n0x8000\n\nWrite current time and con\ufb01guration data to registry key\n\nhttps://securelist.com/operation-applejeus/87553/\n\n15/30\n\n\f8/23/2018\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\n0x8001\n\n0x8002\n\nSend con\ufb01guration data\n\nReplace con\ufb01guration data in the \ufb01xed registry value\n\n0x8003\n\nExecute Windows command, store output in temp \ufb01le and upload\n\n0x8006\n\n0x8007\n\n0x8008\n\n0x8009\n\n0x8010\n\n0x8011\n\n0x8012\n\n0x8013\n\n0x8014\n\n0x8015\n\n0x8019\n\n0x8020\n\n0x8021\n\n0x8023\n\n0x8025\n\n0x8026\n\n0x8043\n\ncontents to C2\n\nShow current working directory\n\nChange current working directory\n\nCollect process information\n\nTerminate process\n\nStart new process\n\nCreate process with security context of the current user\n\nConnect to speci\ufb01ed host/port\n\nGet drive information\n\nDirectory listing\n\nSearch a \ufb01le\n\nWrite data to a speci\ufb01ed \ufb01le\n\nRead contents of speci\ufb01ed \ufb01le and upload to C2 server\n\nCompress multiples \ufb01les to a temp \ufb01le (name start with ZD) and\n\nupload to C2\n\nWipe speci\ufb01c \ufb01le\n\nCopy \ufb01le time from another \ufb01le time (timestamping)\n\nShutdown malware service and self-delete\n\nSend \u201cNot Service\u201d unicode string to C2 server (communication\n\ntest?).\n\nThis set of capabilities is very common for many Lazarus backdoors, which have been seen in other attacks\n\nagainst banks and \ufb01nancial industry in the past years.\n\nInfrastructure\n\nhttps://securelist.com/operation-applejeus/87553/\n\n16/30\n\n\f8/23/2018\nWhile working on the incident of the cryptocurrency company\u2019s breach, we were curious about the legal\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\nstatus of the Celas LLC company that developed this trojanized trading application.\n\nCelas LLC main homepage.\n\nThe website had a valid SSL certi\ufb01cate issued by Comodo CA. However, note that the certi\ufb01cate from this\n\nwebserver mentions \u201cDomain Control Validated\u201d, which is a weak security veri\ufb01cation level for a webserver.\n\nIt does not mean validation of the identity of the website\u2019s owner, nor of the actual existence of the\n\nbusiness. When certi\ufb01cation authorities issue this kind of certi\ufb01cate they only check that the owner has a\n\ncertain control over the domain name, which can be abused in certain ways.\n\n1\n2\n3\n\n Certificate: \n \u00a0\u00a0\u00a0\u00a0Data: \n\nhttps://securelist.com/operation-applejeus/87553/\n\n17/30\n\n \n\f8/23/2018\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\n4\n5\n6\n7\n\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Version: 3 (0x2) \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Serial Number: \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a022:a6:49:c1:ae:61:3f:58:5a:a5:e3:cb:8b:23:f0:61 \n \u00a0\u00a0\u00a0\u00a0Signature Algorithm: sha256WithRSAEncryption \n\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Issuer: C=GB, ST=Greater Manchester, L=Salford, O=COMODO CA Limited, CN=COMODO RSA D\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Validity \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Not Before: May 29 00:00:00 2018 GMT \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Not After : May 29 23:59:59 2019 GMT \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Subject: OU=Domain Control Validated, OU=PositiveSSL, CN=celasllc.com \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Subject Public Key Info: \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Public Key Algorithm: rsaEncryption \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Public\u2013Key: (2048 bit) \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Modulus: \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a000:de:0f:58:f2:68:07:d2:0f:43:5a:07:c6:53:b7: \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a04a:b4:1c:4c:71:4f:a1:4e:80:e3:5a:ec:3b:90:a7: \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a091:ca:42:49:71:ba:da:33:4c:e4:4f:1f:86:d9:30: \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a032:a0:b1:f4:b2:f2:9c:28:97:7c:81:0f:02:d0:9c: \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a036:f6:9c:d6:f9:b5:ca:23:ba:1b:84:e4:0d:8c:9f: \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u2014 Redacted \u2014 \n\nBelow is the WHOIS record of the \u201ccelasllc.com\u201d domain. The domain name was registered by an individual\n\nnamed \u201cJohn Broox\u201d with registrant email address \u201cjohnbroox200@gmail[.]com\u201d.\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n Registrant Name: John Broox \n Registrant Organization:  \n Registrant Street: 2141 S Archer Ave\u00a0\u00a0  \n Registrant City: Chicago \n Registrant State/Province: Illinois \n Registrant Postal Code: 60601 \n Registrant Country: US \n Registrant Phone: +1.8133205751 \n Registrant Email: johnbroox200@gmail[.]com \n \u2026.. \n Name Server: 1a7ea920.bitcoin\u2013dns.hosting \n Name Server: a8332f3a.bitcoin\u2013dns.hosting \n Name Server: ad636824.bitcoin\u2013dns.hosting \n Name Server: c358ea2d.bitcoin\u2013dns.hosting \n\nThe same name of \u201cJohn Broox\u201d was used inside the installation package of the macOS version of the\n\ntrading application. The Info.plist properties \ufb01le describes the package as follows:\n\n1\n\nhttps://securelist.com/operation-applejeus/87553/\n\n18/30\n\n \n \n \n\f8/23/2018\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n <?xml version=\u201c1.0\u201d encoding=\u201cUTF-8\u201d?> \n <!DOCTYPE plist PUBLIC \u201c-//Apple//DTD PLIST 1.0//EN\u201d \u201chttp://www.apple.com/DTDs/PropertyList\n <plist version=\u201c1.0\u201d> \n <dict> \n \u00a0\u00a0\u00a0\u00a0  <key>CFBundleVersion</key> \n \u00a0\u00a0\u00a0\u00a0  <string>1.00.00</string> \n \u00a0\u00a0\u00a0\u00a0  <key>CFBundleName</key> \n \u00a0\u00a0\u00a0\u00a0  <string>Celas Trade Pro</string> \n \u00a0\u00a0\u00a0\u00a0  <key>CFBundleIconFile</key> \n \u00a0\u00a0\u00a0\u00a0  <string>CelasTradePro</string> \n \u00a0\u00a0\u00a0\u00a0  <key>CFBundlePackageType</key> \n \u00a0\u00a0\u00a0\u00a0  <string>APPL</string> \n \u00a0\u00a0\u00a0\u00a0  <key>CFBundleGetInfoString</key> \n \u00a0\u00a0\u00a0\u00a0  <string>Developed by John Broox. CELAS LLC</string> \n \u00a0\u00a0\u00a0\u00a0  <key>CFBundleSignature</key> \n \u00a0\u00a0\u00a0\u00a0  <string>QTCELASTRADE</string> \n \u00a0\u00a0\u00a0\u00a0  <key>CFBundleExecutable</key> \n \u00a0\u00a0\u00a0\u00a0  <string>CelasTradePro</string> \n \u00a0\u00a0\u00a0\u00a0  <key>CFBundleIdentifier</key> \n \u00a0\u00a0\u00a0\u00a0  <string>com.celasllc.CelasTradePro</string> \n \u00a0\u00a0\u00a0\u00a0  <key>NSPrincipalClass</key> \n \u00a0\u00a0\u00a0\u00a0  <string>NSApplication</string> \n \u00a0\u00a0\u00a0\u00a0  <key>NSHighResolutionCapable</key> \n \u00a0\u00a0\u00a0\u00a0  <string>True</string> \n \u00a0\u00a0\u00a0\u00a0  <key>LSMinimumSystemVersion</key> \n \u00a0\u00a0\u00a0\u00a0  <string>10.10.0</string> \n </dict> \n </plist> \n\nIt looks at \ufb01rst sight like a legitimate WHOIS record, but something doesn\u2019t really add up here. The domain\n\ncelasllc.com was the only domain registered with this email address and was exclusively used for domain\n\nregistration.\n\nThe registrant used the Domain4Bitcoins service to register this domain, apparently paying with\n\ncryptocurrency. According to open-source intelligence, the address of the WHOIS information is fake,\n\nunless it\u2019s the owner of a ramen shop running a cryptocurrency exchange software development studio on\n\nthe side.\n\nhttps://securelist.com/operation-applejeus/87553/\n\n19/30\n\n \n \n\f8/23/2018\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\nView of the location referred in the WHOIS record. Image source: Google Maps.\n\nThe server hosting celasllc.com (185.142.236.213) belongs to the Blackhost ISP in the Netherlands.\n\nWHOIS record of cellasllc.com server\n\nCoincidentally, the Fallchill malware authors also preferred to use the same hosting company to host their\n\nC2 server. Moreover, the Celas LLC web server and one of the C2 servers of the Fallchill malware are located\n\nin the same network segment of this ISP:\nhttps://securelist.com/operation-applejeus/87553/\n\n20/30\n\n\f8/23/2018\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\nCelas LLC infrastructure:\n\n185.142.236.213: Netherlands Blackhost Ltd. AS174 COGENT-174\n\nFallchill malware C2 server:\n\n196.38.48[.]121: South Africa Internet Solutions AS3741\n\n185.142.236[.]226: Netherlands Blackhost Ltd. AS174 COGENT-174\n\nAdditional attacker\u2019s server from telemetry\n\n80.82.64[.]91: Seychelles Incrediserve Ltd AS29073\n\n185.142.239[.]173: Netherlands Blackhost Ltd. AS174 COGENT-174\n\nHowever, when you look into Celas Trading Pro application\u2019s digital signature, including its \u201cUpdater\u201d, you\n\nwill \ufb01nd that this certi\ufb01cate was also issued by Comodo CA, which refers to a company address in the\n\nUnited States.\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n Certificate: \n \u00a0\u00a0\u00a0\u00a0Data: \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Version: 3 (0x2) \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Serial Number: \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a09a:73:55:0b:83:76:86:3b:d9:43:0f:aa:8b:5a:29:87 \n \u00a0\u00a0\u00a0\u00a0Signature Algorithm: sha256WithRSAEncryption \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Issuer: C=GB, ST=Greater Manchester, L=Salford, O=COMODO CA Limited, CN=COMODO RSA C\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Validity \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Not Before: May 21 00:00:00 2018 GMT \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Not After : May 21 23:59:59 2019 GMT \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Subject: C=US/postalCode=49319, ST=Michigan, L=Cedar Springs/street=15519 WHITE CREE\n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Subject Public Key Info: \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Public Key Algorithm: rsaEncryption \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Public\u2013Key: (2048 bit) \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Modulus: \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a000:b6:31:7a:c6:68:2f:d2:03:f2:e9:61:c4:86:4f: \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a046:62:e7:a6:d7:7c:bd:e6:9f:a8:83:2c:a6:44:43: \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a092:da:b7:ea:cc:3d:3e:35:20:3f:9c:57:46:1c:d1: \n \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a065:b8:28:50:29:cd:29:11:e8:56:59:85:e5:0f:19: \n\nAccording to open-source data, this address doesn\u2019t belong to a real business, and looks on maps like a\n\nmeadow with a small forest and small real estate o\ufb00ering nearby.\n\nhttps://securelist.com/operation-applejeus/87553/\n\n21/30\n\n \n \n\f8/23/2018\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\nLocation of Cellas LLC, according to its digital certi\ufb01cate\n\nhttps://securelist.com/operation-applejeus/87553/\n\n22/30\n\n\f8/23/2018\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\nPivoting the infrastructure a little further brings up some more suspicious things. It appears that the domain\n\nreferred to two IPs, one of which was linked to a few other suspicious domains, according to PassiveDNS.\n\nReal estate history of that address\n\nCellas LLC linked infrastructure\n\nThe owners of the linked infrastructural elements preferred to use several interesting services for hosting\n\ndomain registration. All these service providers o\ufb00er a certain level of anonymity to their customers. Most of\n\nthem accept Bitcoins as a main payment method to keep their customers anonymous. This is very\n\nuncommon for companies running a legitimate business.\n\nhttps://securelist.com/operation-applejeus/87553/\n\n23/30\n\n\f8/23/2018\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\nHosting services linked to Celas LLC:\n\nBlackhost (https://black.host/)\n\nLiberty VPS (https://libertyvps.net/)\n\nDomain registration services linked to Celas LLC:\n\nDomains4Bitcoins (https://www.domains4bitcoins.com/)\n\nNameCheap (https://www.namecheap.com/)\n\nChangeIP (https://www.changeip.com/)\n\nNjalla (https://njal.la/)\n\nAll the facts above can make the more sceptical among us doubt the intentions of Celas LLC and the\n\nlegitimacy of this business. Of course, these facts alone would not be enough to accuse Celas LLC of\n\ncommitting a crime.\n\nAttribution\n\nKaspersky Lab has previously attributed the Fallchill malware cluster to Lazarus group when it attacked the\n\n\ufb01nancial sector around the world. It was also con\ufb01rmed by other security vendors, and the national CERT of\n\nUS.\n\nRC4 key from the older Fallchill\n\nFallchill malware uses a RC4 algorithm with a 16-byte key to protect its communications. The key extracted\n\nfrom the Fallchill variant used in the current attack is DA E1 61 FF 0C 27 95 87 17 57 A4 D6 EA E3 82 2B.\n\nhttps://securelist.com/operation-applejeus/87553/\n\n24/30\n\n\f8/23/2018\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\nCurrent RC4 key of Fallchill\n\nWe were able to con\ufb01rm that some of older Fallchill malware variants used exactly the same RC4 key.\n\nBelow are Fallchill malware samples that used the same key (the compilation timestamp may indicate the\n\ndate of malware creation).\n\nMD5\n\nTimestamp\n\n81c3a3c5a0129477b59397173fdc0b01\n\n2017-05-26 23:37:04\n\n6cb34af551b3fb63df6c9b86900cf044\n\n2017-06-09 17:24:30\n\n21694c8db6234df74102e8b5994b7627\n\n2017-11-07 17:54:19\n\n5ad7d35f0617595f26d565a3b7ebc6d0\n\n2015-10-24 01:52:11\n\nc501ea6c56ba9133c3c26a7d5ed4ce49\n\n2017-06-09 03:59:43\n\ncafda7b3e9a4f86d4bd005075040a712\n\n2017-11-07 17:54:33\n\ncea1a63656fb199dd5ab90528188e87c\n\n2017-06-12 19:25:31\n\n6b061267c7ddeb160368128a933d38be\n\n2017-11-09 17:18:06\n\n56f5088f488e50999ee6cced1f5dd6aa\n\n2017-06-13 08:17:51\n\ncd6796f324ecb7cf34bc9bc38ce4e649\n\n2016-04-17 03:26:56\n\nSame C2 server with older Fallchill\n\nhttps://securelist.com/operation-applejeus/87553/\n\n25/30\n\n\f8/23/2018\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\nWe have con\ufb01rmed that the C2 server addresses (196.38.48[.]121, 185.142.236[.]226) used in this attack have\n\nbeen used by the older variant of Fallchill.\n\nMD5\n\nTimestamp\n\n94dfcabd8ba5ca94828cd5a88d6ed488\n\n2016-10-24 02:31:18\n\n14b6d24873f19332701177208f85e776\n\n2017-06-07 06:41:27\n\nabec84286df80704b823e698199d89f7\n\n2017-01-18 04:29:29\n\nOverlap of C2 infrastructure\n\nApparently, the attackers using the Fallchill malware continue to reuse code and C2 server infrastructure\n\nover and over again.\n\nAccording to Kaspersky Security Network, Fallchill was not the only malware used in this attack. There was\n\nanother backdoor that was used by the threat actor. We omit a full description of this backdoor in the\n\ncurrent report to keep the write-up to an acceptable length, but we would like to highlight two important\n\nthings discovered in it. First, this backdoor was created on 2018-07-12 and revealed an already familiar\n\ndirectory, \u201cTManager\u201d, which we previously saw in the Updater.exe application from the Cellas Trading Pro\n\nsuite:\nhttps://securelist.com/operation-applejeus/87553/\n\n26/30\n\n\f8/23/2018\nsu e\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\nH:\\DEV\\TManager\\all_BOSS_troy\\T_4.2\\T_4.2\\Server_\\x64\\Release\\ServerDll.pdb\n\nSecond, what is probably one of the most interesting \ufb01ndings to come from this additional backdoor was\n\ndiscovered hidden in hardcoded headers used to communicate with C2 server. The Accept-Language HTTP\n\nheader string revealed a language code associated with North Korea. In our experience, this is something\n\nwe normally don\u2019t see in malware.\n\nAccept-Language: ko-kp,ko-kr;q=0.8,ko;q=0.6,en-us;q=0.4,en;q=0.2\n\nAccept-Language HTTP header value in the body of the backdoor\n\nConclusions\n\nThe Lazarus APT group\u2019s continuous attacks on the \ufb01nancial sector are not much of a surprise to anyone. A\n\nlot of research has been done and published about such attacks. However, we think this case makes a\n\ndi\ufb00erence. Recent investigation shows how aggressive the group is and how its strategies may evolve in the\n\nfuture.\n\nFirst of all, Lazarus group has entered a new platform: macOS. There is steadily growing interest in macOS\n\nfrom ordinary users, especially in IT companies. Many developers and engineers are switching to using\n\nmacOS. Apparently, in the chase after advanced users, software developers from supply chains and some\n\nhigh pro\ufb01le targets, threat actors are forced to have macOS malware tools. We believe that in the future\n\nLazarus is going to support all platforms that software developers are using as a base platform, because\n\ncompromising developers opens many doors at once.\n\nhttps://securelist.com/operation-applejeus/87553/\n\n27/30\n\n\f8/23/2018\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\nWe cannot say with full certainty whether Celas LLC was compromised and the threat actor abused it to\n\npush malware through an update mechanism. However, the multiple successful Lazarus attempts to\n\ncompromise supply chain companies suggest that it will keep exploring this infection method. From all\n\nangles, the Celas LLC story looks like the threat actor has found an elaborate way to create a legitimate\n\nlooking business and inject a malicious payload into a \u201clegitimate looking\u201d software update mechanism.\n\nSounds logical: if one cannot compromise a supply chain, why not to make fake one?\n\nThis should be a lesson to all of us and a wake-up call to businesses relying on third-party software. Do not\n\nautomatically trust the code running on your systems. Neither good looking website, nor solid company\n\npro\ufb01le nor the digital certi\ufb01cates guarantee the absence of backdoors. Trust has to be earned and proven.\n\nStay safe!\n\nAppendix I \u2013 Indicators of Compromise\n\nFile Hashes (malicious documents, trojans, emails,\ndecoys)\n\nTronized installer and payload\n\n9e740241ca2acdc79f30ad2c3f50990a celastradepro_win_installer_1.00.00.msi \n\n4126e1f34cf282c354e17587bb6e8da3 celastradepro_win_installer_1.00.00.msi \n\n0bdb652bbe15942e866083f29fb6dd62 CelasTradePro-Installer.msi \n\n48ded52752de9f9b73c6bf9ae81cb429 celastradepro_mac_installer_1.00.00.dmg \n\nb054a7382adf6b774b15f52d971f3799 Updater.exe \n\n\ufb00ae703a1e327380d85880b9037a0aeb Updater.exe \n\nbbbcf6da5a4c352e8846bf91c3358d5c Updater.exe \n\n0a15a33844c9df11f12a4889ae7b7e4b msn.exe \n\nE1ed584a672cab33af29114576ad6cce uploadmgrsvc.dll \n\nD8484469587756ce0d10a09027044808 uploadmgr.dat \n\nD7089e6bc8bd137a7241a7ad297f975d\n\nSame RC4 key Fallchill\nhttps://securelist.com/operation-applejeus/87553/\n\n28/30\n\n\f8/23/2018\nSame RC4 key Fallchill\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\n81c3a3c5a0129477b59397173fdc0b01 \n\n6cb34af551b3fb63df6c9b86900cf044 \n\n21694c8db6234df74102e8b5994b7627 \n\n5ad7d35f0617595f26d565a3b7ebc6d0 \n\nc501ea6c56ba9133c3c26a7d5ed4ce49 \n\ncafda7b3e9a4f86d4bd005075040a712 \n\ncea1a63656fb199dd5ab90528188e87c \n\n6b061267c7ddeb160368128a933d38be \n\n56f5088f488e50999ee6cced1f5dd6aa \n\ncd6796f324ecb7cf34bc9bc38ce4e649\n\nSame C&C server Fallchill\n\n94dfcabd8ba5ca94828cd5a88d6ed488 \n\n14b6d24873f19332701177208f85e776 \n\nabec84286df80704b823e698199d89f7\n\nFile path\n\nC:\\Recovery\\msn.exe \n\nC:\\Recovery\\msndll.log \n\nC:\\Windows\\msn.exe \n\nC:\\WINDOWS\\system32\\uploadmgrsvc.dll \n\nC:\\WINDOWS\\system32\\uploadmgr.dat\n\nDomains and IPs\n\nwww.celasllc[.]com/checkupdate.php (malware distribution URL) \n\n196.38.48[.]121 \n\nhttps://securelist.com/operation-applejeus/87553/\n\n29/30\n\n\f8/23/2018\n185.142.236[.]226 \n\n80.82.64[.]91 \n\n185.142.239[.]173\n\nOperation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware - Securelist\n\nAPPLE MACOS   CRYPTOCURRENCIES   FINANCIAL MALWARE   LAZARUS  \n\nMALWARE DESCRIPTIONS   SPEAR PHISHING   TROJAN\n\nShare post on:\n\n\uf09a \uf0d5 \uf099\n\nRelated Posts\n\nDark Tequila A\u00f1ejo\n\nSpam and phishing in\nQ2 2018\n\nKeyPass ransomware\n\nhttps://securelist.com/operation-applejeus/87553/\n\n30/30\n\n \n \n\f"], "URLs": ["https://black.host/)", "https://libertyvps.net/)", "https://www.changeip.com/)", "https://www.celasllc[.]com/checkupdate.php", "https://www.domains4bitcoins.com/)", "https://securelist.com/operation-applejeus/87553/", "https://www.namecheap.com/)", "http://www.apple.com/DTDs/PropertyList", "https://njal.la/)"], "weight": 0.0}