{"rule_id": 627, "name": "Lexfo-WhitePaper-The_Lazarus_Constellation", "description": "-", "references": ["CVE-2014-0497"], "File_Names": ["secuvision.co", "lib.asp", "dropper.bin", "XXX.xxx", "sample2.bin", "4659dadbf5b07c8c3c36ae941f71b631737631bc3fded2fe2af250ceba98959a.bin", "766d7d591b9ec1204518723a1e5940fd6ac777f606ed64e731fd91b0b4c3d9fc.bin", "sock_64.dll", "07d2b057d2385a4cdf413e8d342305df.bin", "10.xxx", "38fc56965dccd18f39f8a945f6ebc439.bin", "svc.bat", "dfa984f8d6bfc4ae3920954ec8b768e3d5a9cc4349966a9d16f8bef658f83fcd.bin", "LEXFO.FR", "hs.exe", "SC.exe", "volgmer_7429a6b6e8518a1ec1d1c37a8786359885f2fd4abde560adaef331ca9deaeefd.bin", "2b6288bbd81bb9d666c3a0372f26ede47c8c9ff11c604307982d51654fb9e850.ViR", "iehelp.exe", "ddd.ddd", "nroff_b.exe", "iehelp2.exe", "z5Xv8XY4hN.bin", "Any.RUN", "Net.exe", "TMP0389A.tmp", "4b3416fb6d1ed1f762772b4dd4f4f652e63ba41f7809b25c5fa0ee9010f7dae7.bin", "swpsvc.dll", "igfx.exe", "temp0917.tmp", "2a791769aa73ac757f210f8546125b57.bin", "IGFX.exe", "tmp1105.tmp", "d2da675a8adfef9d0c146154084fff62.bin", "mssecsvc.bin", "sqcsvc.dll", "5c0c1b4c3b1cfd455ac05ace994aed4b.bin", "sss.sss", "itemdb.com", "sppsvc.dll", "sqcsvc6.ldx", "bs.dll", "e0257d187be69b9bee0a731437bf050d56d213b50a6fd29dd6664e7969f286ef.bin", "efd470cfa90b918e5d558e5c8c3821343af06eedfd484dfeb20c4605f9bdc30e.bin", "032ccd6ae0a6e49ac93b7bd10c7d249f853fff3f5771a1fe3797f733f09db5a0.bin"], "MD5_Hashes": ["34E56056E5741F33D823859E77235ED9", "8FBC1F3048263AA0D4F56D119198ED04", "F0E045210E3258DAD91D7B6B4D64E7F3", "38fc56965dccd18f39f8a945f6ebc439", "07D2B057D2385A4CDF413E8D342305DF", "3EDCE4D49A2F31B8BA9BAD0B8EF54963", "9a50be3def3681242f35d3c0911e2e70", "5c0c1b4c3b1cfd455ac05ace994aed4b", "F315BE41D9765D69AD60F0B4D29E4300", "07d2b057d2385a4cdf413e8d342305df", "d2da675a8adfef9d0c146154084fff62", "2a791769aa73ac757f210f8546125b57", "3c0d740347b0362331c882c2dee96dbf"], "SHA1_Hashes": ["3a0c617d17e7f819775e48f7edefe9af84a1446b"], "SHA256_Hashes": ["ae9a4e244a9b3c77d489dee8aeaf35a7c3ba31b210e76d81ef2e91790f052c85", "2db8a9c401911c7317e8a89c35d979d0e8e9ba718ae13a0a0cfedd957654ec10", "45e68dce0f75353c448865b9abafbef5d4ed6492cd7058f65bf6aac182a9176a", "a1c483b0ee740291b91b11e18dd05f0a460127acfc19d47b446d11cd0e26d717", "bf2534b2f059547967bb453d67909921a41c10cdd19c1ec346a193060b094e2e", "7f000893320d77e012686e20e1212e297408d5684335f7f24e40889401e24dff", "ebba2aa065059f1f841a86100905310d11e1b8d7a0f8e89bc1227b19ab69e9af", "0a812976b9412ed28aee3ac3de57873fafe1ddfa0e6b9026078017b810d1b24e", "2e7c052fbc08473f60d5365157b1a0952e2dddee630fe4abe827382dade23a76", "ed01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa", "1a01b8a4c505db70f9e199337ce7f497b3dd42f25ad06487e29385580bca3676", "636844ce36f41641d854a1b239df91da3103873d3dfec0c25087582eec064e4d", "99017270f0af0e499cfeb19409020bfa0c2de741e5b32b9f6a01c34fe13fda7d", "a606716355035d4a1ea0b15f3bee30aad41a2c32df28c2d468eafd18361d60d6", "b9a26a569257fbe02c10d3735587f10ee58e4281dba43474dbdef4ace8ea7101", "c6c332ae1ccb580ac621d3cf667ce9c017be41f8ad04a94c0c0ea37c4789dd14", "dcccd8859e532cc54f66f54e88fbe6eb52b3d5175233da65233bfddf49c165b4", "357b5b8ba2dd4fb3196ba5ad45b7162d8115186bac3eb33b87f2942491656f8b", "0237b186086fa4d13e8c854dcf2d0f8a19fcbe62a58a415e9a5a933f1154e7d8", "5b7c970fee7ebe08d50665f278d47d0e34c04acc19a91838de6a3fc63a8e5630", "2cab9946741fc4cddefcec2104d4fe6d76390868f60f3207e9cb0e210bbe8db0", "4b3416fb6d1ed1f762772b4dd4f4f652e63ba41f7809b25c5fa0ee9010f7dae7", "ef40f7ddff404d1193e025081780e32f88883fa4dd496f4189084d772a435cb2", "4d37f80da97845129debf3244e1f731d2c93a02519f9fdaa059f5f124cf7c26f", "fe51590db6f835a3a210eba178d78d5eeafe8a47bf4ca44b3a6b3dfb599f1702", "8dcca8c720fdb9833455427cd9b2146e2e9581e3bc595e8d97e562854133542b", "eebc86e67a4a88f8cd5022adaa15b33a21ee609947dfcff75345f63d577bcd98", "a917c1cc198cf36c0f2f6c24652e5c2e94e28d963b128d54f00144d216b2d118", "0d99b59ee6427f62596dbd7d016cc9ad5b365da152806703dbc5a5225164bbd5", "4659dadbf5b07c8c3c36ae941f71b631737631bc3fded2fe2af250ceba98959a", "5d25465ec4d51c6b61947990fb148d0b1ee8a344069d5ac956ef4ea6a61af879", "95c8ffe03547bcb0afd4d025fb14908f5230c6dc6fdd16686609681c7f40aca2", "ec44ecd57401b3c78d849115f08ff046011b6eb933898203b7641942d4ee3af9", "6cec00f9d3b7a34c899b1b0cdb69eb5356fa33b80144a10499b7ec905b12e903", "c66ef8652e15b579b409170658c95d35cfd6231c7ce030b172692f911e7dcff8", "2981e1a1b3c395cee6e4b9e6c46d062cf6130546b04401d724750e4c8382c863", "70b494b0a8fdf054926829dcb3235fc7bd0346b6a19faf2a57891c71043b3b38", "16db0063e4aa666d94752414549fa09fb33142481d894b01a0fae45b339a09fb", "c6930e298bba86c01d0fe2c8262c46b4fce97c6c5037a193904cfc634246fbec", "a4a2e47161bbf5f6c1d5b1b3fba26a19dbfcdcf4eb575b56bde05c674089ae95", "2151c1977b4555a1761c12f151969f8e853e26c396fa1a7b74ccbaf3a48f4525", "bd6efb16527b025a5fd256bb357a91b4ff92aff599105252e50b87f1335db9e1", "b783a2a69591cc1509acd0d3b33bdf69c87908669741f03a06f7d152cbe2923e", "29431dc086499c7ee64236a365615be5e5c861452f047ffac5656120ece59266", "0efd49bfbdc8655e5db47d45b6ce4c2c64d6152665f45ef7ac57f04459369487", "e08fc761cc22953de7fcc1684b7424755fa52f361dd5c6605b1469a80cb858bb", "6f76a8e16908ba2d576cf0e8cdb70114dcb70e0f7223be10aab3a728dc65c41c", "7f4e7618af45a61003c74b373095b206a885b26079830f7ee0dada28f8429623", "1e4d34fe08da837f16d1c04c313c3b2e46a09bf55376d4573ae1ebff1fae53f4", "0ca12b78644f7e4141083dbb850acbacbebfd3cfa17a4849db844e3f7ef1bee5", "1be0b96d502c268cb40da97a16952d89674a9329cb60bac81a96e01cf7356830", "84edc9b828de54d4bd00959fabf583a1392cb4c3eab3498c52818c96dc554b90", "d8af45210bf931bc5b03215ed30fb731e067e91f25eda02a404bd55169e3e3c3", "283d1d2efa36d31fc00425cc88dab82e426c1c51d1b4da7925c91aef56d817a3", "90eba6416f5e1b35c9bf41b4a25ac880c491dd2f10d993d8a65091f1adf68ee8", "2b6288bbd81bb9d666c3a0372f26ede47c8c9ff11c604307982d51654fb9e850", "032ccd6ae0a6e49ac93b7bd10c7d249f853fff3f5771a1fe3797f733f09db5a0", "707e37e085014d2a8e6b0596322ac8f13664666c0d44f7963d2174dc4dc37ef6", "d8a9879a99ac7b12e63e6bcae7f965fbf1b63d892a8649ab1d6b08ce711f7127", "480b0eb4636d6a78b62e7b52b773ec0a4e92fe4a748f9f9e8bd463a3b8dd0d83", "05a567fe3f7c22a0ef78cc39dcf2d9ff283580c82bdbe880af9549e7014becfc", "7af070db3f5a3a08eeb5439039c1eee30f10c637b1c0d88e723104d422048863", "8fcd303e22b84d7d61768d4efa5308577a09cc45697f7f54be4e528bbb39435b", "851032eb03bc8ee05c381f7614a0cbf13b9a13293dfe5e4d4b7cd230970105e3", "db350bb43179f2a43a1330d82f3afeb900db5ff5094c2364d0767a3e6b97c854", "fb94a5e30de7afd1d9072ccedd90a249374f687f16170e1986d6fd43c143fb3a", "c54837d0b856205bd4ae01887aae9178f55f16e0e1a1e1ff59bd18dbc8a3dd82", "70034b33f59c6698403293cdc28676c7daa8c49031089efa6eefce41e22dccb3", "49a63ae5e65bf75777d49d37eb1d23fd3f2f584ae57758e3016a312d9716fa9f", "a9bc09a17d55fc790568ac864e3885434a43c33834551e027adb1896a463aafc", "90abfe3e4f21b5a16cd1ff3c485f079f73f5e7bbaca816917204858bb08007fc", "53e9bca505652ef23477e105e6985102a45d9a14e5316d140752df6f3ef43d2d", "7a57d3b9da733bf66894341e70ba5a0059f1046576d9f8ae07b7a48945bdda66", "e0257d187be69b9bee0a731437bf050d56d213b50a6fd29dd6664e7969f286ef", "9097b372f7f844c430aa8c1b217a50754b28434172d5af5d992bfcbce9dfeb4f", "94aa827a514d7aa70c404ec326edaaad4b2b738ffaea5a66c0c9f246738df579", "0b6056e7ce278fb31bf644ef41e9532009e5dfbc33849b29f59c77ec993a8f46", "39cbad3b2aac6298537a85f0463453d54ab2660c913f4f35ba98fffeb0b15655", "9e4c6410ab9eda9a3d3cbf23c58215f3bc8d3e66ad55e40b4e30eb785e191bf8", "d62bf83fb5a7b148f326908051b149b77663149d47426ce749e944f7abf5d304", "f895757608b7725674628d731ec9fe90fd310eb65e7041bc6617ba0b831649b4", "2223a93521b261715767f00f0d1ae4e692bd593202be40f3508cb4fd5e21712b", "32e98f39bcde86885c527ddcf68fad67d0a7e6c23877672ebfd4c2a6a3f545e5", "510f83af3c41f9892040a8a80b4f3a4736eebee2ec4a7d4bfee63dbe44d7ecff", "a1260fd3e9221d1bc5b9ece6e7a5a98669c79e124453f2ac58625085759ed3bb", "6dae368eecbcc10266bba32776c40d9ffa5b50d7f6199a9b6c31d40dfe7877d1", "82645e88736e11321774db7a7b28bd62d4ab133f859ecd35a4b2fa1d471412b7", "dbae68e4cab678f2678da7c48d579868e35100f3596bf3fa792ee000c952c0ed", "4a84452752cf8e493ae820871096044edd9f6453366842927148e7d8e218dc87", "efd470cfa90b918e5d558e5c8c3821343af06eedfd484dfeb20c4605f9bdc30e", "239ed753232d3cc0e75323d16d359150937934d30da022628e575997c8dd60a2", "05feed9762bc46b47a7dc5c469add9f163c16df4ddaafe81983a628da5714461", "0c06e129902925c7ebd70e93d4d09707add781d8bd89cd557cda023045f3853e", "9f177a6fb4ea5af876ef8a0bf954e37544917d9aaba04680a29303f24ca5c72c", "7cf5d86cc75cd8f0e22e35213a9c051b740bd4667d9879a446f06277782bffd1", "0852f2c5741997d8899a34bb95c349d7a9fb7277cd0910656c3ce37a6f11cb88", "9661f70ead79a1ff35282bf2d061acb2733900eea87e2233ac7b8f8d3a80ad75", "ff2eb800ff16745fc13c216ff6d5cc2de99466244393f67ab6ea6f8189ae01dd", "37f652e2060066a1c2c317195573a334416f5a9b9933cfb1ece55bea8048d80f", "077d9e0e12357d27f7f0c336239e961a7049971446f7a3f10268d9439ef67885", "ccafbcff1596e3dfd28dcb97a5ba85e6845e69464742edfe136fe09bbec86ba1", "d246669cf1e25860f8601e456edd7156aa7304026ff4eadac18a2a82a18fabbf", "0b269bdd4c2d11ce0cd050bddf8f6ff618126c2b531e8ad3ab36ecc1a88d8162", "4e8c10a7fa51a3ab089b284e86a7daaca779ed82ba1750607fc3bfa91681f9b1", "fee0081df5ca6a21953f3a633f2f64b7c0701977623d3a4ec36fff282ffe73b9", "98ccf3a463b81a47fdf4275e228a8f2266e613e08baae8bdcd098e49851ed49a", "24bce152c7f884a923b29a4130931c63cd3f9c0ab08a28a79c7995356a146131", "5cbc07895d099ce39a3142025c557b7fac41d79914535ab7ffc2094809f12a4b", "3e6de9e2baacf930949647c399818e7a2caea2626df6a468407854aaa515eed9", "95c2186be69601ae37f8269cb487f8f19d495b9f811908f90ec97bae9333db20", "9a776b895e93926e2a758c09e341accb9333edc1243d216a5e53f47c6043c852", "dfa984f8d6bfc4ae3920954ec8b768e3d5a9cc4349966a9d16f8bef658f83fcd", "d1515a888defff96f724d49fe05bace85066f6eeafd81cd0d9c4c27fdebc9cbb", "e0cd4eb8108dab716f3c2e94e6c0079051bfe9c7c2ed4fcbfdd16b4dd1c18d4d", "63d49254ee2d07ce08bd981743c17f3d5a3242478cea883332e0cc1ae43c0fe6", "d7a71f83d576fdf75e7978539bac04ad8b6605207b29379b89c24c0d0f31da61", "111ab6aa14ef1f8359c59b43778b76c7be5ca72dc1372a3603cd5814bfb2850d", "1b8d3e69fc214cb7a08bef3c00124717f4b4d7fd6be65f2829e9fd337fc7c03c", "d4616f9706403a0d5a2f9a8726230a4693e4c95c58df5c753ccc684f1d3542e2", "216d262e614e0bacff4e23077492ab9711b68b7ba2fbc17609ee1052093f59fc", "b5838ecaad041a033ad16ddd6644d502546bc4916cbd10636c27b3eed3214578", "4d4b17ddbcf4ce397f76cf0a2e230c9d513b23065f746a5ee2de74f447be39b9", "2230edace3f42a5750f738f28814759b670922f16aa778e97d039d10fe9bab02", "6a9c46d96f001a1a3cc47d166d6c0aabc26a5cf25610cef51d2b834526c6b596", "2011b9aa61d280ca9397398434af94ec26ddb6ab51f5db269f1799b46cf65a76", "ae65288f5c96b4656402853b14acd1d060b2a6303d833df5b1f10cc7a34b0025", "dc827f7a1e5ee4600697d7d3efdeb8401b7a9af3d704d0462e7d3e0804a9069d", "2eb447785e5b35c42d842706d593a907d0bdbc50ad9d0327c3591ac4ef17ce6e", "315c06bd8c75f99722fd014b4fb4bd8934049cde09afead9b46bddf4cdd63171", "422c767682bee719d85298554af5c59cf7e48cf57daaf1c5bdd87c5d1aab40cc", "16c3a7f143e831dd0481d2d57aae885090e22ec55cc8282009f641755d423fcd", "2e835c7496fb4fc1c53665ef89fffdcbcc8dc49bea0baecc5b8496006ea601bb", "d060123c21869b765b22b712a8ca47266a33464095411e2b7bdf7e327d23ed07", "c9209951f7866849c9b1e5375bfb511b368394e52f6a276e86fdd542a79c2cd5", "e9f3f6e286f5d06addb82a2fc4b3bcdf1142570183c5cac8e8156b2f1c26b74f", "4c2efe2f1253b94f16a1cab032f36c7883e4f6c8d9fc17d0ee553b5afb16330c", "1ec2e4d02a89277afc0ee35d2d72009a5dbe96f88e1bc70bbfb3a9224478b7d5", "929dc09a8bd8491b77f050a2736d39c30597ec7090d8f081eeb6179b6f8ab033", "1fe1fa6b01166c373de68c029d8cdda60cb1599053f935e580f3f40aaf106345", "e69d6c2d3e9c4beebee7f3a4a3892e5fdc601beda7c3ec735f0dfba2b29418a7", "c4a07bfc37a44dc85df2c63f369abb530dc2193ab1be506fc5dd45d56a44ca76", "6c627a4be54b6377af9f73ab0923aeebcccbb57ec94e995a2171deb69d61af9d", "c0e22e80ea020ca8f71f58a8b53855293abdf8d4e0b34a69068004abaac60f42", "1fbecec5da37b9a6e6dd63add4988fe7e2c4249aada883f58bcb794020455b77", "3c1e4c334629b20e21b8ab08b8aa19db738f2ed761290ffdd26665cd61cb7807", "ae1b32aac4d8a35e2c62e334b794373c7457ebfaaab5e5e8e46f3928af07cde4", "373938e958030f1764b4db71df953df5c460a30e895583b7901da5c6954b0739", "9b86a50b36aea5cc4cb60573a3660cf799a9ec1f69a3d4572d3dc277361a0ad2", "7429a6b6e8518a1ec1d1c37a8786359885f2fd4abde560adaef331ca9deaeefd", "6f474f2af52961e9d7bbd467d98fb7886579932e2fe9567c28c8be3ab845dc5d", "1a8655886ea6be9ae0a71e845b5a334b476494b3aad7bfe6510218059eba5788", "eceb01a902c2b7ccd580dd639ae5a1dc366e73cc8a27230557bb2237bd20e452", "7646c2afbc8b9719b0295e5a880bb89fb85bdd4346603a52768b161eda12e8be", "d9757441e40d05a863d8dcfedab684d6644061231341c4106a3721436bc034ea", "9bf8e8ac82b8f7c3707eb12e77f94cd0e06a972658610d136993235cbfa53641", "f8967b814c814c36559987a5baec67ebc44e9e1031600e1cf4e0c2bdaf8c6497", "0753f8a7ae38fdb830484d0d737f975884499b9335e70b7d22b7d4ab149c01b5", "8a1d57ee05d29a730864299376b830a7e127f089e500e148d96d0868b7c5b520", "ee7a9a7589cbbcac8b6bf1a3d9c5d1c1ada98e68ac2f43ff93f768661b7e4a85", "fa405cd8cd8565301d138e3826bd121cc8691731b889a7503132bda6c57f4691", "7334209ace81d67babbbb37f5a0d2af24160f637a8559483e14685927df6b7fa", "32f24601153be0885f11d62e0a8a2f0280a2034fc981d8184180c5d3b1b9e8cf", "e40a46e95ef792cf20d5c14a9ad0b3a95c6252f96654f392b4bc6180565b7b11", "1d0999ba3217cbdb0cc85403ef75587f747556a97dee7c2616e28866db932a0d", "1b46afe1779e897e6b9f3714e9276ccb7a4cef6865eb6a4172f0dd1ce1a46b42", "2e373e199d2b6dea0241c672bbcbccedac86cba2ed2fdefc84a5d8187acb896f", "44884565800eebf41185861133710b4a42a99d80b6a74436bf788c0e210b9f50", "4f06eaed3dd67ce31e7c8258741cf727964bd271c3590ded828ad7ba8d04ee57", "0af925cd9d9a417f47882391555fa207398bfb87c3c6edc65f2ea42843cbdc3d", "6323816c6476cb3d9c28461c5c45c858087f1eefed96e3f83843f5bcc299219e", "49757cf85657757704656c079785c072bbc233cab942418d99d1f63d43f28359", "820ca1903a30516263d630c7c08f2b95f7b65dffceb21129c51c9e21cf9551c6", "28006dc505920fc3589933fda216052abc09d4a007bc76ba2542f7876ebd299b", "f4e0f145830ec7a9dace5a4b7d5af5f1e93662edcad40c08d57dc825d316174d", "de4ff8901766e8fc89e8443f8732394618bf925ce29b6a8aafe1d60f496e7f0e", "c6a78c2c4d5078a1a769bdfb071311eb3bb01750e8bf1010261028a1db68671b", "80b5cc9feb10fac41ee2958ab0f751bf807126e34dcb5435d2869ef1cf7abc41", "cf065e50a5bef24099599af6a60a78c1607a04b21d3573a25ab26bf044a119d6", "e7b9c37be0ffca97002294f5813405855731b37b3b4ad2f4d73d1da9b7c535e5", "201a9c5fe6a8ae0d1c4312d07ef2066e5991b1462b68f102154bb9cb25bf59f9", "37b04dcdcfdcaa885df0f392524db7ae7b73806ad8a8e76fbc6a2df4db064e71", "16fe4de2235850a7d947e4517a667a9bfcca3aee17b5022b02c68cc584aa6548", "838286ef99986dbb65cf0b939e6c70a7fb7a47f79198b75c3c45a54a3c8666b6", "45bfa1327c2c0118c152c7192ada429c6d4ae03b8164ebe36ab5ba9a84f5d7aa", "fd5a7e54cfdd3b3f32b44d8fdd845e62d6b86c0ddb550c544d659588d06ceaee", "f3ca8f15ca582dd486bd78fd57c2f4d7b958163542561606bebd250c827022de", "aff73144a359020abbb4bde3f80858d822b840dd7171ba7946b77ba9b3487831", "f12db45c32bda3108adb8ae7363c342fdd5f10342945b115d830701f95c54fa9", "163571bd56001963c4dcb0650bb17fa23ba23a5237c21f2401f4e894dfe4f50d", "f8f7720785f7e75bd6407ac2acd63f90ab6c2907d3619162dc41a8ffa40a5d03", "e7a542312ec718300ed9f229aaa60e5e2ec11aaa99387b76ed2e377bfad8b86e", "4e1c5141652acf8ea66b7d6dbb3fcdd96353e7d27c9e5698792c199aaf3f05c4", "25ea7f67638e7e7b8706566788aa25a7d91843232ece85592b6bfe1eb4cd317a", "fe696f8fb3f927bfbc9dbdcb067f87f3ada1afa8a76385f16e5b3dd70adf5ca2", "ffa97eb4875129646376bc88e9ff99ffeff2c6bba3a06f6727d5f343fc7f6b51", "e0b1ed0f1fb8648ccdbb8a844fef5cf9b3b9eb46902289122c508bbf7d2e8d6e", "f31bee70fd10f6846890f42947de40061bacb24fb51f43ef6c75325ec9b95de8", "302e75fe7e40e1637512e1c439d6fb3913945007428ed5d1a9bd198f08f38292", "b05aae59b3c1d024b19c88448811debef1eada2f51761a5c41e70da3db7615a9", "fe43bc385b30796f5e2d94dfa720903c70e66bc91dfdcfb2f3986a1fea3fe8c5", "adafcdf7196a73a24b1e6e523b0a3dd4c62886702b45a9b29021bc961f0d5ea4", "059aab1a6ac0764ff8024c8be37981d0506337909664c7b3862fc056d8c405b0", "0608e411348905145a267a9beaf5cd3527f11f95c4afde4c45998f066f418571", "084b21bc32ee19af98f85aee8204a148032ce7eabef668481b919195dd62b319", "276af9add9b6d8d96a950525b647d1eed247b3f63101bd942bd9816d0f8f9a6b", "ca70aa2f89bee0c22ebc18bd5569e542f09d3c4a060b094ec6abeeeb4768a143", "6f37b758a7a015c2abdab7941b416deb508f2ab9143a64f9a8188ed0d0db3d14", "496841be8fb9d0042180a2bccf205e1e0bd0b41c537798265da7ad8f85cc35a2", "32ec329301aa4547b4ef4800159940feb950785f1ab68d85a14d363e0ff2bc11", "ae086350239380f56470c19d6a200f7d251c7422c7bc5ce74730ee8bab8e6283", "f51336e862b891f78f2682505c3d38ea7de5b0673d6ef7a3b0907c0996887c22", "48cf912217c1b5ef59063c7bdb93b54b9a91bb6920b63a461f8ac7fcff43e205", "766d7d591b9ec1204518723a1e5940fd6ac777f606ed64e731fd91b0b4c3d9fc", "6b90e2a3f0ad8819b5afe67bf13451c9782af26a9f2bdac3a0e042569054e5fd", "e79bbb45421320be05211a94ed507430cc9f6cf80d607d61a317af255733fcf2", "eff3e37d0406c818e3430068d90e7ed2f594faa6bb146ab0a1c00a2f4a4809a5", "dee482e5f461a8e531a6a7ea4728535aafdc4941a8939bc3c55f6cb28c46ad3d", "2df9e274ce0e71964aca4183cec01fb63566a907981a9e7384c0d73f86578fe4", "4cf164497c275ae0f86c28d7847b10f5bd302ba12b995646c32cb53d03b7e6b5", "2db6f93e99e55ef46c5b3ca52a52e34f088b7c1cd3835938557842b71b24ef56", "7aa99ebc49a130f07304ed25655862a04cc20cb59d129e1416a7dfa04f7d3e51", "f9686467a99cdb3928ccf40042d3e18451a9db97ef60f098656725a9fc3d9025", "73dcb7639c1f81d3f7c4931d32787bdf07bd98550888c4b29b1058b2d5a7ca33", "1d24d8268c2f8e82b65d58429c166367eee9683c38a1408910536d8084f4ad46", "36f43755e5e5988d112f28fbc1dcd9bdee4a31fb7004b52db26dacdbfe7cb72f", "7c73619ff8d5e4ed3b29b7ae71a69602df4071fd8c1029f9674e9978cdc03de9", "4a740227eeb82c20286d9c112ef95f0c1380d0e90ffb39fc75c8456db4f60756", "34ad7b845707674e5f4f52e7bc60148a0971ec2f375d80ec3dc48387848973ba", "deefab8ee3d082119cc69c5dbdaf5faddeae36fbbd2345b1dc0463d07b65f13b"], "Registry_Entries": ["HKLM\\SYSTEM\\ControlSet001\\Services\\sqcsvc\\Parameters\u201d\n\nreg add \u201cHKLM\\SYSTEM\\ControlSet001\\Services\\sqcsvc\\Parameters\u201d /v ServiceDll /t REG_EX-\nPAND_SZ /d \u201c%SystemRoot%\\System32\\sqcsvc.dll\u201d\n\nreg add \u201cHKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Svchost\u201d /v sqcsvc /t REG_\nMULTI_SZ /d sqcsvc\n\nThen, LEXFO started reverse-engineering the sqcsvc payload that was found in the RAM and disk dumps \nin order to assess the attackers\u2019 capabilities and find the decryption algorithm for communications.\n\nATTRIBUTING THE ATTACK\n\nOur  classifier  tool  didn\u2019t  show  any  strong  link  with  other  Lazarus  samples,  as  the  payloads \n  of  the  new  arsenal  of  Lazarus  at  the  time.  The  only  link  found \nwe  found  were  part \nis  a  Yara  rule  match  between  IGFX  and  a  sample \nin  Taiwan \ninvolved \n( 9a776b895e93926e2a758c09e341accb9333edc1243d216a5e53f47c6043c852 ). The rule matched \nstrings from the static library libcurl with the specific version 7.49.1 . We had to investigate further to \nconfirm.\n\nin  a  Lazarus  heist \n\nFilenames match Lazarus\u2019 habits, as we have the payload named \u201c*svc.dll\u201d, its encrypted configuration \nfile as a MUI-disguised file and a batch script to install the malware. The payload is also made persistent \nby registering   it as a service, which is how Lazarus usually operate.\n\nLooking closely at the SQCSVC payload metadata, we can see that its original name was sock_64.dll , \nthe compilation timestamp is Sat, 03 Nov 2018 00:47:21 UTC which is consistent with North Korea \nworking hours (UTC+9) and that it was packed using Themida Code-Virtualizer.\nAt that point, Lazarus can already be considered the #1 suspect.\n\nFilename \n\nCompilation timestamp\n\nsqcsvc.dll\n\nigfx.exe\n\nhs.exe\n\niehelp.exe\n\niehelp2.exe\n\nswpsvc.dll\n\nSat,\n\nMon,\n\nMon,\n\nMon,\n\nWed,\n\nSat,\n\n03\n\n02\n\n01\n\n24\n\n14\n\n11\n\nNov\n\n2018\n\n00:47:21\n\nMay\n\n2016\n\n03:24:39\n\nOct\n\n2018\n\n10:30:58\n\nSep\n\n2018\n\n11:12:22\n\nNov\n\n2018\n\n14:02:19\n\nAug\n\n2018\n\n14:14:54\n\nUTC\n\nUTC\n\nUTC\n\nUTC\n\nUTC\n\nUTC\n\n022\n\nWhite Paper \n \n\fUNCOVERING ATTACKERS\u2019 ACTIVITIES\n\nHaving  reverse-engineered  the  communication  protocol  and  the  encryption  algorithm,  LEXFO  started \ndeveloping a Python implementation to decrypt packets.\n\nHere is the identified decryption function in the SQCSVC payload:\n\nXOR decryption stub\n\nA Python implementation is quite straightforward:\n\ndef decryptTCPData(data): \n\noutput = \u2018\u2019\ni = 0\nj = 0\n\nwhile j < len(data): \n\ni = 5423\ncar = ord(data[j])\nwhile i >= 1870: \nk = i % 256 i \n-= 187\ncar = (k ^ (car + k)) & \n\n0xFF j += 1\noutput += chr(car)\n\nreturn output\n\nFrom there, we were able to write a script to automatically decrypt all traffic in the PCAP files exchanged \nbetween the implant and the Lazarus C&C.\n\n----  03:34:44.251294  ethertype  IPv4,  IP  ddd.ddd.ddd.ddd.443  >  sss.sss.sss.\nsss.53477: Flags [P.], seq 1459:1557, ack 1459, win 511, length 98\n\n\u20180000000B\\x0230\\x02\u201dcmd.exe\u201d /c \u201cping -n 1 XXXROOM0099\u201d\\x02\u2019\n\n----  03:34:47.465025  ethertype  IPv4,  IP  sss.sss.sss.sss.53477  >  ddd.ddd.ddd.\nddd.443: Flags [P.], seq 1477:1943, ack 1557, win 256, length 466\n\n\u2018458\\x02\\r\\n\n\nPinging  XXX.xxx.org  [10.xxx.xxx.xxx]  with  32  bytes  of  data:\\r\\n  Reply  from \n10.xxx.xxx.xxx: Destination host unreachable.\\r\\n\n\n\\r\\n\n\nPing statistics for 10.xxx.xxx.xxx:\\r\\n\n\nPackets: Sent = 1, Received = 1, Lost = 0 (0% loss),\\r\\n\n\n\u2018\n\n023\n\nThe Lazarus ConstellationIV. Incident Response: how to uncover an ongoing Lazarus attack \fOther manually executed commands:\n\n\u201ccmd.exe\u201d /c \u201ctime /t\u201d\n\n\u201ccmd.exe\u201d /c \u201cecho 1000 > c:\\\\windows\\\\temp\\\\tmp1105.tmp\u201d \n\n\u201ccmd.exe\u201d /c \u201ctype \u201cc:\\\\windows\\\\temp\\\\tmp1105.tmp\u201d\u201d\n\n\u201ccmd.exe\u201d /c \u201ctype \u201cC:\\\\Windows\\\\Temp\\\\temp0917.tmp\u201d\u201d\n\n\u201ccmd.exe\u201d /c \u201ctype C:\\\\Windows\\\\Temp\\\\TMP0389A.tmp\u201d\n\n\u201ccmd.exe\u201d /c \u201cdir \u201cc:\\\\windows\\\\temp\\\\tmp1105.tmp\u201d\u201d\n\n\u201ccmd.exe\u201d /c \u201cecho 1000 > c:\\\\windows\\\\temp\\\\tmp1105.tmp\u201d\n\n\u201ccmd.exe\u201d /c \u201cdir c:\\\\windows\\\\temp\\\\tmp1105.tmp\u201d \u201ccmd.exe\u201d\n\n/c \u201ctype c:\\\\windows\\\\temp\\\\tmp1105.tmp\u201d \u201ccmd.exe\u201d /c \u201ctype\n\nC:\\\\Windows\\\\Temp\\\\TMP0389A.tmp\u201d \u201ccmd.exe\u201d /c \u201ctype\n\nC:\\\\Windows\\\\Temp\\\\temp0917.tmp\u201d \u201ccmd.exe\u201d /c \u201ctype\n\nc:\\\\windows\\\\temp\\\\tmp1105.tmp\u201d \u201ccmd.exe\u201d /c \u201cdir\n\nc:\\\\windows\\\\temp\\\\tmp1105.tmp\u201d \u201ccmd.exe\u201d /c \u201ctype\n\nC:\\\\Windows\\\\Temp\\\\tmp1105.tmp\u201d \u201ccmd.exe\u201d /c \u201ctype\n\nC:\\\\Windows\\\\Temp\\\\temp0917.tmp\u201d \u201ccmd.exe\u201d /c \u201ctype\n\nC:\\\\Windows\\\\Temp\\\\temp0917.tmp\u201d \u201ccmd.exe\u201d /c \u201cping -n 1 XXXROOM0099\u201d\n\n\u201ccmd.exe\u201d /c \u201cping -n 1 XXXROOM0099\u201d\n\n\u201ccmd.exe\u201d /c \u201ctime /t\u201d\n\n\u201ccmd.exe\u201d /c \u201ctype \u201cC:\\\\Windows\\\\Temp\\\\TMP0389A.tmp\u201d\u201d\n\n\u201ccmd.exe\u201d /c \u201cquery user\u201d\n\n\u201ccmd.exe\u201d /c \u201cquery user\u201d\n\nThe  Lazarus  operators  also  leveraged  the  RAT to  get  information  on  the  infected  machines,  using  the \ndirectory  and  process  listing  feature  of  SQCSVC  .  We  decrypted  many  fragmented  packets  exfiltrating \nfolders and files as well as running processes.\nIn some other captures, we saw that the attackers were checking the state of a service named swpsvc . \nThis  name  if  consistent  with  other  Lazarus  malware  such  as  the  first  payload  sqcsvc  ,  makes  it  very \nsuspicious.\n\n\u201c[SC] EnumQueryServicesStatus:OpenService \\x1a chec(s) 1060 :\\r\\n\n\n\\r\\n\n\nLe service sp\\x1a cifi\\x1a n\u2019existe pas en tant que service install\\x1a .\\r\\n\n\n\\r\\n \u201c\n\n\u2018\\r\\n\n\nSERVICE_NAME: swpsvc \\r\\n\n\nTYPE \n\nSTATE \n\n: 30  WIN32  \\r\\n\n\n: 4  RUNNING \\r\\n\n\n(STOPPABLE, PAUSABLE, ACCEPTS_SHUTDOWN)\\r\\n \n\nWIN32_EXIT_CODE \n\n: 0 (0x0)\\r\\n\n\nSERVICE_EXIT_CODE \n\n: 0 (0x0)\\r\\n \n\nCHECKPOINT \n\nWAIT_HINT \n\n\u2018\n\n: 0x0\\r\\n\n\n: 0x0\\r\\n\n\n\u2018[SC] DeleteService r\\x1a ussite(s)\\r\\n\u2019\n\nThe  Lazarus  operators  deleted  this  file  when  they  realized  that  the  company  security  team  was \ninvestigating. Fortunately, they failed to delete it safely and LEXFO managed to recover the swpsvc.dll \nusing carving tools.\n\nThis payload appeared to be a stage 1 RAT with a similar communication protocol.\n\nFurther investigations of the decrypted PCAP files also revealed two other DLL plugins that were sent and \nwritten to disk by the attackers: an injector performing payload injection in the explorer.exe process, \nand a keylogger / screencapper. Both these plugins were unknown at the time.\nWe  provided  the  client  with  newly-made  YARA  rules  to  detect  all  discovered  payloads  as  well  as  a \nPowerShell script to automate the deployment process. We also implemented Suricata rules to detect \nthe Lazarus fake- TLS and custom protocol traffic that can be used along with our Python script to decrypt \nthe packets. This successfully stopped the attack and helped identify all infected machines.\n\n024\n\nWhite Paper \n\fPAYLOAD ANALYSIS\n\n \u2014 IGFX tool\n\nThis binary was compiled on Monday,  May  02  05:24:39  2016  UTC . This sample appeared to be a \nversion of the Lazarus tool Client_TrafficForwarder described by Group-IB !REF.\n\nThis tool\u2019s purpose is to forward traffic to another infected host in order to relay operators\u2019 commands.\n\nOne interesting particularity of this tool is that the Lazarus developers used non-native Russian strings \nfor command names, trying to confuse attribution:\n\nTranslated Russian strings to mess with attribution\n\nThis  binary  was  compiled  with  a  static  version  of  libcurl  v7.49.1,  which  is  common  amongst  Lazarus\u2019 \nsamples.\n\n \u2014 SQCSVC RAT\n\nThis binary was compiled on Saturday Nov 03 01:47:21 2018 UTC .\n\nSQCSVC configuration decryption\n\n025\n\nThe Lazarus ConstellationIV. Incident Response: how to uncover an ongoing Lazarus attack \fsqcsvc.dll.mui decrypted configuration:\n\n0000\n\n0010\n\n0020\n\n0030\n\n0040\n\n0050\n\n0060\n\n0070\n\n0080\n\n0090\n\n00a0\n\n00b0\n\n00c0\n\n31\n\n34\n\n02\n\n30\n\n36\n\n62\n\n64\n\n34\n\n33\n\n30\n\n02\n\n02\n\n36\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n38\n\n32\n\n31\n\n35\n\n37\n\n65\n\n62\n\n33\n\n35\n\n36\n\n20\n\n30\n\n35\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n38\n\n02\n\n35\n\n37\n\n39\n\n72\n\n2e\n\n02\n\n2e\n\n3a\n\n02\n\n02\n\n35\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n30\n\n36\n\n31\n\n30\n\n32\n\n2e\n\n63\n\n31\n\n31\n\n34\n\n20\n\n36\n\n32\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n30\n\n35\n\n31\n\n37\n\n02\n\n69\n\n6f\n\n38\n\n33\n\n34\n\n02\n\n30\n\n31\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n35\n\n35\n\n31\n\n38\n\n6d\n\n74\n\n6d\n\n30\n\n32\n\n33\n\n20\n\n02\n\n02\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n37\n\n32\n\n36\n\n32\n\n65\n\n65\n\n3a\n\n2e\n\n2e\n\n02\n\n02\n\n30\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n35\n\n30\n\n31\n\n39\n\n6d\n\n6d\n\n34\n\n32\n\n32\n\n20\n\n20\n\n02\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n00\n\n1.8.8.0.0.5.7.5.\n\n4.2...6.5.5.2.0.\n\n..1.5.1.1.1.6.1.\n\n0.5.7.0.7.8.2.9.\n\n6.7.9.2...m.e.m.\n\nb.e.r...i.t.e.m.\n\nd.b...c.o.m.:.4.\n\n4.3...1.8.0...2.\n\n3.5...1.3.2...2.\n\n0.6.:.4.4.3... .\n\n.. ... ... ... .\n\n..0...6.0...0...\n\n6.5.5.2.1...\n\nThis configuration contains two C&C addresses: member.itemdb.com and 180.235.132.206 , both to \nbe contacted on port 443, which is consistent with the Fake-TLS protocol implemented.\nThe  payload  is  packed  using  a  powerful  virtualization-based  packer  called  Themida  Code-Virtualizer. \nHowever, the attackers did not use the packer correctly and the non-obfuscated payload code can be \ndumped easily from memory.\n\nAccording to BinDiff, the non-obfuscated payload code is up to 65% similar to the code of the IGFX.exe \ntool used by the attackers, compiled two years prior to SQCSVC , proving that they probably come from \nthe same developer team or the same code base.\nThe SQCSVC payload is able to:\n\n J Download and write files on disks \n J Execute files or bash commands \n J Inject code in a running process\n J Listen to commands on a specified port (server mode) \n J Rewrite the configuration file with new values\n\nThe payload was similar to the one described by TrendMicro after a Lazarus bank heist in Latin America \nin November, 2018 36.\n\n \u2014 SWPSVC (Stage 1)\n\nThe  analyzed  malware  sample  of  the  group  Lazarus  is  a  \u201cstage  1\u201d  reconnaissance  malware  which \nimplements Remote Administration Tool features.\n\nThe analyzed sample is a DLL library which is loaded by the  svchost service, as it is registered as an \nAUTO_START service for persistence. The delivery method is most likely manual. In such case, the attacker \ndrops the malware on an already compromised machine.\nThe malware configuration is stored encrypted in the registry, unlike most Lazarus malware that come \nwith  an  encrypted  file  as  configuration.  In  our  case,  the  configuration  data  could  not  be  retrieved  as \nit  was  fully  erased  before  the  investigation  began  by  the  attackers  that  didn\u2019t  need  this  component \nanymore since the SQCSVC RAT was installed.\n\nThe malware uses different kind of encryption for different kind of purposes. The first substitution-based \nencryption is used for decrypting encrypted strings in the static binary. The XOR-based encryption is used \nto obfuscate communications between the server and the client and to decrypt configuration content \nsuch as the Command-and-Control (C&C) server name and port number stored in the Windows registry.\n\nThis RAT uses the already mentioned Fake-TLS protocol for communications:\n\n026\n\nWhite Paper\fFake-TLS handshake sent by the RAT\n\nThe following commands are implemented in the RAT:\n\nCommand ID Description\n\n0x19283746 \n\nGet information on the infected system (processor architecture, network interfaces...)\n\n0x1928374C  Write file on system\n\n0x1928374A \n\nRead file on system\n\n0x1928374F \n\nDelete file\n\n0x1928374F \n\nGet process info\n\n0x19283753 \n\nKill process\n\n0x1928374D \n\nCreate process\n\n0x19283756 \n\nExecute process as a given user\n\n0x19283748 \n\nList files in a directory\n\n0x19283755  Modify C&C configuration by changing the value in Windows registry\n\n0x19283747 \n\nList local drives and network shares\n\n0x19283750  Move file\n\n \u2014 Downloaded modules\n\nLEXFO found two downloaded modules in the decrypted packets that were deployed on specific targets.\n\nThe first one is an injector that takes a file path as a parameter and injects it in an explorer.exe process. \nThe injected file is executed in a new thread. This injector uses RC4 encryption with the hardcoded key \nkey to hide suspicious strings that are decrypted at runtime, and will write some log data to the file C:\\\nwindows\\temp\\temp0917.tmp .\n\nThe second module is a keylogger and screencapper. This file is a DLL originally named capture_x64.\ndll by the attackers. The keylogging and screencapping features are implemented standardly\n\n027\n\nThe Lazarus ConstellationIV. Incident Response: how to uncover an ongoing Lazarus attack \f028\n\nWhite Paper\fV.  CLASSIFYING \n    NORTH KOREAN \n    MALWARE AND  \n    INTERPRETING \n    LINKS\n\nDATASET\n\nWe gathered more than 290 malware attributed to North Korea from various sources:\n\n J Twitter\n J Various RE and malware forums \n J VirusTotal (Hunting)\n J Online sandboxes (HybridAnalysis, Any.RUN...) \n J Malware repository (VirusBay, VirusShare, Malshare)\n J U.S. Cyber command malware uploads \n J Threat intelligence reports\n J LEXFO\u2019s own incident responses \n\nWe ended up with the following families:\n\nMalware family\n\napt38_contopee\n\npowerratankba\n\nnukesped\n\nkilldisk\n\npolishbanks\n\njoanapbrambul\n\nbankshot\n\nmydoom\n\n029\n\nThe Lazarus ConstellationV. Classifying North Korean malware and interpreting links \fcybercom\n\napt37_summit\n\napt37_humanrights\n\napt37\n\nkarbarcobra\n\nhoplight\n\nbitcoin\n\nfastcash\n\nblockbuster_sequel\n\ngolddragon\n\nredbanc\n\nkeymarble\n\ndarkhotel\n\napt37_rocketman\n\nsafebank\n\nfallchill\n\nelectricfish\n\nhermesryuk\n\nratankba\n\nkimsuky_shark2\n\nsony\n\nredgambler\n\ntypeframe\n\ntroydarkseoul\n\nkimsuky\n\ndtrack\n\nsharpshooter\n\nintezer\n\napt37_evilnewyear\n\nbangladesh_swift\n\nvolgmer\n\nwipall\n\nhiddencobra\n\nbackswap\n\nwannacry\n\nduuzer\n\nkimsuky_mysterybaby\n\ndeltacharlie\n\nMalware family\n\nandariel_rifle\n\nsony_sierraalfa\n\napt38\n\nsony_kordllbot\n\nkimsuky_stolenpencil\n\napt38_dyepack\n\nghostsecret\n\nblockbuster_continues\n\nvietnam\n\ntaiwan\n\napplejeus_loader\n\nLazarus under the hood (Kaspersky)\n\nSamples  were  compiled  from  2004-05-23  to  2019-10-22  according  to  compilation  timestamps  that \nseemed legitimate.\n\nMETHODOLOGY\n\nAfter several manual analyses of Lazarus samples, we concluded that the following links where relevant:\n\n \u2014 Idenfifying links\n\nAfter several manual analysis of Lazarus samples, we figured that the following links where relevant:\n\n \u2014 Standard links:\n\n J Code reuse (Fuzzy hashes SSDEEP + MACHOKE) \n J Import hashing\n J Timestamps PDB\n\n \u2014 Advanced links:\n\n J Rich Headers\n J Yara signatures (see next part)\n\n030\n\nWhite Paper\f \u2014 A word on Rich headers\n\nRich  headers  are  added  to  standard  PE  headers  in  executables  compiled  using  VisualStudio.  It  is  a \nfingerprint of the compilation environment that can be easily decrypted and decoded. It can then be \nused to identify if binaries were compiled in the same environment, which is a strong relation. As we \nempirically saw that North Korean groups have been using VisualStudio almost exclusively, and there is a \nhigh chance that their malware-building infrastructure is quite conservative, we chose to develop a script \nto parse rich headers from samples and included it as a relation link in our classifier.\n\n \u2014 Building Yara rules\n\nFor each North-Korean malware family we identified, we built Yara rules in order to keep signatures of the \nfollowing implementations that are likely to be reused by Lazarus:\n\n J Specific strings\n J Cryptographic algorithms \n J Cryptographic keys\n J Unique implementations of features: \n\n J mapping of files\n J lateral movement \n J installing service \n J wiper implementation \n J handling logs\n J ...\n\n J Way of dynamically loading API \n J Obfuscation\n J ...\n\nWe also built rules for statically linked library like OpenSSL, libcurl, ZIP etc. of specific versions, as Lazarus \nwas seen to be pretty conservative in using the same versions over the years. Those rules were named \nlib_static_[lib  name]_[version] and we attributed them a lesser weight than implementation \nrules as it doesn\u2019t illustrate a strong enough link between two samples.\n\nWe built a set of about 100 rules that we ran on our sample dataset. To our own Yara rule set, we added \nauto-generated rules from Malpedia 37 when they showed accurate results.\nBefore adding them to our ruleset, we ran tests on a huge malware set to make sure that the rules were \naccurate and there were close to zero false positive.\n\n \u2014 Building similarity profiles\n\nWe produced a profile for each sample with fuzzy hashes, decoded rich header, compilation timestamps \nand  matching  Yara    rules.  We  then  compared  profiles  using  nearest  neighbor  algorithms  with  weight   \nwe empirically tested to get the best results. Jaccard distance was used to compare fuzzy hashes. We \nattributed heavy weights for identical rich headers encountered in different samples and for every non \nlib_static_* Yara rule matches. Weights (W) were roughly according to this order relation:\n\nW(Exact same Rich header) > W(Yara match (non lib_static_*)) > W(Machoke code \nreuse) > W(Compilation timestamp) > W(Yara match (lib_static_*)) > W(Rich header \nsimilarity) > W(Imphash) > W(Various metadata)\n\n \u2014 Handling packers\n\nNon-specific packers like UPX are handled separately: as fuzzy hashes become irrelevant, we dismissed \nthem when computing weights. For more specific packers (Themida, Enigma...), we built Yara rules to \nidentify them and considered them as a valid relation of similarity between samples since Lazarus uses \nspecific versions of those packers.\n\nWhen possible, we reversed the packed samples and tried to get clean unpacked executables so our tool \ncould classify them indiscriminately and accurately.\n\n031\n\nThe Lazarus ConstellationV. Classifying North Korean malware and interpreting links \f \u2014 Result review and improvements\n\nWe ran our tool multiple times and tried to analyze samples that seemed to be oddly placed or unique. We \nreversed each of them and adapted our classification methodology and criteria according to our findings, \nand ran the test again and iteratively re-applied this process until the classification was accurate enough.\n\n \u2014 Building the graph\n\nFrom there, we created a graph with samples as nodes and weighted links as relations between them.\n\nVISUALIZATION\n\nWe used the Fruchterman-Reingold spacialisation to visualize links and identify clusters. We ended up \nwith the following constellation, where each dot is a sample and each link represents the strength of a \nrelation between two samples:\n\nFruchterman-Reingold spacialisation applied to our relation graph\n\nREVIEWING RESULTS\n\nOur  tool  revealed  more  than  2500  actual  links  between  around  290  samples,  which  showcases  that \nsuch a classification is relevant as Lazarus samples are rarely unique in a 10 years span period. We see \nclear clusters and many overlaps. This will shed some light on North Korean malware and groups, as the \nnumber of reports and campaign names grows and it can be hard to keep track and attribution is often \nconfusing or unsure.\n\n \u2014 Kimsuky\n\nThe  Kimsuky  group  has  its  own  cluster  but  we  see  Rich  header  and  compilation  timestamp  overlaps \nwith other Lazarus samples. Kimsuky and Lazarus are therefore likely to be working together, which is \nconfirmed by the fact that Kimsuky malware were found on Lazarus targets several times.\n\n032\n\nWhite Paper\fMoreover, our tool revealed links between DTrack samples from the Kudankulam Nuclear Power Plant \n(KNPP)  and  Kimsuky  samples:  both  use  SQlite  as  a  statically-linked  library,  but  a  different  version \n(compiled on 2017- 10-24 18:55:49 for the latter vs 2017-02-13 16:02:40 for the former). Looking \nat compilation timestamps, we can see that some DTrack and Kimsuky samples were also compiled the \nsame day (or close to) as other Lazarus malware used in campaigns:\n\n(2019-07-29 13:36:26) ./dtrack/npp_\nbfb39f486372a509f307cde3361795a2f9f759cbeb4cac07562dcbaebc070364\n\n<- Timestamp -> (2019-07-29 07:08:01) ./andariel_rifle/javaupdatemain_unpack.\nexe\n\n(2019-03-01 00:07:25) ./dtrack/\nnpp_3cc9d9a12f3b884582e5c4daf7d83c4a510172a836de90b87439388e3cde3682\n\n<- Timestamp -> (2019-03-01 09:08:44)\n\n./kimsuky_\nshark2/4b3416fb6d1ed1f762772b4dd4f4f652e63ba41f7809b25c5fa0ee9010f7dae7.bin\n\nThis  could  mean  that  the  groups  are  working  together  for  some  operations,  with  Lazarus  doing  the \nintrusion and handing the exfiltrating part to Kimsuky when the target matches their interest.\n\nFinally, interesting findings stand out when looking at Rich header similarities. The Kimsuky stolen pencil \nsample has the exact same Rich header as samples found in Lazarus campaigns such as DarkSeoul and \nGoldDragon.\n\n(2018-12-21 00:34:35) ./kimsuky_stolenpencil/1.bin\n\n<-\n\nRich\n\n->\n\n<-\n\nRich\n\n->\n\n<-\n\nRich\n\n->\n\n<-\n\nRich\n\n->\n\n<-\n\nRich\n\n->\n\n<-\n\nRich\n\n->\n\n<-\n\nRich\n\n->\n\n<-\n\nRich\n\n->\n\n<-\n\nRich\n\n->\n\n<-\n\nRich\n\n->\n\n<-\n\nRich\n\n->\n\n(2012-07-\n06\n\n(2012-07-\n06\n\n(2013-01-\n31\n\n(2013-01-\n31\n\n(2013-01-\n31\n\n(2013-01-\n31\n\n(2017-12-\n24\n\n(2017-12-\n24\n\n(2017-12-\n24\n\n(2017-12-\n24\n\n(2017-12-\n24\n\n12:24:18)\n\n./troydarkseoul/DarkSeoul/DarkSeoul_50E-\n03200C3A0BECBF33B3788DAC8CD46\n\n12:24:18)\n\n./troydarkseoul/DarkSeoul/DarkSeoul_E4F66C-\n3CD27B97649976F6F0DAAD9032\n\n10:27:18)\n\n./troydarkseoul/DarkSeoul/DarkSeoul_5FCD6E-\n1DACE6B0599429D913850F0364\n\n10:27:18)\n\n./troydarkseoul/DarkSeoul/DarkSeoul_0A8032CD-\n6B4A710B1771A080FA09FB87\n\n10:27:18)\n\n./troydarkseoul/DarkSeoul/DarkSeoul_DB4BBD-\nC36A78A8807AD9B15A562515C4\n\n10:27:18)\n\n./troydarkseoul/DarkSeoul/DarkSeoul_\nF0E045210E3258DAD91D7B6B4D64E7F3\n\n08:16:57)\n\n./golddragon/e68f43ecb03330ff0420047b6193358\n3b4144585\n\n08:47:21)\n\n./golddragon/4f58e6a7a04be2b2ecbcdc-\nbae6f281778fdbd9f9\n\n08:29:04)\n\n./golddragon/11a38a9d23193d9582d02ab0eae-\n767c3933066ec\n\n08:37:57)\n\n./golddragon/3a0c617d17e7f819775e48f7ede-\nfe9af84a1446b\n\n08:44:08)\n\n./golddragon/bf21667e4b48b8857020ba455531c-\n9c4f2560740\n\n \u2014 DarkHotel\n\nSamples  attributed  to  the  DarkHotel  group  have  identical  Rich  header  as  a  lot  of  APT38  Nukesped \nsamples, which is a strong link:\n\n(2011-04-07 06:58:03) ./\ndarkhotel/2b6288bbd81bb9d666c3a0372f26ede47c8c9ff11c604307982d51654fb9e850.ViR\n\n<- Rich -> (2017-07-14 22:40:25) ./cybercom/d2da675a8adfef9d0c146154084fff62.bin\n\n<- Rich -> (2017-07-11 18:26:59) ./nukesped/3EDCE4D49A2F31B8BA9BAD0B8EF54963\n\n<- Rich -> (2017-08-11 05:03:45) ./cybercom/2a791769aa73ac757f210f8546125b57.bin\n\n<- Rich -> (2017-08-01 16:39:36) ./ghostsecret/Sample_5ae56e2077d7dc0d380c3bfd_\nexe\n\n...\n\n033\n\nThe Lazarus ConstellationV. Classifying North Korean malware and interpreting links \fThough DarkHotel TTPs and malware are different from Lazarus, those groups seem to be working in \ntandem.\n\n \u2014 Andariel subgroup\n\nClear  Andariel  clusters  stand  out,  with  malware  involved  in  operations  Red  Gambler  and  Rifle.  Those \nsamples are closely linked with each other by specific and custom cryptographic algorithms found in \nmalware from both operations. For instance:\n\nyara_andariel_7F8: (2016-04-21 10:41:15)\n\n./andariel_rifle/\nd246669cf1e25860f8601e456edd7156aa7304026ff4eadac18a2a82a18fabbf \nyara_andariel_7F8: (2016-12-01 13:56:28) ./\nredgambler/9a50be3def3681242f35d3c0911e2e70\n\nyara_andariel_7F8: (2017-03-21 16:05:58) ./\nredgambler/2573d0ad00f4ba8ee86d7fce7454d963_unpack\n\nSame cryptographic algorithm found in RedGambler and Rifle samples\n\nRedGambler samples seem to be related to older samples from the Troy/DarkSeoul operation as well as \nan APT37 Navrat sample by their Rich headers which are identical:\n\n(2016-12-01 13:56:28) ./redgambler/9a50be3def3681242f35d3c0911e2e70\n\n<- Rich -> (2016-05-01 05:53:43)\n\n./apt37_summit/navrat_old_\ne0257d187be69b9bee0a731437bf050d56d213b50a6fd29dd6664e7969f286ef.bin\n\n<- Rich -> (2013-03-20 04:07:02)\n\n./troydarkseoul/DarkSeoul/DarkSeoulDropper/\nDarkSeoulDropper_9263E40D9823AECF9388B64DE34EAE54_unpack\n\n<- Rich -> (2017-03-21 16:05:58) ./\nredgambler/2573d0ad00f4ba8ee86d7fce7454d963_unpack\n\nOther  Andariel  samples  are  linked  with  various  Lazarus  samples.  For  example,  Andariel  uses  inflate \nlibrary version 1.1.4 which is the same version found in several other North Korean samples (GoldDragon, \nFallchill, Dtrack...).\n\n034\n\nWhite Paper\f \u2014 APT38/Bluenoroff\n\nBluenoroff clusters are linked by Rich headers, timestamps and code similarity. Most of the links are quite \nstrong and make APT38 clusters the most distinguishable ones, meaning that the group doesn\u2019t think it\u2019s \nnecessary to be sneaky and reinvent itself, but will reuse a lot of elements, from architecture to malware \nimplementations. These clusters are mainly composed of the following malware families:\n\n J Nukesped \n J Fallchill \n J Volgmer \n J Electricfish \n J Dyepack\n J SWIFT-related malware \n J Hoplight\n J Some Sony / Blockbuster samples\n J Malware from bank attacks (Poland, Vietnam...) \n J Destover\n J Bankshot \n J Fastcash\n J ...\n\nLooking at the links, we can see that a Yara rule we built is matching almost 40 samples from our dataset, \nall  of  them  attributed  to  APT38.  The  Yara rule  was  built  to  detect  a  specific  RC4  implementation  and \ncalled yara_apt38_rc4 :\n\nrule yara_apt38_rc4 { strings:\n\n$s1 = { 8A 90 01 01 00 00 // mov dl, byte [eax + 0x101]\n\n8A 88 00 01 00 00 // mov cl, byte [eax + 0x100] 8A 14 02 // mov dl, byte [edx + eax]\n8A 1C 01 \n02 D3 \n8A 1C 2E \n81 E2 FF 00 00 00 // and edx, 0xff\n8A 0C 02 \n32 CB } \n\n// mov bl, byte [ecx + eax]\n// add dl, bl\n// mov bl, byte [esi + ebp]\n\n// mov cl, byte [edx + eax]\n// xor cl, bl\n\ncondition:\n\nuint16(0) == 0x5a4d and any of ($s*)\n\n}\n\nThis rule showcases once again that Lazarus groups reuse a lot of code for their malware. Here are some \nof the samples using this RC4 implementation:\n\nyara_apt38_rc4: ./apt38_\ncontopee/766d7d591b9ec1204518723a1e5940fd6ac777f606ed64e731fd91b0b4c3d9fc.bin \nyara_apt38_rc4: ./nukesped/3EDCE4D49A2F31B8BA9BAD0B8EF54963\n\nyara_apt38_rc4: ./nukesped/sample2.bin\n\nyara_apt38_rc4: ./nukesped/34E56056E5741F33D823859E77235ED9 yara_apt38_rc4: ./\nnukesped/sample (9).bin\n\nyara_apt38_rc4: ./nukesped/sample  (1).bin\n\nyara_apt38_rc4: ./nukesped/F315BE41D9765D69AD60F0B4D29E4300\n\nyara_apt38_rc4: ./\nnukesped/32ec329301aa4547b4ef4800159940feb950785f1ab68d85a14d363e0ff2bc11 \nyara_apt38_rc4: ./cybercom/38fc56965dccd18f39f8a945f6ebc439.bin\n\nyara_apt38_rc4:  ./cybercom/5c0c1b4c3b1cfd455ac05ace994aed4b.bin\n\nyara_apt38_rc4: ./typeframe/\ne69d6c2d3e9c4beebee7f3a4a3892e5fdc601beda7c3ec735f0dfba2b29418a7.\nbin yara_apt38_rc4: ./fallchill/\nca70aa2f89bee0c22ebc18bd5569e542f09d3c4a060b094ec6abeeeb4768a143.\nbin yara_apt38_rc4: ./\nintezer/4a84452752cf8e493ae820871096044edd9f6453366842927148e7d8e218dc87.\nbin yara_apt38_rc4: ./\nintezer/80b5cc9feb10fac41ee2958ab0f751bf807126e34dcb5435d2869ef1cf7abc41_\nz5Xv8XY4hN.bin yara_apt38_rc4: ./\nintezer/7429a6b6e8518a1ec1d1c37a8786359885f2fd4abde560adaef331ca9deaeefd.\n\n035\n\nThe Lazarus ConstellationV. Classifying North Korean malware and interpreting links \fbin yara_apt38_rc4: ./intezer/\ndbae68e4cab678f2678da7c48d579868e35100f3596bf3fa792ee000c952c0ed.\nbin yara_apt38_rc4: ./intezer/\na4a2e47161bbf5f6c1d5b1b3fba26a19dbfcdcf4eb575b56bde05c674089ae95.\nbin yara_apt38_rc4: ./bangladesh_\nswift/4659dadbf5b07c8c3c36ae941f71b631737631bc3fded2fe2af250ceba98959a.bin \nyara_apt38_rc4: ./bangladesh_swift/nroff_b.exe\n\nyara_apt38_rc4:  ./bangladesh_swift/evtdiag.exe\n\nyara_apt38_rc4: ./apt38_\ndyepack/4659dadbf5b07c8c3c36ae941f71b631737631bc3fded2fe2af250ceba98959a \nyara_apt38_rc4: ./apt38_\ndyepack/5b7c970fee7ebe08d50665f278d47d0e34c04acc19a91838de6a3fc63a8e5630 \nyara_apt38_rc4: ./\nghostsecret/45e68dce0f75353c448865b9abafbef5d4ed6492cd7058f65bf6aac182a9176a.\nbin yara_apt38_rc4: ./ghostsecret/Sample_5ae56e2077d7dc0d380c3bfd_exe\n\nyara_apt38_rc4:\n./blockbuster_continues/\nvolgmer_7429a6b6e8518a1ec1d1c37a8786359885f2fd4abde560adaef331ca9deaeefd.bin \n[...]\n\nOther Yara rules are matching several APT38 samples from different malware families: some related to \nfile wiping implementations, Fallchill success codes, string decoding algorithms, inflate 1.1.3 strings...\nOn another hand, Rich header analysis reveals that some recent malware found in India, Vietnam and \nTaiwan, as well as samples LEXFO found during incident responses share the same Rich headers, which \nare strong links.\n\n \u2014 WannaCry\n\nWannaCry samples are timestomped, but we see that the WannaCry cluster is close to the Bluenoroff \nones. In particular, we see that the wannacry_rand Yara rule we built from the WannaCry sample \n3e6de9e2baacf930949647c399818e7a2caea2626df6a468407854aaa515eed9 matches the \nContopee malware attributed to APT38  \n( 766d7d591b9ec1204518723a1e5940fd6ac777f606ed64e731fd91b0b4c3d9fc ).\n\nyara_wannacry_rand: (2015-02-23 01:32:57)\n\n./apt38_\ncontopee/766d7d591b9ec1204518723a1e5940fd6ac777f606ed64e731fd91b0b4c3d9fc.bin \n(2017-02-09 09:47:27)\n\n./wannacry/3e6de9e2baacf930949647c399818e7a2caea2626df6a468407854aaa515eed9\n\nShared code between Bluenoroff Contopee and WannaCry\n\nMost WannaCry samples were statically linked with inflate lib version 1.1.3, which links them to some \nBluenoroff  samples  that  are  using  the  exact  same  version  (for  instance  the  recent  APT38  keylogger \nefd470cfa90b918e5d558e5c8c3821343af06eedfd484dfeb20c4605f9bdc30e used on Vietnamese \ntargets).\n\nyara_lib_static_inflate_113: (2010-11-20  09:05:05) ./wannacry/dropper.bin \n(2018-04-28 02:53:06)\n\n./vietnam/efd470cfa90b918e5d558e5c8c3821343af06eedfd484dfeb20c4605f9bdc30e.\nbin yara_lib_static_inflate_113: (2010-11-20 09:03:08) ./wannacry/mssecsvc.bin  \n(2018-04-28  02:53:06)\n\n./vietnam/efd470cfa90b918e5d558e5c8c3821343af06eedfd484dfeb20c4605f9bdc30e.bin\n\n \u2014 DTrack\n\nDTrack is a malware attributed to Lazarus / APT38. Recent DTrack samples found on critical infrastructures \nlike nuclear power plants are linked with a sample from the Troy/DarkSeoul campaign compiled in 2011. \nThe link comes from the reuse of the specific ZIP password dkwero38oerA^t@# . This is surprising and \ncould be a false flag.\n\n036\n\nWhite Paper\fyara_zip_password: ./troydarkseoul/Http Troy/Files inside \n8FBC1F3048263AA0D4F56D119198ED04/Layer 4/DLL 1 (bs.dll).dll\n\nyara_zip_password: ./dtrack/\nnpp_3cc9d9a12f3b884582e5c4daf7d83c4a510172a836de90b87439388e3cde3682 \nyara_zip_password: ./dtrack/npp_\nbfb39f486372a509f307cde3361795a2f9f759cbeb4cac07562dcbaebc070364 yara_zip_password: \n./dtrack/dfa984f8d6bfc4ae3920954ec8b768e3d5a9cc4349966a9d16f8bef658f83fcd.bin\n\nThose DTrack samples are also weakly linked with other Lazarus samples by statically-linked libraries such as \nTZip and SQlite.\n\n \u2014 GoldDragon campaign\n\nGoldDragon samples are linked to Lazarus by two main features: the reuse of a specific RC4 implementation \nthat was seen in old Joanap dropper samples and detected by our Yara rules, and the overlaps of rich headers.\nHere is an example of a GoldDragon sample sharing its Rich header with other known Lazarus samples (as well \nas other GoldDragon samples):\n\n(2017-12-24 08:37:57) ./golddragon/3a0c617d17e7f819775e48f7edefe9af84a1446b\n\n<-\n\nRich\n\n->\n\n(2013-01-31\n\n10:27:18)\n\n<-\n\nRich\n\n->\n\n(2017-12-24\n\n08:29:04)\n\n<-\n\nRich\n\n->\n\n(2012-07-06\n\n12:24:18)\n\n<-\n\nRich\n\n->\n\n(2017-12-24\n\n08:44:08)\n\n<-\n\nRich\n\n->\n\n(2017-12-24\n\n08:47:21)\n\n<-\n\nRich\n\n->\n\n(2013-01-31\n\n10:27:18)\n\n./troydarkseoul/DarkSeoul/DarkSeoul_0A8032C-\nD6B4A710B1771A080FA09FB87\n\n./golddragon/11a38a9d23193d9582d02ab0eae-\n767c3933066ec\n\n./troydarkseoul/DarkSeoul/DarkSeoul_E4F66C3C-\nD27B97649976F6F0DAAD9032\n\n./golddragon/bf21667e4b48b8857020ba455531c-\n9c4f2560740\n\n./golddragon/4f58e6a7a04be2b2ecbcdcbae6f-\n281778fdbd9f9\n\n./troydarkseoul/DarkSeoul/DarkSeoul_DB4BBD-\nC36A78A8807AD9B15A562515C4\n\n<-\n\n<-\n\n<-\n\nRich\n\n->\n\n(2013-01-31\n\n10:27:18)\n\n./troydarkseoul/DarkSeoul/DarkSeoul_F0E045210E-\n3258DAD91D7B6B4D64E7F3\n\nRich\n\n->\n\n(2018-12-21\n\n00:34:35)\n\n./kimsuky_stolenpencil/1.bin\n\nRich\n\n->\n\n(2017-12-24\n\n08:16:57)\n\n./golddragon/e68f43ecb03330f-\nf0420047b61933583b4144585\n\n<-\n\nRich\n\n->\n\n(2012-07-06\n\n12:24:18)\n\n<-\n\nRich\n\n->\n\n(2013-01-31\n\n10:27:18)\n\n./troydarkseoul/DarkSeoul/DarkSeoul_50E03200C3A-\n0BECBF33B3788DAC8CD46\n\n./troydarkseoul/DarkSeoul/DarkSeoul_5FCD6E1DACE6B-\n0599429D913850F0364\n\nAnother link is the statically-linked inflate v. 1.1.4 that we found in GoldDragon samples, as this version is widely \nused in a lot of Lazarus samples.\n\n \u2014 APT37\n\nSamples attributed to APT37 (Reaper) seem to be quite unique and only linked with Lazarus samples by statically-\nlinked library or encryption algorithms, which are weak links. This confirms what FireEye stated in its report: this \ngroup needs to be tracked separately from Lazarus.\n\nA lot of APT37 samples share the same Rich header. We also found the following identical Rich headers between \nan APT37 malware and a Bluenoroff Nukesped sample:\n\n(2019-01-02 01:43:47)\n\n./apt37_\nevilnewyear/2019_636844ce36f41641d854a1b239df91da3103873d3dfec0c25087582eec064e4d.\nbin\n\n<- Rich -> (2018-02-12 20:06:28) ./cybercom/07d2b057d2385a4cdf413e8d342305df.bin\n\n<- Rich -> (2018-02-12 20:06:28) ./nukesped/07D2B057D2385A4CDF413E8D342305DF\n\nFinally, we found a Navrat sample attributed to APT37 and an Andariel sample from the RedGambler operation \nwith the same Rich header, which connects the two groups (see the part about Andariel below).\n\n037\n\nThe Lazarus ConstellationV. Classifying North Korean malware and interpreting links \f \u2014 The OlympicDestroyer false flag\n\nTo  complicate  attribution,  the  attackers  behind  OlymicDestroyer  copied  a  Rich  header  from  Lazarus \nsamples to replace the rich header of some of their malware. Our tool gives the following result, showing \nthat the Rich header was taken from Bluenoroff samples (one of them from the Bangladesh SWIFT heist):\n\n(2017-12-27 09:03:48) ./olympicdestroyer/3c0d740347b0362331c882c2dee96dbf\n\n<- Rich -> (2016-02-04 13:45:39) ./bangladesh_swift/evtsys.exe\n<- Rich -> (2017-03-02 16:46:13)\n\n./blockbuster_sequel/032ccd6ae0a6e49ac93b7bd10c7d249f853fff3f5771a1fe3797f733f09db5a0.bin\n\nKaspersky published an article about this false flag operation 38.\n\nWORKING HOURS AND DAYS OF THE LAZARUS  DEVELOPERS\n\nWe  extracted  all  compilation  timestamps  from  the  samples  in  our  dataset  and  removed  those  that   \nwere  either  altered  or  inconsistent.  Some  samples  appeared  to  be  legitimate  software  infected  by \nLazarus  without  recompiling,  making  the  timestamps  irrelevant.  For  instance,  we  ignored  the  sample \n2223a93521b261715767f00f0d1ae4e692bd593202be40f3508cb4fd5e21712b  which  turned  out  to \nbe a version of the FTP tool FileZilla that the attackers altered by adding some malicious code without \nrecompiling it, leaving its original compilation timestamp and compiler fingerprints unmodified.\nAnalyzing  unaltered  compilation  timestamps,  we  see  that  the  Lazarus  developers  are  mostly  working \nbetween 8AM and 8PM UTC+9 (KST). We can even notice some breaks at lunchtime, and that Lazarus \ndevelopers are working overnight. Most samples were compiled from Monday to Saturday included.\n\nLazarus compilation timestamps by days\n\n038\n\nWhite Paper\fLazarus compilation timestamps by hours (KST / UTC+9)\n\nCONCLUSION\n\nSuch  a  classification  proved  to  be  very  relevant  for  North  Korean  malware.  It  highlighted  heavy  links \nillustrating  code  and  architecture  reuse  inside  established  groups,  as  well  as  relations  (or  lack  of) \nbetween these separate groups.\n\nAttacker groups like Lazarus are so active they struggle or are reluctant to renew their arsenal. Studying \ntheir TTPs prove to be very valuable and will greatly help properly reacting to incident. As a defender, \nbeing  able  to  exploit  Lazarus  laziness  and  carelessness  by  quickly  identifying  their  TTPs  will  give  you \nsome key information: you know what they want, how they plan to achieve it and with which tools.\n\nThe information given in this report, the classification LEXFO established and the associated internally \ndeveloped  tools  helped  the  incident  response  team  practically  during  missions  involving  Lazarus,  as \nit narrowed down the analysis and gave good hints on where to look for technical clues: persistence, \ncommunications, lateral movements, exfiltration etc.\n\n039\n\nThe Lazarus ConstellationV. Classifying North Korean malware and interpreting links \f040\n\nWhite Paper\fVI. DETECTION  \n    & MITIGATION\n\nVULNERABILITY USED\n\nNorth  Korean  groups  have  been  exploiting  a  lot  of  vulnerabilities,  such  as  0days  and  as  1days.  Most \nexploits target Adobe Flash Player as well as the Hangul Word Processor, though groups like Andariel \nhave also been seen finding and exploiting vulnerabilities in specific corporate software. The list of CVE \nthat have been exploited by DPRK groups below shows once again that keeping its software updated is \ncrucial.\n\n \u2014 Lazarus\n\nLazarus and its subgroups Andariel and Bluenoroff often rely on software vulnerabilities to infect their \ntargets. Here are some of them:\n\nVulnerability \n\n0day  Comments\n\nCVE-2014-0497 \n\nCVE-2015-6585 \n\nYes \n\nYes \n\nFlash exploit\n\nVulnerability in HWP\n\nCVE-2015-8651 \n\nNo \n\nFlash exploit\n\nCVE-2016-0034 \n\nCVE-2016-0189 \n\nYes \n\nYes \n\nSilverlight exploit\n\nInternet Explorer Scripting Engine Remote Memory Corruption Vulnerability\n\nCVE-2016-1019 \n\nNo \n\nFlash expoit\n\nCVE-2016-4117 \n\nCVE-2017-0261 \n\nCVE-2018-8373 \n\nCVE-2018-4878 \n\nYes \n\nYes \n\nYes \n\nYes \n\nFlash exploit used in watering hole attacks\n\nEPS restore use-after-free\n\nVBScript Engine vulnerability used by the DarkHotel  subgroup\n\nFlash exploit used by APT37 and Lazarus\n\nCVE-2018-20250 \n\nNo  WinRar exploit targeting Israeli companies\n\nCVE-2018-8174 \n\nYes \n\nInternet Explorer VBS engine vulnerability\n\n041\n\nThe Lazarus ConstellationVI. Detection & Mitigation\f \u2014 APT37 / Reaper\n\nAPT37  usually  exploits  1day  to  target  unpatched  systems,  mostly  through  Adobe  vulnerabilities.  The \nvulnerabilities below were attributed to APT37 by FireEye 39:\n\nVulnerability\n\n0day\n\nComments\n\nCVE-2013-4979\n\nCVE-2014-8439\n\nCVE-2015-2387\n\nNo\n\nNo\n\nNo\n\nBuffer overflow in EPS Viewer\n\nAdobe Flash Player arbitrary code execution\n\nAdobe Type Manager Font Driver memory corruption vulnerability\n\nVulnerability \n\n0day  Comments\n\nCVE-2015-2419 \n\nNo \n\nInternet Explorer JScript RCE\n\nCVE-2015-2545 \n\nNo  Microsoft Office Malformed EPS File Vulnerability\n\nCVE-2015-3105 \n\nCVE-2015-5119 \n\nCVE-2015-5122 \n\nCVE-2015-7645 \n\nCVE-2016-1019 \n\nCVE-2016-4117 \n\nNo \n\nNo \n\nNo \n\nNo \n\nNo \n\nNo \n\nAdobe Flash Player arbitrary code execution\n\nAdobe Flash Player Use-After-Free leading to code  execution\n\nAdobe Flash Player Use-After-Free leading to code  execution\n\nAdobe Flash Player vulnerability\n\nAdobe Flash Player vulnerability\n\nAdobe Flash Player vulnerability\n\nCVE-2017-0199 \n\nNo  Microsoft Office/WordPad Remote Code Execution  Vulnerability\n\nCVE-2018-4878 \n\nYes \n\nFlash exploit also used by Lazarus\n\nDETECTING LAZARUS ACTIVITIES\n\n \u2014 Network detection rules\n\nUS-CERT Snort rules to detect Fake TLS packets 40:\n\nalert tcp any any -> any any (msg:\u201dMalicious SSL 01 Detected\u201d;content:\u201d|17 03 \n01 00 08|\u201d; pcre:\u201d/\\x17\\x03\\x01\\x00\\x08.{4}\\x04\\x88\\x4d\\x76/\u201d; rev:1; sid:2;)\n\nalert tcp any any -> any any (msg:\u201dMalicious SSL 02 Detected\u201d;content:\u201d|17 03 \n01 00 08|\u201d; pcre:\u201d/\\x17\\x03\\x01\\x00\\x08.{4}\\x06\\x88\\x4d\\x76/\u201d; rev:1; sid:3;)\n\nalert tcp any any -> any any (msg:\u201dMalicious SSL 03 Detected\u201d;content:\u201d|17 03 \n01 00 08|\u201d; pcre:\u201d/\\x17\\x03\\x01\\x00\\x08.{4}\\xb2\\x63\\x70\\x7b/\u201d; rev:1; sid:4;)\n\nalert tcp any any -> any any (msg:\u201dMalicious SSL 04 Detected\u201d;content:\u201d|17 03 \n01 00 08|\u201d; pcre:\u201d/\\x17\\x03\\x01\\x00\\x08.{4}\\xb0\\x63\\x70\\x7b/\u201d; rev:1; sid:5;)\n\nThe following rule will specifically detect the SWPSVC RAT LEXFO discovered:\n\nalert tcp any -> any (msg:\u201dLazarus Stage 1 SWPSVC Handshake\u201d; dsize:5; content:\u201d|17 \n03 01 00 04|\u201d;)\n\n \u2014 Yara rules\n\nLEXFO  produced  the  following  YARA  rules  to  sign  and  allow  detection  of  the  latest  Lazarus  samples \nencountered during the investigation.\n\nThe rules lazarus_forward_libcurl and themida_virtualizer can produce false-positives, as they \nwill respectively detect any file with a specific statically compiled libcurl library and files packed with \nThemida Code-Virtualizer, which can be legitimate in some cases. These rules will work on uncompressed \ndisk and memory dumps, as well as network capture files.\n\n042\n\nWhite Paper\frule lazarus_forward_\nstrings { strings:\n\n$s1 = \u201cssylka\u201d fullword\n$s2 = \u201custanavlivat\u201d fullword\n$s3 = \u201cpereslat\u201d fullword\n$s4 = \u201cNachalo\u201d fullword\n$s5 = \u201ckliyent2podklyuchit\u201d full-\n\nword condition:\n(3 of ($s*))\n\n}\nrule lazarus_forward_lib-\n\ncurl { strings:\n\n$s1 = \u201c7.49.1\u201d fullword\n$s2 = \u201cx86_64-pc-win32\u201d fullword\n$s3 = \u201clibcurl/7.49.1\u201d full-\n\nword condition:\n(3 of ($s*))\n\n}\nrule lazarus_forward_tcp \n\n{ strings:\n\n$s1 = {b0 00 b0 00 b0 00 b0 00 b0 00 b0 00 e9 00}\n\ncondition:\n\n(1 of ($s*))\n\n}\nrule lazarus_sqcsvc \n\n{ strings:\n\n$s1 = \u201c7.49.1\u201d fullword\n$s2 = \u201cx86_64-pc-win32\u201d fullword\n$s3 = \u201clibcurl/7.49.1\u201d fullword\n$s4 = \u201csock_64.dll\u201d full-\n\nword condition:\n(4 of ($s*))\n\n}\nrule themida_virtualizer \n\n{ strings:\n\n$s1 = \u201cv-lizer\u201d fullword con-\n\ndition:\n\n(uint16(0) == 0x5a4d and filesize < 5MB and 1 of ($s*))\n\n}\nrule lazarus_rc4 \n{ strings:\n\n$s1 = {4E 38 1F A7 7F 08 CC AA 0D 56 ED EF F9 ED 08  EF}\n$s2 = {11 20 00 00 00 00 00 00 00 00 00 00 00 00 00  00}\n$s3 = {53 87 F2 11 30 3D B5 52 AD C8 28 09 E0 52 60 D0 6C C5 68 E2 70 77 3C 8F 12 C0 7B \n13 D7 B3 9F\n\n7C}\n}\n\n$s4 = {85 C0 7C 17 8B 4D F4 8B 76 20 33 C0 3B C8 77 0B}\n\ncondition:\n\n(1 of ($s*))\n\nrule lazarus_svcbat \n\n{ strings:\n\n$s1 = \u201csc create sqcsvc\u201d\n$s2 = \u201csc start \n\nsqcsvc\u201d condition:\n(1 of ($s*))\n\n}\nrule lazarus_capture \n\n{ strings:\n$s2 = \u201c[ENTER]\u201d wide fullword\n$s3 = \u201cSpliceImages: CreateCompatibleBitmap failed\u201d \nfullword condition:\n(2 of ($s*))\n\n}\nrule lazarus_injector \n\n{ strings:\n\n$s1 = \u201cfinding target project\u201d\n$s2 = \u201cdelete \n\nddd\u201d condition:\n(2 of ($s*))\n\n}\n\nThe full Yara ruleset we used for this report will be available to our clients.\n\n043\n\nThe Lazarus ConstellationVI. Detection & Mitigation\fRECOMMENDATIONS\n\nSeveral Lazarus infection vectors can be severely mitigated to prevent or block an attack.\n\n \u2014 Preventing an infection\n\nThe  WannaCry  incident  showed  how  important  it  is  keeping  one\u2019s  OS  updated.  Lazarus  will  certainly \ncontinue to implement and leverage such 1day vulnerabilities to target unpatched systems quickly after \na fix is deployed.\n\nAs shown in this report, Lazarus leverages known vulnerabilities in webservers to try and get a first access \nto the internal network of a target. To mitigate this vector, it is necessary to make sure all exposed servers \nand their components are up-to-date and isolated from the internal networks of the organizations.\n\nFurthermore, Lazarus leveraged several 0day and 1day vulnerabilities in popular software such as Flash  \nPlayer,  HWP  and  Silverlight.  Keeping  those  software  up-to-date  is  mandatory.  The  group  is  also  able \nto  quickly  find  and  exploit  vulnerabilities  in  custom  internal  software  used  by  companies,  sometimes \nleading to supply chain attacks. Auditing software used internally is also advised to mitigate this  vector.\n\n \u2014 Mitigating lateral movements\n\nLazarus uses mostly legitimate tools for lateral movements. When a form of authentication is needed, \nthey will either reuse stolen passwords gathered with Mimikatz-like tools or keyloggers or try to bruteforce \nit with dictionaries.\n\nTools like PSExec can be monitored through log analysis. As Lazarus implants usually achieve persistent \nby  installing  services,  event  id  7045  and  4697  with  the  Service  Start  Type  information  set  to \nSERVICE_AUTO_START must be closely monitored.\n\nLast but not least, enforcing a strong password policy is obviously advised.\n\n \u2014 Threat intelligence\n\nAs  Lazarus  activities  are  actively  monitored  by  many  security  firms  such  as  LEXFO,  it  is  important  for \nsecurity  teams  to  stay  up-to-date  and  follow  threat  intelligence  reports.  As  we  showed  in  this  paper, \nLazarus will most of the time reuse known and easy-to-detect communication protocols and tools, and \nmost infections can therefore be prevented.\n\nIf any indicator of a compromised system is found, it is strongly advised to quickly contact a specialized \nfirm that knows how the attackers work and can quickly assess the impact of the attack and mitigate it.\n\n044\n\nWhite Paper\fVII.  APPENDICES\n\nAPPENDIX A: ABBREVIATIONS\n\nAbbreviation\n\nMeaning\n\nRAT\n\nPCAP\n\nMUI\n\nDDoS\n\nTTP\n\nTLS\n\nC&C\n\nCERT\n\nAPK\n\nRemote Access Tool\n\nPacket Capture\n\nMultiLanguage User Interface extension\n\nDistribured Denial of Service\n\nTactics, Techniques/Tools and Procedures\n\nTransport Layer Security\n\nCommand & Control server\n\nComputer Emergency Response Team\n\nAndroid Package Kit\n\nAPPENDIX B: LIST OF STUDIED SAMPLES\n\nHashes are SHA256.\n\n766d7d591b9ec1204518723a1e5940fd6ac777f606ed64e731fd91b0b4c3d9fc \nd4616f9706403a0d5a2f9a8726230a4693e4c95c58df5c753ccc684f1d3542e2 \n95c8ffe03547bcb0afd4d025fb14908f5230c6dc6fdd16686609681c7f40aca2 \n99017270f0af0e499cfeb19409020bfa0c2de741e5b32b9f6a01c34fe13fda7d \n7646c2afbc8b9719b0295e5a880bb89fb85bdd4346603a52768b161eda12e8be \nf12db45c32bda3108adb8ae7363c342fdd5f10342945b115d830701f95c54fa9 \n077d9e0e12357d27f7f0c336239e961a7049971446f7a3f10268d9439ef67885\na1c483b0ee740291b91b11e18dd05f0a460127acfc19d47b446d11cd0e26d717 \n3c1e4c334629b20e21b8ab08b8aa19db738f2ed761290ffdd26665cd61cb7807 \n7c73619ff8d5e4ed3b29b7ae71a69602df4071fd8c1029f9674e9978cdc03de9 \n6b90e2a3f0ad8819b5afe67bf13451c9782af26a9f2bdac3a0e042569054e5fd \n73dcb7639c1f81d3f7c4931d32787bdf07bd98550888c4b29b1058b2d5a7ca33 \nc66ef8652e15b579b409170658c95d35cfd6231c7ce030b172692f911e7dcff8 \nf8f7720785f7e75bd6407ac2acd63f90ab6c2907d3619162dc41a8ffa40a5d03 \n32ec329301aa4547b4ef4800159940feb950785f1ab68d85a14d363e0ff2bc11 \nc66ef8652e15b579b409170658c95d35cfd6231c7ce030b172692f911e7dcff8 \nb05aae59b3c1d024b19c88448811debef1eada2f51761a5c41e70da3db7615a9 \nf8f7720785f7e75bd6407ac2acd63f90ab6c2907d3619162dc41a8ffa40a5d03 \n73dcb7639c1f81d3f7c4931d32787bdf07bd98550888c4b29b1058b2d5a7ca33 \n1fe1fa6b01166c373de68c029d8cdda60cb1599053f935e580f3f40aaf106345 \nfe43bc385b30796f5e2d94dfa720903c70e66bc91dfdcfb2f3986a1fea3fe8c5 \n0608e411348905145a267a9beaf5cd3527f11f95c4afde4c45998f066f418571\nfe43bc385b30796f5e2d94dfa720903c70e66bc91dfdcfb2f3986a1fea3fe8c5 \n084b21bc32ee19af98f85aee8204a148032ce7eabef668481b919195dd62b319 \nccafbcff1596e3dfd28dcb97a5ba85e6845e69464742edfe136fe09bbec86ba1 \nb9a26a569257fbe02c10d3735587f10ee58e4281dba43474dbdef4ace8ea7101 \n\n045\n\nThe Lazarus ConstellationVII. Appendices\f0608e411348905145a267a9beaf5cd3527f11f95c4afde4c45998f066f418571\n8a1d57ee05d29a730864299376b830a7e127f089e500e148d96d0868b7c5b520\n8a1d57ee05d29a730864299376b830a7e127f089e500e148d96d0868b7c5b520\n084b21bc32ee19af98f85aee8204a148032ce7eabef668481b919195dd62b319 \n1a01b8a4c505db70f9e199337ce7f497b3dd42f25ad06487e29385580bca3676 \n32ec329301aa4547b4ef4800159940feb950785f1ab68d85a14d363e0ff2bc11 \n26a2fa7b45a455c311fd57875d8231c853ea4399be7b9344f2136030b2edc4aa \nec254c40abff00b104a949f07b7b64235fc395ecb9311eb4020c1c4da0e6b5c4 \n26a2fa7b45a455c311fd57875d8231c853ea4399be7b9344f2136030b2edc4aa \nd8af45210bf931bc5b03215ed30fb731e067e91f25eda02a404bd55169e3e3c3 \nec44ecd57401b3c78d849115f08ff046011b6eb933898203b7641942d4ee3af9 \n0753f8a7ae38fdb830484d0d737f975884499b9335e70b7d22b7d4ab149c01b5 \n8a81a1d0fae933862b51f63064069aa5af3854763f5edc29c997964de5e284e5 \nc4a07bfc37a44dc85df2c63f369abb530dc2193ab1be506fc5dd45d56a44ca76 \n9e4c6410ab9eda9a3d3cbf23c58215f3bc8d3e66ad55e40b4e30eb785e191bf8 \n1b46afe1779e897e6b9f3714e9276ccb7a4cef6865eb6a4172f0dd1ce1a46b42 \n2e7c052fbc08473f60d5365157b1a0952e2dddee630fe4abe827382dade23a76 \nf8967b814c814c36559987a5baec67ebc44e9e1031600e1cf4e0c2bdaf8c6497 \nfa405cd8cd8565301d138e3826bd121cc8691731b889a7503132bda6c57f4691\nadafcdf7196a73a24b1e6e523b0a3dd4c62886702b45a9b29021bc961f0d5ea4 \n6a9c46d96f001a1a3cc47d166d6c0aabc26a5cf25610cef51d2b834526c6b596 \n48cf912217c1b5ef59063c7bdb93b54b9a91bb6920b63a461f8ac7fcff43e205 \n32ec329301aa4547b4ef4800159940feb950785f1ab68d85a14d363e0ff2bc11 \n0608e411348905145a267a9beaf5cd3527f11f95c4afde4c45998f066f418571\nb05aae59b3c1d024b19c88448811debef1eada2f51761a5c41e70da3db7615a9 \n73dcb7639c1f81d3f7c4931d32787bdf07bd98550888c4b29b1058b2d5a7ca33 \nf8f7720785f7e75bd6407ac2acd63f90ab6c2907d3619162dc41a8ffa40a5d03 \nfe43bc385b30796f5e2d94dfa720903c70e66bc91dfdcfb2f3986a1fea3fe8c5 \n084b21bc32ee19af98f85aee8204a148032ce7eabef668481b919195dd62b319 \n1a01b8a4c505db70f9e199337ce7f497b3dd42f25ad06487e29385580bca3676 \nb9a26a569257fbe02c10d3735587f10ee58e4281dba43474dbdef4ace8ea7101 \n8a1d57ee05d29a730864299376b830a7e127f089e500e148d96d0868b7c5b520\nc66ef8652e15b579b409170658c95d35cfd6231c7ce030b172692f911e7dcff8 \nc6c332ae1ccb580ac621d3cf667ce9c017be41f8ad04a94c0c0ea37c4789dd14 \nd62bf83fb5a7b148f326908051b149b77663149d47426ce749e944f7abf5d304\n84edc9b828de54d4bd00959fabf583a1392cb4c3eab3498c52818c96dc554b90 \n4f06eaed3dd67ce31e7c8258741cf727964bd271c3590ded828ad7ba8d04ee57 \ne0257d187be69b9bee0a731437bf050d56d213b50a6fd29dd6664e7969f286ef \nb5838ecaad041a033ad16ddd6644d502546bc4916cbd10636c27b3eed3214578 \ne7b9c37be0ffca97002294f5813405855731b37b3b4ad2f4d73d1da9b7c535e5 \n2db6f93e99e55ef46c5b3ca52a52e34f088b7c1cd3835938557842b71b24ef56 \n283d1d2efa36d31fc00425cc88dab82e426c1c51d1b4da7925c91aef56d817a3 \n25ea7f67638e7e7b8706566788aa25a7d91843232ece85592b6bfe1eb4cd317a \n25ea7f67638e7e7b8706566788aa25a7d91843232ece85592b6bfe1eb4cd317a \n1e4d34fe08da837f16d1c04c313c3b2e46a09bf55376d4573ae1ebff1fae53f4 \n5d25465ec4d51c6b61947990fb148d0b1ee8a344069d5ac956ef4ea6a61af879 \n707e37e085014d2a8e6b0596322ac8f13664666c0d44f7963d2174dc4dc37ef6\n2151c1977b4555a1761c12f151969f8e853e26c396fa1a7b74ccbaf3a48f4525 \n70034b33f59c6698403293cdc28676c7daa8c49031089efa6eefce41e22dccb3 \n49757cf85657757704656c079785c072bbc233cab942418d99d1f63d43f28359\n05feed9762bc46b47a7dc5c469add9f163c16df4ddaafe81983a628da5714461 \n6323816c6476cb3d9c28461c5c45c858087f1eefed96e3f83843f5bcc299219e \nb3de3f9309b2f320738772353eb724a0782a1fc2c912483c036c303389307e2e\na29b07a6fe5d7ce3147dd7ef1d7d18df16e347f37282c43139d53cce25ae7037 \nb66624ab8591c2b10730b7138cbf44703abec62bfc7774d626191468869bf21c \nf4e0f145830ec7a9dace5a4b7d5af5f1e93662edcad40c08d57dc825d316174d \nfe696f8fb3f927bfbc9dbdcb067f87f3ada1afa8a76385f16e5b3dd70adf5ca2 \n2011b9aa61d280ca9397398434af94ec26ddb6ab51f5db269f1799b46cf65a76 \nef40f7ddff404d1193e025081780e32f88883fa4dd496f4189084d772a435cb2 \n4d37f80da97845129debf3244e1f731d2c93a02519f9fdaa059f5f124cf7c26f \nfb94a5e30de7afd1d9072ccedd90a249374f687f16170e1986d6fd43c143fb3a \nf31bee70fd10f6846890f42947de40061bacb24fb51f43ef6c75325ec9b95de8 \n6f37b758a7a015c2abdab7941b416deb508f2ab9143a64f9a8188ed0d0db3d14 \n2011b9aa61d280ca9397398434af94ec26ddb6ab51f5db269f1799b46cf65a76 \na9bc09a17d55fc790568ac864e3885434a43c33834551e027adb1896a463aafc \n4a740227eeb82c20286d9c112ef95f0c1380d0e90ffb39fc75c8456db4f60756 \n820ca1903a30516263d630c7c08f2b95f7b65dffceb21129c51c9e21cf9551c6 \n032ccd6ae0a6e49ac93b7bd10c7d249f853fff3f5771a1fe3797f733f09db5a0 \n82645e88736e11321774db7a7b28bd62d4ab133f859ecd35a4b2fa1d471412b7 \n98ccf3a463b81a47fdf4275e228a8f2266e613e08baae8bdcd098e49851ed49a \ndee482e5f461a8e531a6a7ea4728535aafdc4941a8939bc3c55f6cb28c46ad3d \n94aa827a514d7aa70c404ec326edaaad4b2b738ffaea5a66c0c9f246738df579 \n111ab6aa14ef1f8359c59b43778b76c7be5ca72dc1372a3603cd5814bfb2850d \n0ca12b78644f7e4141083dbb850acbacbebfd3cfa17a4849db844e3f7ef1bee5 \n0852f2c5741997d8899a34bb95c349d7a9fb7277cd0910656c3ce37a6f11cb88 \nee7a9a7589cbbcac8b6bf1a3d9c5d1c1ada98e68ac2f43ff93f768661b7e4a85 \nc54837d0b856205bd4ae01887aae9178f55f16e0e1a1e1ff59bd18dbc8a3dd82 \nae1b32aac4d8a35e2c62e334b794373c7457ebfaaab5e5e8e46f3928af07cde4 \n2981e1a1b3c395cee6e4b9e6c46d062cf6130546b04401d724750e4c8382c863\n9097b372f7f844c430aa8c1b217a50754b28434172d5af5d992bfcbce9dfeb4f\ne7a542312ec718300ed9f229aaa60e5e2ec11aaa99387b76ed2e377bfad8b86e \n7334209ace81d67babbbb37f5a0d2af24160f637a8559483e14685927df6b7fa \n45bfa1327c2c0118c152c7192ada429c6d4ae03b8164ebe36ab5ba9a84f5d7aa \n5cbc07895d099ce39a3142025c557b7fac41d79914535ab7ffc2094809f12a4b \ndb350bb43179f2a43a1330d82f3afeb900db5ff5094c2364d0767a3e6b97c854 \n90eba6416f5e1b35c9bf41b4a25ac880c491dd2f10d993d8a65091f1adf68ee8 \n29431dc086499c7ee64236a365615be5e5c861452f047ffac5656120ece59266\n2230edace3f42a5750f738f28814759b670922f16aa778e97d039d10fe9bab02 \n7aa99ebc49a130f07304ed25655862a04cc20cb59d129e1416a7dfa04f7d3e51 \n496841be8fb9d0042180a2bccf205e1e0bd0b41c537798265da7ad8f85cc35a2 \nbf2534b2f059547967bb453d67909921a41c10cdd19c1ec346a193060b094e2e\n\n046\n\nWhite Paper\f2df9e274ce0e71964aca4183cec01fb63566a907981a9e7384c0d73f86578fe4 \nf12db45c32bda3108adb8ae7363c342fdd5f10342945b115d830701f95c54fa9 \nbd6efb16527b025a5fd256bb357a91b4ff92aff599105252e50b87f1335db9e1 \n4b3416fb6d1ed1f762772b4dd4f4f652e63ba41f7809b25c5fa0ee9010f7dae7 \ne23900b00ffd67cd8dfa3283d9ced691566df6d63d1d46c95b22569b49011f09 \n0753f8a7ae38fdb830484d0d737f975884499b9335e70b7d22b7d4ab149c01b5 \n4c2efe2f1253b94f16a1cab032f36c7883e4f6c8d9fc17d0ee553b5afb16330c \n201a9c5fe6a8ae0d1c4312d07ef2066e5991b1462b68f102154bb9cb25bf59f9 \n4d4b17ddbcf4ce397f76cf0a2e230c9d513b23065f746a5ee2de74f447be39b9 \nebba2aa065059f1f841a86100905310d11e1b8d7a0f8e89bc1227b19ab69e9af \n2e835c7496fb4fc1c53665ef89fffdcbcc8dc49bea0baecc5b8496006ea601bb \n2e373e199d2b6dea0241c672bbcbccedac86cba2ed2fdefc84a5d8187acb896f \nffa97eb4875129646376bc88e9ff99ffeff2c6bba3a06f6727d5f343fc7f6b51 \n0efd49bfbdc8655e5db47d45b6ce4c2c64d6152665f45ef7ac57f04459369487 \n2cab9946741fc4cddefcec2104d4fe6d76390868f60f3207e9cb0e210bbe8db0 \nde4ff8901766e8fc89e8443f8732394618bf925ce29b6a8aafe1d60f496e7f0e \n1a8655886ea6be9ae0a71e845b5a334b476494b3aad7bfe6510218059eba5788 \n0b269bdd4c2d11ce0cd050bddf8f6ff618126c2b531e8ad3ab36ecc1a88d8162 \n0a812976b9412ed28aee3ac3de57873fafe1ddfa0e6b9026078017b810d1b24e \n2b6288bbd81bb9d666c3a0372f26ede47c8c9ff11c604307982d51654fb9e850 \n1ec2e4d02a89277afc0ee35d2d72009a5dbe96f88e1bc70bbfb3a9224478b7d5 \n0af925cd9d9a417f47882391555fa207398bfb87c3c6edc65f2ea42843cbdc3d \n1d24d8268c2f8e82b65d58429c166367eee9683c38a1408910536d8084f4ad46\n2db8a9c401911c7317e8a89c35d979d0e8e9ba718ae13a0a0cfedd957654ec10\n276af9add9b6d8d96a950525b647d1eed247b3f63101bd942bd9816d0f8f9a6b \n9661f70ead79a1ff35282bf2d061acb2733900eea87e2233ac7b8f8d3a80ad75 \neceb01a902c2b7ccd580dd639ae5a1dc366e73cc8a27230557bb2237bd20e452 \n7f4e7618af45a61003c74b373095b206a885b26079830f7ee0dada28f8429623\n28006dc505920fc3589933fda216052abc09d4a007bc76ba2542f7876ebd299b \n24bce152c7f884a923b29a4130931c63cd3f9c0ab08a28a79c7995356a146131\nc6a78c2c4d5078a1a769bdfb071311eb3bb01750e8bf1010261028a1db68671b \n373938e958030f1764b4db71df953df5c460a30e895583b7901da5c6954b0739\ndc827f7a1e5ee4600697d7d3efdeb8401b7a9af3d704d0462e7d3e0804a9069d \n32e98f39bcde86885c527ddcf68fad67d0a7e6c23877672ebfd4c2a6a3f545e5 \n90abfe3e4f21b5a16cd1ff3c485f079f73f5e7bbaca816917204858bb08007fc \ne69d6c2d3e9c4beebee7f3a4a3892e5fdc601beda7c3ec735f0dfba2b29418a7 \n36f43755e5e5988d112f28fbc1dcd9bdee4a31fb7004b52db26dacdbfe7cb72f \n929dc09a8bd8491b77f050a2736d39c30597ec7090d8f081eeb6179b6f8ab033 \n6c627a4be54b6377af9f73ab0923aeebcccbb57ec94e995a2171deb69d61af9d \nd7a71f83d576fdf75e7978539bac04ad8b6605207b29379b89c24c0d0f31da61 \nd9757441e40d05a863d8dcfedab684d6644061231341c4106a3721436bc034ea\n510f83af3c41f9892040a8a80b4f3a4736eebee2ec4a7d4bfee63dbe44d7ecff \n1fbecec5da37b9a6e6dd63add4988fe7e2c4249aada883f58bcb794020455b77 \n422c767682bee719d85298554af5c59cf7e48cf57daaf1c5bdd87c5d1aab40cc \n239ed753232d3cc0e75323d16d359150937934d30da022628e575997c8dd60a2\ne9f3f6e286f5d06addb82a2fc4b3bcdf1142570183c5cac8e8156b2f1c26b74f \n0d99b59ee6427f62596dbd7d016cc9ad5b365da152806703dbc5a5225164bbd5 \nd1515a888defff96f724d49fe05bace85066f6eeafd81cd0d9c4c27fdebc9cbb \n7af070db3f5a3a08eeb5439039c1eee30f10c637b1c0d88e723104d422048863 \nd060123c21869b765b22b712a8ca47266a33464095411e2b7bdf7e327d23ed07\n1b8d3e69fc214cb7a08bef3c00124717f4b4d7fd6be65f2829e9fd337fc7c03c \n7f000893320d77e012686e20e1212e297408d5684335f7f24e40889401e24dff\n0b6056e7ce278fb31bf644ef41e9532009e5dfbc33849b29f59c77ec993a8f46 \ncf065e50a5bef24099599af6a60a78c1607a04b21d3573a25ab26bf044a119d6 \nca70aa2f89bee0c22ebc18bd5569e542f09d3c4a060b094ec6abeeeb4768a143 \nc0e22e80ea020ca8f71f58a8b53855293abdf8d4e0b34a69068004abaac60f42 \n0237b186086fa4d13e8c854dcf2d0f8a19fcbe62a58a415e9a5a933f1154e7d8 \n0c06e129902925c7ebd70e93d4d09707add781d8bd89cd557cda023045f3853e \n2eb447785e5b35c42d842706d593a907d0bdbc50ad9d0327c3591ac4ef17ce6e \nb783a2a69591cc1509acd0d3b33bdf69c87908669741f03a06f7d152cbe2923e \na917c1cc198cf36c0f2f6c24652e5c2e94e28d963b128d54f00144d216b2d118 \na1260fd3e9221d1bc5b9ece6e7a5a98669c79e124453f2ac58625085759ed3bb \nfd5a7e54cfdd3b3f32b44d8fdd845e62d6b86c0ddb550c544d659588d06ceaee \n37f652e2060066a1c2c317195573a334416f5a9b9933cfb1ece55bea8048d80f \nd4616f9706403a0d5a2f9a8726230a4693e4c95c58df5c753ccc684f1d3542e2 \n5d25465ec4d51c6b61947990fb148d0b1ee8a344069d5ac956ef4ea6a61af879 \n3cc9d9a12f3b884582e5c4daf7d83c4a510172a836de90b87439388e3cde3682 \nbfb39f486372a509f307cde3361795a2f9f759cbeb4cac07562dcbaebc070364 \nfe51590db6f835a3a210eba178d78d5eeafe8a47bf4ca44b3a6b3dfb599f1702 \ndfa984f8d6bfc4ae3920954ec8b768e3d5a9cc4349966a9d16f8bef658f83fcd \n9b86a50b36aea5cc4cb60573a3660cf799a9ec1f69a3d4572d3dc277361a0ad2 \n37b04dcdcfdcaa885df0f392524db7ae7b73806ad8a8e76fbc6a2df4db064e71 \n4a84452752cf8e493ae820871096044edd9f6453366842927148e7d8e218dc87\ndbae68e4cab678f2678da7c48d579868e35100f3596bf3fa792ee000c952c0ed\n4e8c10a7fa51a3ab089b284e86a7daaca779ed82ba1750607fc3bfa91681f9b1 \ne79bbb45421320be05211a94ed507430cc9f6cf80d607d61a317af255733fcf2 \n7429a6b6e8518a1ec1d1c37a8786359885f2fd4abde560adaef331ca9deaeefd \n80b5cc9feb10fac41ee2958ab0f751bf807126e34dcb5435d2869ef1cf7abc41 \na606716355035d4a1ea0b15f3bee30aad41a2c32df28c2d468eafd18361d60d6 \na4a2e47161bbf5f6c1d5b1b3fba26a19dbfcdcf4eb575b56bde05c674089ae95 \n9f177a6fb4ea5af876ef8a0bf954e37544917d9aaba04680a29303f24ca5c72c \n6f474f2af52961e9d7bbd467d98fb7886579932e2fe9567c28c8be3ab845dc5d \n9b383ebc1c592d5556fec9d513223d4f99a5061591671db560faf742dd68493f \n636844ce36f41641d854a1b239df91da3103873d3dfec0c25087582eec064e4d \n34ad7b845707674e5f4f52e7bc60148a0971ec2f375d80ec3dc48387848973ba \n4659dadbf5b07c8c3c36ae941f71b631737631bc3fded2fe2af250ceba98959a \n5b7c970fee7ebe08d50665f278d47d0e34c04acc19a91838de6a3fc63a8e5630 \n4cf164497c275ae0f86c28d7847b10f5bd302ba12b995646c32cb53d03b7e6b5 \nae086350239380f56470c19d6a200f7d251c7422c7bc5ce74730ee8bab8e6283 \n4659dadbf5b07c8c3c36ae941f71b631737631bc3fded2fe2af250ceba98959a \n6dae368eecbcc10266bba32776c40d9ffa5b50d7f6199a9b6c31d40dfe7877d1 \n\n047\n\nThe Lazarus ConstellationVII. Appendices\f53e9bca505652ef23477e105e6985102a45d9a14e5316d140752df6f3ef43d2d \n8fcd303e22b84d7d61768d4efa5308577a09cc45697f7f54be4e528bbb39435b \ne79bbb45421320be05211a94ed507430cc9f6cf80d607d61a317af255733fcf2 \neff3e37d0406c818e3430068d90e7ed2f594faa6bb146ab0a1c00a2f4a4809a5 \n1d0999ba3217cbdb0cc85403ef75587f747556a97dee7c2616e28866db932a0d\ne40a46e95ef792cf20d5c14a9ad0b3a95c6252f96654f392b4bc6180565b7b11 \nff2eb800ff16745fc13c216ff6d5cc2de99466244393f67ab6ea6f8189ae01dd \nfee0081df5ca6a21953f3a633f2f64b7c0701977623d3a4ec36fff282ffe73b9 \n9f177a6fb4ea5af876ef8a0bf954e37544917d9aaba04680a29303f24ca5c72c \n16fe4de2235850a7d947e4517a667a9bfcca3aee17b5022b02c68cc584aa6548 \nf51336e862b891f78f2682505c3d38ea7de5b0673d6ef7a3b0907c0996887c22\nc9209951f7866849c9b1e5375bfb511b368394e52f6a276e86fdd542a79c2cd5 \n2223a93521b261715767f00f0d1ae4e692bd593202be40f3508cb4fd5e21712b\n39cbad3b2aac6298537a85f0463453d54ab2660c913f4f35ba98fffeb0b15655 \nae9a4e244a9b3c77d489dee8aeaf35a7c3ba31b210e76d81ef2e91790f052c85 \n32f24601153be0885f11d62e0a8a2f0280a2034fc981d8184180c5d3b1b9e8cf \ned01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa \n1be0b96d502c268cb40da97a16952d89674a9329cb60bac81a96e01cf7356830 \n3e6de9e2baacf930949647c399818e7a2caea2626df6a468407854aaa515eed9 \nd8a9879a99ac7b12e63e6bcae7f965fbf1b63d892a8649ab1d6b08ce711f7127 \n32f24601153be0885f11d62e0a8a2f0280a2034fc981d8184180c5d3b1b9e8cf \ned01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa \naff73144a359020abbb4bde3f80858d822b840dd7171ba7946b77ba9b3487831 \ndeefab8ee3d082119cc69c5dbdaf5faddeae36fbbd2345b1dc0463d07b65f13b \n4e1c5141652acf8ea66b7d6dbb3fcdd96353e7d27c9e5698792c199aaf3f05c4 \n216d262e614e0bacff4e23077492ab9711b68b7ba2fbc17609ee1052093f59fc \n95c2186be69601ae37f8269cb487f8f19d495b9f811908f90ec97bae9333db20 \ndcccd8859e532cc54f66f54e88fbe6eb52b3d5175233da65233bfddf49c165b4 \ne0b1ed0f1fb8648ccdbb8a844fef5cf9b3b9eb46902289122c508bbf7d2e8d6e \n63d49254ee2d07ce08bd981743c17f3d5a3242478cea883332e0cc1ae43c0fe6 \n6cec00f9d3b7a34c899b1b0cdb69eb5356fa33b80144a10499b7ec905b12e903 \n7a57d3b9da733bf66894341e70ba5a0059f1046576d9f8ae07b7a48945bdda66 \naff73144a359020abbb4bde3f80858d822b840dd7171ba7946b77ba9b3487831 \n302e75fe7e40e1637512e1c439d6fb3913945007428ed5d1a9bd198f08f38292\n838286ef99986dbb65cf0b939e6c70a7fb7a47f79198b75c3c45a54a3c8666b6\n16db0063e4aa666d94752414549fa09fb33142481d894b01a0fae45b339a09fb \n49a63ae5e65bf75777d49d37eb1d23fd3f2f584ae57758e3016a312d9716fa9f \nd246669cf1e25860f8601e456edd7156aa7304026ff4eadac18a2a82a18fabbf \n315c06bd8c75f99722fd014b4fb4bd8934049cde09afead9b46bddf4cdd63171 \n480b0eb4636d6a78b62e7b52b773ec0a4e92fe4a748f9f9e8bd463a3b8dd0d83 \nf895757608b7725674628d731ec9fe90fd310eb65e7041bc6617ba0b831649b4\n16db0063e4aa666d94752414549fa09fb33142481d894b01a0fae45b339a09fb \n838286ef99986dbb65cf0b939e6c70a7fb7a47f79198b75c3c45a54a3c8666b6 \neebc86e67a4a88f8cd5022adaa15b33a21ee609947dfcff75345f63d577bcd98 \n4659dadbf5b07c8c3c36ae941f71b631737631bc3fded2fe2af250ceba98959a \n5b7c970fee7ebe08d50665f278d47d0e34c04acc19a91838de6a3fc63a8e5630 \nae086350239380f56470c19d6a200f7d251c7422c7bc5ce74730ee8bab8e6283 \n4d4b17ddbcf4ce397f76cf0a2e230c9d513b23065f746a5ee2de74f447be39b9 \n45e68dce0f75353c448865b9abafbef5d4ed6492cd7058f65bf6aac182a9176a \n05a567fe3f7c22a0ef78cc39dcf2d9ff283580c82bdbe880af9549e7014becfc \nae65288f5c96b4656402853b14acd1d060b2a6303d833df5b1f10cc7a34b0025 \n7cf5d86cc75cd8f0e22e35213a9c051b740bd4667d9879a446f06277782bffd1 \n26a2fa7b45a455c311fd57875d8231c853ea4399be7b9344f2136030b2edc4aa \nec254c40abff00b104a949f07b7b64235fc395ecb9311eb4020c1c4da0e6b5c4 \nc6930e298bba86c01d0fe2c8262c46b4fce97c6c5037a193904cfc634246fbec \n16c3a7f143e831dd0481d2d57aae885090e22ec55cc8282009f641755d423fcd \n7429a6b6e8518a1ec1d1c37a8786359885f2fd4abde560adaef331ca9deaeefd \ne0cd4eb8108dab716f3c2e94e6c0079051bfe9c7c2ed4fcbfdd16b4dd1c18d4d \n163571bd56001963c4dcb0650bb17fa23ba23a5237c21f2401f4e894dfe4f50d \nefd470cfa90b918e5d558e5c8c3821343af06eedfd484dfeb20c4605f9bdc30e \nf3ca8f15ca582dd486bd78fd57c2f4d7b958163542561606bebd250c827022de \nc6930e298bba86c01d0fe2c8262c46b4fce97c6c5037a193904cfc634246fbec \n6f76a8e16908ba2d576cf0e8cdb70114dcb70e0f7223be10aab3a728dc65c41c \n851032eb03bc8ee05c381f7614a0cbf13b9a13293dfe5e4d4b7cd230970105e3 \n9a776b895e93926e2a758c09e341accb9333edc1243d216a5e53f47c6043c852 \n8dcca8c720fdb9833455427cd9b2146e2e9581e3bc595e8d97e562854133542b \n70b494b0a8fdf054926829dcb3235fc7bd0346b6a19faf2a57891c71043b3b38 \n059aab1a6ac0764ff8024c8be37981d0506337909664c7b3862fc056d8c405b0\ne08fc761cc22953de7fcc1684b7424755fa52f361dd5c6605b1469a80cb858bb\n9bf8e8ac82b8f7c3707eb12e77f94cd0e06a972658610d136993235cbfa53641 \n357b5b8ba2dd4fb3196ba5ad45b7162d8115186bac3eb33b87f2942491656f8b \nefd470cfa90b918e5d558e5c8c3821343af06eedfd484dfeb20c4605f9bdc30e \nccafbcff1596e3dfd28dcb97a5ba85e6845e69464742edfe136fe09bbec86ba1 \nf9686467a99cdb3928ccf40042d3e18451a9db97ef60f098656725a9fc3d9025 \n44884565800eebf41185861133710b4a42a99d80b6a74436bf788c0e210b9f50\n\n048\n\nWhite Paper\fAPPENDIX C: SMB BRUTEFORCE PASSWORD LIST\n\nThis password list has been used on numerous occasions by Lazarus to perform SMB bruteforce attacks.\n\n!@#$\n!@#$%\n!@#$%^\n!@#$%^&\n!@#$%^&*\n!@#$%^&*() \n\u201cKGS!@#$%\u201d \n0000\n00000\n000000\n00000000\n1111\n11111\n111111\n11111111\n11122212\n1212\n121212\n123123\n123321\n1234\n12345\n123456\n1234567\n12345678\n123456789\n123456^%$#@!\n1234qwer \n123abc \n123asd \n123qwe \n1313\n1q2w3e \n1q2w3e4r \n1qaz2wsx \n2009\n2010\n2011\n2012\n2013\n2014\n2015\n2016\n2017\n2018\n4321\n54321\n654321\n6969\n666666\n7777\n8888\n88888\n888888\n8888888\n88888888\nAdmin \nabc123 \nabc@123 \nabcd \nadmin \nadmin123 \nadmin!23 \nadmin!@#\nadministrator \nadministrador \nasdf\nasdfg \nasdfgh \n\nasdf123 \nasdf!23 \nbaseball \nbackup \nblank \ncisco \ncompaq \ncontrol \ncomputer \ncookie123 \ndatabase \ndbpassword \ndb1234 \ndefault \ndell \nenable \nfish \nfoobar \ngateway \nguest\ngolf\nharley \nhome \niloveyou \ninternet \nletmein \nLogin \nlogin \nlove \nmanager \noracle \nowner \npass \npasswd \npassword \np@ssword \npassword1\npassword! \npassw0rd \nPassword1 \npa55w0rd \npw123 \nq1w2e3 \nq1w2e3r4 \nq1w2e3r4t5\nq1w2e3r4t5y6 \nqazwsx \nqazwsxedc \nqwer\nqwert \nqwerty\n!QAZxsw2 \nroot \nsecret \nserver \nsqlexec \nshadow \nsuper \nsybase \ntemp \ntemp123 \ntest \ntest! \ntest1 \ntest123 \ntest!23 \nwinxp \nwin2000 \nwin2003 \nWelcome1\nWelcome123\nxxxx \nyxcv \nzxcv\nAdministrator \nAdmin\n\n049\n\nThe Lazarus ConstellationVII. Appendices\f050\n\nWhite Paper\fREFERENCES\n\n1.  Operation Blockbuster, Novetta, 2016\n\n2.  HiddenCobra, US-CERT\n\n3.  FBI boss: Sony hack was DEFINITELY North Korea, haters gonna hate, The Register, 2015\n\n4.  APT37 (Reaper) - The Overlooked North Korean Actor, FireEye, 2018\n\n5.  APT38 Un-usual suspects, FireEye, 2018\n\n6.  Big Game Hunting with Ryuk: Another Lucrative Targeted Ransomware, CrowdStrike, 2019\n\n7.  Targeted TrickBot activity drops \u2018PowerBrace\u2019 backdoor, NttSecurity, 2019\n\n8.  OSINT Reporting Regarding DPRK and TA505 Overlap, NorfolkInfosec, 2019\n\n9.  DPRK cyberattack timeline, Intezer\n\n10.  Sanctions against North-Korea, Wikipedia\n\n11.  From stealing confidential data to revenue-generating attacks, AhnLab, 2018\n\n12.  Full Discloser of Andariel, A Subgroup of Lazarus Threat Group, AhnLab, 2018\n\n13.  Lazarus & Watering-hole attacks, BAE Systems Threat Research Blog, 2017\n\n14.  NATION-STATE MONEYMULE\u2019S HUNTING SEASON - APT ATTACKS TARGETING FINANCIAL INSTITUTIONS, \n\nBlackHat EU, 2017\n\n15.  Alert (TA18-275A) HIDDEN COBRA \u2013 FASTCash Campaign, US-CERT, 2018\n\n16.  FASTCash: How the Lazarus Group is Emptying Millions from ATMs, Symantec, 2018\n\n17.  North Korea Bitten by Bitcoin Bug - Financially motivated campaigns reveal new dimension of the Lazarus \n\nGroup, Proofpoint, 2017\n\n18.  Lazarus Under The Hood, PDF, Securelist, 2017\n\n19.  Group-IB: 14 cyber attacks on crypto exchanges resulted in a loss of $882 million, Group-IB, 2018\n\n20.  Operation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware, Securelist, 2018\n\n21.  North Korea Bitten by Bitcoin Bug: Financially motivated campaigns reveal new dimension of the Lazarus Group, Proof-\n\npoint, 2017\n\n22.  Operation AppleJeus: Lazarus hits cryptocurrency exchange with fake installer and macOS malware, Securelist, \n\n2018\n\n23.  Mac Backdoor Linked to Lazarus Targets Korean Users, TrendMicro, 2019\n\n24.  Android Malware Appears Linked to Lazarus Cybercrime Group, McAfee, 2017\n\n051\n\nThe Lazarus ConstellationReferences\f25.  Lazarus Arisen - ARCHITECTURE / TOOLS / ATTRIBUTION, Group-IB, 2017\n\n26.  Disclosure of Chilean Redbanc Intrusion Leads to Lazarus Ties, Flashpoint, 2019\n\n27.  Lazarus Arisen - ARCHITECTURE / TOOLS / ATTRIBUTION, Group-IB, 2017\n\n28.  Lazarus\u2019 Flase Flag Malware, BAE Systems Threat Research Blog, 2017\n\n29.  Alert (TA17-318A) - HIDDEN COBRA \u2013 North Korean Remote Administration Tool: FALLCHILL, US- CERT, 2017\n\n30.  Android Malware Appears Linked to Lazarus Cybercrime Group, McAfee, 2017\n\n31.  Dissecting Operation Troy:Cyberespionage in South Korea, McAfee,2013\n\n32.  Lazarus Under The Hood, PDF, Securelist, 2017\n\n33.  Lazarus Arisen - ARCHITECTURE / TOOLS / ATTRIBUTION, Group-IB, 2017\n\n34.  Lazarus Group, MITRE ATT&CK\n\n35.  Lazarus Group, MITRE ATT&CK\n\n36.  Lazarus Continues Heists, Mounts Attacks on Financial Organizations in Latin America, TrendMicro, 2018\n\n37.  Malpedia\n\n38.  The devil\u2019s in the Rich header, Securelist, 2018\n\n39.  APT37 (Reaper) - The Overlooked North Korean Actor, FireEye, 2018\n\n40.  Alert (TA17-318A) - HIDDEN COBRA \u2013 North Korean Remote Administration Tool: FALLCHILL, US- CERT, 2017\n\n052\n\nWhite Paper\fCONTACT\n\nOFFENSIVE SECURITY\n\n5 RUE DROUOT 75009 PARIS | + 33 (0) 1 40 17 91 28 | CONTACT@LEXFO.FR\n\n  WWW.LEXFO.FR\n\n @LEXFOSECURITE\n\n /COMPANY/LEXFO/\n\n PRIS@LEXFO.FR\n\n053\n\nThe Lazarus ConstellationLEXFO \n\f054\n\nWhite Paper\fI N T E R N A T I O N A L   A F F A I R S\nD I G I T A L\nC Y B E R S E C U R I T Y\n\nOPERATIONAL SUPPORT \nAND CAPABILITIES  \nFOR GLOBAL EXPANSION \nAND INFLUENCE \n\nAvisa Partners specializes in competitive \nintelligence and international affairs.\n\nUnder one entity, Avisa Partners comprises an \necosystem of professionals in the spheres of economic \nintelligence, public affairs, international relations, \ncybersecurity, and digital advocacy in order to contain \nrisks, manage hostile situations, and capitalize on \nopportunities on behalf of our clients.\n\nThe company supports large corporations, institutions, \nassociations, and governments in sensitive matters \nand times of crisis (including international \nnegotiations, cyberattacks, and litigation), in their \nstrategic positioning (such as nation branding, image \nmanagement for CEOs and key company leaders, and \npublic affairs), as well as during periods of growth \nand development (M&A and overseas expansion).\n\n055\n\nThe Lazarus ConstellationAVISA PARTNERS\fI N T E R N A T I O N A L \nA F F A I R S\n\nPublic diplomacy and \ninternational negotiations\n\n \u2013\n\n \u2013\n\n \u2013\n\nRepresenting governments before \nmultilateral institutions, including the \nEuropean Union, Council of Europe, \nIMF, World Bank, OSCE, OECD, \nNATO, WTO, and UN agencies.\n\nProviding guidance and support \non diplomatically sensitive issues \n(international sanctions, blacklists, \nOECD grey list, etc.)\n\nSeeking out international financing \n(roadshows, public relations, \neconomic studies, and fundraising)\n\nAvisa Partners represents its clients \nbefore major international decision \nmakers:\n\n \u2022\n\nIn fast-growing emerging markets \nwhere decision-making processes  \nare complex and unpredictable, \n\n \u2022 Within public bodies and institutions \n\nto monitor and influence the outcomes \nof public policy developments and \ncritical regulatory debates.\n\nEuropean affairs\n\n \u2013 Monitoring and analyzing policy \ndevelopments at the EU level \nand in Member States, mapping \nrelevant stakeholders, establishing \nrelationships with key decision \nmakers and public authorities \nand tracking potential Brexit \nrepercussions\n\n \u2013 Deploying advocacy strategies \n\ndirected at officials and monitoring \nrelations with the European Central \nBank and financial authorities  \n(such as the EBA, ESMA, and EIOPA)\n\n \u2013\n\n \u2013\n\nAssisting sovereign clients with \nEuropean infringement procedures\n\nConducting European regulatory \nadvocacy in the fields of: digital \nand telecommunications, energy, \nenvironment, financial services, \nhealth, defense, cybersecurity, \ntransport, industry, and  sovereign \nmatters\n\n \u2013\n\nEvaluating European tax liabilities \nand compatibility with OECD \nrecommendations\n\nY\nT\nI\n\nR\nU\nC\nE\nS\nR\nE\nB\nY\nC\n\n\u2013\n\nL\nA\nT\nI\n\nG\n\nI\n\nD\n\n\u2013\n\nS\nR\n\nI\n\nA\nF\nF\nA\n\nL\nA\nN\nO\n\nI\nT\nA\nN\nR\nE\nT\nN\n\nI\n\n056\n\nWhite Paper \n \n \n \n \n\fI N T E R N A T I O N A L \n\nA F F A I R S\n\nCompetition and market \nregulations\n\n \u2013\n\n \u2013\n\n \u2013\n\n \u2013\n\nSupporting defendants or plaintiffs \nin matters of antitrust, state aid, \nanti-dumping, and merger approvals \n(including procedural cases such as gun \njumping or erroneous information)\n\nAdvocating for or against laws, \nregulations, and guidelines under \ndevelopment and intervening in \n\u00abhybrid\u00bb cases requiring tradeoffs \nbetween recommended competitive \npractices and other political and legal \nconsiderations (environment and climate \nchange, digital platforms, energy, etc.)\n\nProviding assistance in trade matters \n(such as free trade agreements and \nmonitoring of foreign investments)\n\nCrafting persuasive economic arguments \n(developing concrete argumentation, \nmobilizing academics, projecting how \nnormative frameworks will evolve, and \nidentifying key themes and shifts in the \nprevailing jurisprudence)\n\nBusiness diplomacy\n\n \u2013\n\n \u2013\n\n \u2013\n\nIdentifying opportunities and \ndecision-makers, conducting studies, \nand drafting research papers\n\nSupporting business development \ninitiatives, expansions into new \nmarkets, networking, and the \ndevelopment of local networks\n\nStructuring consortiums, positioning \non calls for tenders, and optimizing \nthe parameters of transactions or \nmediations\n\n \u2013 Organizing business events to further \ninternational promotional efforts\n\nStrategic communications\n\n \u2013\n\nCrafting and deploying \ncommunications strategies to support \npublic relations initiatives\n\n \u2013 Managing relationships with the \n\npolitical, economic and financial press \n(particular in the US, UK, Germany, \nFrance, and Italy)\n\n \u2013\n\nProviding media support in relation  \nto national and international litigation \nand arbitration\n\n057\n\nThe Lazarus ConstellationAVISA PARTNERS\fD I G I T A L   & \nO N L I N E   A D V O C A C Y\n\nIn order to confront the growing \ninfluence of online media platforms, \nAvisa Partners helps its clients defend \ntheir interests and make their voices \nheard in online debates.\n\nWhile the online information ecosystem \nis often aggressive and antagonistic,  \nit exercises considerable influence over \nboth major societal controversies and \nlocalized issues. Despite the prevalence \nof anonymity, disinformation, and a \ncacophony of opposing views, the online \necosystem has demonstrated an ever \ngreater impact on political decisions and \nstakeholders.\n\nActivism and counter-activism \nonline\n\n \u2013 Understanding the ebbs and \n\nflows of public opinion online \n(mapping opinion leaders, analyzing \ninformation flows, and decoding  \nthe arguments used by activists)\n\n \u2013 Designing mobilization strategies \n(emailing campaigns, creating \nand promoting surveys and \nonline petitions, managing online \nrecruitment operations, fundraising)\n\n \u2013\n\nAmplifying allies, experts and other \nqualified voices to counter opponents \nand hostile campaigns (fake news \nand opinion manipulation campaigns, \ndestabilization, defamation,  \nand information leaks)\n\nIntervening in online debates\n\n \u2013 Disseminating content that \n\ncontextualizes or accentuates key \nmessages, alternatively deploying \ninformative and activist approaches \nand engineering an interlocking web \nof content spanning multiple formats, \nangles, and arguments adapted to \nspecific distribution channels and \naudiences\n\n \u2013\n\n \u2013\n\nRebalancing negative content related \nto technical issues, debates,  \nand individuals\n\nCrafting an editorial strategy to \ndefend major projects as well as \neconomic or scientific breakthroughs \nin order to facilitate public \nacceptance\n\n \u2013 Optimizing indexing on search \nengines for strategic content\n\nY\nT\nI\n\nR\nU\nC\nE\nS\nR\nE\nB\nY\nC\n\n\u2013\n\nL\nA\nT\nI\n\nG\n\nI\n\nD\n\n\u2013\n\nS\nR\n\nI\n\nA\nF\nF\nA\n\nL\nA\nN\nO\n\nI\nT\nA\nN\nR\nE\nT\nN\n\nI\n\n058\n\nWhite Paper \n \n \n \n \n \n\fD I G I T A L   & \n\nO N L I N E   A D V O C A C Y\n\nOnline image and reputation \n\n \u2013 Monitoring, conducting reputational \naudits, and recalibrating the online \npresence of C-suite executives, \ncompanies, governments,  \nand institutions\n\n \u2013 Designing online media and social \nmedia strategies for public and \nprivate decision-makers\n\nThird-party publishing and \nmobilizing subject matter experts\n\n \u2013\n\nCreating and publishing specialized \nonline media sites to influence \ncommunities of interest and expert \nopinion\n\n \u2013 Drafting, editing, and publishing \n\nacademic works (essays, white \npapers, and reports) to defend \nstrategic arguments\n\n \u2013 Nation branding (investment \n\nopportunities, tourism, and \nhighlighting governmental reforms)\n\n \u2013 Mobilizing experts and allies \n\n(amplifying their viewpoints via \ninterviews and opinion pieces)\n\n059\n\nThe Lazarus ConstellationAVISA PARTNERS \n\f060\n\nWhite PaperIn France, Avisa Partners\u2019 cybersecurity operations are certified by the National Agency for Information Systems Security (ANSSI), which has recognized Avisa as an Information Technology Security Evaluation Center (CESTI) for First Level Security Certification (CSPN). Accredited areas include:\u2022 Intrusion detection\u2022 Anti-virus\u2022 Malware protection\u2022 Firewall\u2022 Managing and administering security systems\u2022 Identification, authentication, and access control\u2022 Secure communications channels\u2022 Secure messaging services\u2022 Secure storage\u2022 Programmable logic controller (PLS)Our operations are currently undergoing PRIS (Security Incident Response Provider) certification for control, system analysis, network analysis, and malware analysis.Information systems auditAssessing companies\u2019 exposure on the InternetR&D - InnovationInvestigating and combating economic cybercrime \u2013Security audit : pentesting, Red Team audit, product security assessment, architecture audit, and security protocol reviews \u2013Application security: code source analysis, reverse engineering, and secured development  \u2013Securing M&A transactions for investors: auditing assets, information systems, technology and control system architectures, as well as conducting security assessments of the post-closing integration of information systems \u2013Mapping online exposure \u2013Deploying external SaaS surveillance services (Ambionics)  \u2013Monitoring public information leaks \u2013Analyzing emerging threats \u2013Exploring bugs and vulnerabilities \u2013Conducting technical monitoring \u2013Designing and developing security applications  \u2013Incident response: fraud (phishing, ransomware, fraudulent use of payment methods, etc.), data exfiltration, and destruction of information systems \u2013Individual security protection (threats, identity theft, harassment, defamation, etc.) \u2013Malware Analysis and Cyber Threat Intelligence \u2013Developing forensics tools \u2013Analyzing and interdicting parallel markets (darkweb), counterfeiting, and piracyCYBERSECURITYAvisa Partners\u2019 technical teams, made up of more than fifty engineers specializing in cybersecurity issues, develop innovative offensive scenarios to protect the information capital of companies, institutions, and governments. This expertise and its considerable added value are recognized and accredited by the French government.INTERNATIONAL AFFAIRS \u2013 DIGITAL \u2013 CYBERSECURITY\f061\n\nThe Lazarus ConstellationAVISA PARTNERSAuditing and quantifying anti-piracy and anti-counterfeiting measuresAltering illicit offers and highlighting the appeal of legal offers Aligning the interests of consumers  and rightsholders  \u2013Analyzing the process through which intellectual property rights are being violated  \u2013Understanding the supply and value chains integrating production, distribution, promotion,  and monetization used by counterfeiters \u2013Evaluating the volume of illegal traffic  \u2013Identifying associated risks (political, reputational, public health, etc.),  \u2013Defining, in parallel to litigation, an upstream and downstream anti-counterfeiting strategy \u2013Strengthening the technical and commercial protections of rightsholders (traceability, enhancing security, and countermeasures) \u2013Identifying, questioning, and denouncing the financial beneficiaries of fraudulent activities  \u2013Undermining the sense of impunity and dissuading both pirates and consumers  \u2013Disrupting the creation, supply, and distribution of illicit content and its associated financial flows, reducing or exhausting its availability while reducing its visibility and making it more difficult to access \u2013Progressively reducing the attractiveness of illicit offerings in order to decrease demand by raising awareness of the illegality of some offerings, strengthening legal alternatives by learning from the appeal of illicit products, heightening the dissuasive power of potential risks, and highlighting the work of authorities against counterfeiting \u2013Undertaking public relations to raise awareness among authorities and make the general public feel more responsible ANTI- COUNTERFEITING OPERATIONS Avisa Partners engages in anti-counterfeiting and anti-piracy operations in response to a variety of threats: contraband, counterfeiting of either products or designs, misuse, audiovisual content piracy (streaming, P2P, IPTV and DDL), software cracking, etc.Intellectual property infringements are not a phenomenon that can be completely eradicated, but instead represent a persistent threat that must be mitigated or contained using a number of different mechanisms. The topline objective for the rightsholder is to reduce a critical threat to manageable levels.\f15 \n\nPARTNERS\n\n120 \n\nCONSULTANTS\n\nAvisa Partners represents a team \nof 120 consultants, engineers, and \ntechnical specialists as well as a panel \nof associated experts, working out of \noffices in Paris, Washington, London, \nBrussels, and Berlin.\n\nThe team is drawn from fifteen nationalities \nand relies on extensive internal linguistic \ncapabilities in English, French, German, \nChinese, Arabic, Russian, Persian, Italian, and \nHebrew, among other languages.\n\nAvisa Partners also relies on a network of \nprivileged partners who allow us to operate \nin more than 100 countries.\n\nAvisa Partners\n\nFRANCE \n\nUNITED STATES\n\nEUROPE\n\nUNITED KINGDOM\n\nGERMANY\n\n \u2013 Paris|Headquarters   \n12 rue de Presbourg  \n75116 Paris\n\n \u2013 Paris|Cyber   \n5 rue Drouot  \n75009 Paris\n\nWashington\n\nBrussels\n\nLondon\n\nBerlin\n\n1000 Wisconsin \nAvenue NW \n\u2013 Suite 220 \nWashington  \nDC 20007  \nUnited States\n\nBoulevard du \nR\u00e9gent 35,  \n1000 Brussels \nBelgium\n\n1 Duchess St \nMarylebone \nLondon  \nW1W 6AN,  \nUnited Kingdom\n\nMetzer Str. 15, \n10405 Berlin, \nGermany\n\n062\n\nWhite Paper\f063\n\nThe Lazarus ConstellationLEXFO\fWhite Paper\n\nThe  \nLazarus  \nConstellation\n\nA study on North Korean malware\n\n06/01/2020\n\n\f"], "URLs": [], "weight": 0.0}