{"rule_id": 593, "name": "An-APT-Blueprint-Gaining-New-Visibility-into-Financial-Threats-interactive", "description": "-", "references": [], "File_Names": ["cert.com", "smrs.exe", "warning.com", "notice.com", "MGsCOxPSNK.txt", "LocalAdminAccess.txt", "nusb1mon.exe", "PING.EXE", "NetComputer.txt", "verifon.com", "tCrrDqBQoCcEkbnK.txt", "rad353F7.tmp", "303F1428C3F.txt", "EnumerateLocalAdmin.csv", "on.All", "cqHfjCkTtMwG.doc", "94563784.doc", "spamhuas.com", "9D01CA.txt", "KbhpQIcahFCuZwq.sct"], "MD5_Hashes": ["d90ecd6c825ce236838112898e1c4a2e", "a7f7a0f74c8b48f1699858b3b6c11eda", "4bee6ff39103ffe31118260f9b1c4884", "f0645bd9367faf4e21a9c5e8c132bed7", "581c2a76b382deedb48d1df077e5bdf1", "ddb9553c6e4e4908b5c7fbbdc4795d6c", "f0e52df398b938bf82d9e71ce754ab34", "d117c73e353193118a6383c30e42a95f", "87dfac39f577e5f52f0724455e8832a8", "d68351f754a508a386c06946c8e79088", "D68351f754a508a386c06946c8e79088", "341917d17440ee8a334b202eb0378108", "bb784d55895db10b67b1b4f1f5b0be16", "38242fb29d7cb82a4ffd651189d9821e", "eb561d46c6283c632df88bd20ade6df4", "c2a9443aac258a60d8cace43e839cf9f", "bbaee5d936a3809f46fd409b8442f753", "63c98b8c34ee9261c0068c7f0435a9f9", "e7aa5608c81ba4fcd8d166501b90fc06", "75b55bb34dac9d02740b9ad6b6820360", "b8fc470b9665b33d2071034fdfd6629c", "34a58e62866e5c17db61ee5f95d52c58", "27304b246c7d5b4e149124d5f93c5b01", "1e94f1fdf5ace5e57d8b7832ea2da22e"], "SHA1_Hashes": [], "SHA256_Hashes": [], "Registry_Entries": ["HKEY_CURRENT_USER\\Software\\Microsoft\\Notepad[USERNAME]\\303F1428C3F\u201d.  Before  exiting,  the  DLL  will \nself-delete.\n\nThe file \u201c303F1428C3F.txt\u201d (eb561d46c6283c632df88bd20ade6df4) can be found at the path C:\\Users\\[redacted]\\\nAppData\\Roaming\\303F1428C3F.txt. Also, the file was obfuscated and encrypted with RC4. After decryption, the binary tried \nto download a JavaScript backdoor from the Command and Control server (C&C) \u201cnl[.][redacted][.]kz/robots.txt\u201d and \nsaved the file to \u201c%APPDATA%\\9D01CA.txt\u201d. The backdoor \u201c%APPDATA%\\9D01CA.txt\u201d was then executed via \u201cregsrv32\u201d \n(ex. \u201cregsvr32 /S /N /U /I:path_backdoor scrobj\u201d).\n\nThe file \u201c9D01CA.txt\u201d sent an initial fingerprint of the system compromised which contained the name of the antivirus solution \ninstalled on the system, the local IP address, username, computername and OS version. After this communication, the component \nwaited for instructions from the C&C \u201cnl[.][redacted][.]kz/api/v1\u201d. \n\nThe traffic with the C&C was encrypted and the commands received from the C&C would split into five types:\n\n\u25cf\t \u201cd&exec\u201d: download and execute payload (EXE of DLL)\n\u25cf\t \u201cmore_eggs\u201d: download additional scripts (including self-update) and save them in \u201c%APPDATA%\u201d\n\u25cf\t \u201cgtfo\u201d: self delete/registry cleanup\n\u25cf\t \u201cmore_onion\u201d: runs additional downloaded scripts\n\n\u25cf\t \u201cvia_x\u201d: execute command shell commands\n\nAll files mentioned in this stage of the attack were created on the system on Day 0 at around 16:49, when the first download link was \naccessed. It is worth mentioning that a binary executable named \u201crad353F7.tmp\u201d, which appeared on the system at a later date, \nDay 6, was most certainly downloaded on the system by the Javascript Backdoor \u201c9D01CA.txt\u201d.\n\nDay 0 at 16:48:58 marks the touchdown of a decoy file on two systems. This file is a decoy because it acts as a normal document \nfile while the malicious payload is being dropped on the system. On one of the two workstations, the decoy file has the creation time \nof Day 0 at 16:49:09 (10 seconds later than the other workstation) and the path C:\\Users\\[redacted]\\AppData\\Local\\\nTemp\\cqHfjCkTtMwG.doc. This system shows more stages of the attack, because the adversary used this machine to perform \nlateral movement and compromise a domain administrator account within two hours of the initial compromise.\n\nAfter the compromise of the domain administrator account, a network discovery is performed and systems start to be logged on via \nremote desktop protocol to reach the objective of infiltrating the network and gathering information. \n\nBelow is a complete timeline of events recorded on the workstation that was used to compromise the domain administrator account \nemployed by attackers throughout the lateral movement process.\nDay 0\n\n16:49:03   \n\nFile create  /Users/[redacted]/AppData/Local/Microsoft/Windows/INetCache/Content.Word/~WRF{39EC1EBF-\n71AD-4216-BDC3-66B5DCB833F3}.tmp\n\n16:49:09   \n\nFile create \\Users\\[redacted]\\AppData\\Local\\Temp\\cqHfjCkTtMwG.doc\n\n16:49:10   \n\nFaulting application name: EQNEDT32.EXE\n\n16:49:30   \n\nFile create C:\\Users\\[redacted]\\AppData\\Local\\Temp\\tCrrDqBQoCcEkbnK.txt\n\n16:54:00   \n\nFile create C:\\Users\\[redacted]\\AppData\\Roaming\\303F1428C3F.txt\n\n16:55:00   \n\nFile create C:\\Users\\[redacted] \\AppData\\Roaming\\9D01CA.txt\n\n17:05:33   \n\nPowershell script communicated to 185.206.145.227\n\n17:08:28   \n\nFind-LocalAdminAccess\n\n17:08:54   \n\nGet-GPPPassword\n\n[9]\n\nWhite Paper\f17:21:17   \n\nLastUsedTime systeminfo.exe \n\n17:28:35   \n\nRun  time  for  \\Users\\[redacted]\\AppData\\Roaming\\Microsoft\\Windows\\Start  Menu\\Programs\\Startup\\smrs.\nexe (d68351f754a508a386c06946c8e79088)\n\n17:46:28   \n\nGet-NetComputer\n\n17:46:29   \n\nFile create NetComputer.txt\n\n17:48:10   \n\nInvoke-EnumerateLocalAdmin\n\n17:48:26   \n\nFind-LocalAdminAccess\n\n17:48:27   \n\nFile create LocalAdminAccess.txt\n\n17:56:12   \n\nInvoke-EnumerateLocalAdmin\n\n17:57:03   \n\nFile create EnumerateLocalAdmin.csv\n\n18:15:53   \n\nPowerShell console is starting up\n\n18:17:52  to  18:23:38   \n\nThe legitimate jusched.exe is replaced with the jusched.exe (d68351f754a508a386c06946c8e79088) beacon \ndownloader\n\n18:44:39   \n\nFile create \\Users\\Public\\[redacted].txt\n\n18:55:56   \n\nRun  time  for  \\Users\\[redacted]\\AppData\\Roaming\\Microsoft\\Windows\\Start  Menu\\Programs\\Startup\\smrs.\nexe (d68351f754a508a386c06946c8e79088)\n\n18:55:56   \n\nLastUsedTime: C:\\Windows\\system32\\cmd.exe\n\n18:55:56   \n\nRun time for taskkill.exe\n\n22:54:57   \n\nLastUsedTime: C:\\Windows\\system32\\PING.EXE\n\nDay 1\n\n10:19:15   \n\nPowershell run with content from pipe_8080\n\n10:24:07   \n\nA service was installed in the system.\n\n10:34:19   \n\nRun time for powershell.exe\n\n13:00:48   \n\nFailed attempts to connect to five internal systems\n\n13:26:53   \n\nRun time for net1.exe\n\nDay 2\n\n17:48:59   \n\nRun time for nslookup.exe\n\nDay 5\n\n12:07:49    \n\nPowershell script communicated to C2 server\n\n13:28:37   \n\nPowershell script communicated to C2 server\n\n13:38:45   \n\nPowershell script communicated to C2 server\n\n15:49:08   \n\nFile create C:\\Users\\[redacted]\\AppData\\Roaming\\rad353F7.tmp\n\n[10]\n\nWhite Paper \n\f17:08:40   \n\n Execution on file path: C:\\Users\\[redacted]\\AppData\\Roaming\\rad353F7.tmp\n\n17:08:41   \n\nRun time for C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\n\nDay 27\n\n08:26:22   \n\nFileKeyLastWriteTimestamp mstsc.exe\n\nDay 46\n\n11:33:47   \n\nRun time for jusched.exe\n\nDay 58\n\n09:06:33   \n\nDay 59\n\n08:34:07   \n\nDay 60\n\n08:33:50   \n\nDay 63\n\n08:13:37   \n\nFailed  attempts  to  connect  to  several  internal  systems.  330  events:  322  target  a  single  system  ;  4  target  a \nsecond system ; 4 target a third system .\n\nFailed  attempts  to  connect  to  several  internal  systems.  358  events:  349  target  a  single  system  ;  5  target  a \nsecond system; 5 target a third system.\n\nFailed attempts to connect to several internal systems. (355) target a single system ; 5 target a second system; \n5 target a third system\n\nFailed attempts to connect to several internal systems. (304) target a single system ; 7 target a second system; \n7 target a third system\n\nThe full list of components and their corresponding hashes can be found in the IoC section below. \n\nThe workstation used to store the .zip archives containing internal banking documents was compromised on Day 9 using domain \nadmin credentials. On that day, attackers remotely dialed into the workstation and started accessing various network locations in an \nattempt to find various internal banking application files and documents.\n\nFrom Day 10 to Day 27, the same workstation was used to connect to other internal network server.\n\nOn Day 28 at 10:43:57 and 19:53:49, two .zip archive containing internal documents were created. \n\nOn Day 30 at 10:53:50, a third .zip archive was created, and it was deleted at 15:34:38.\n\nOn Day 46, attackers deleted a series of documents and folders from the workstation, potentially to cover their tracks and leave no \nevidence regarding the collected documents.\n\n[11]\n\nWhite Paper\fCobalt Strike Beacon Capabilities\n\nThe Cobalt Strike beacon is a malicious agent implant that, once dropped on a compromised system, calls back to the attacker and \nchecks for new commands to be executed on the compromised system. This versatile tool can support two types of communication \nmechanisms: asynchronous and interactive. The asynchronous mode keeps commands in a queue and, when the beacon connects \nto a C&C, it downloads commands, executes them, and finally reports results to the C&C server. This can be particularly useful when \ntrying to keep a low network footprint and not trigger any alarms by constantly \u201cchatting\u201d back and forth with the C&C server. \n\nWhile  the  asynchronous  communication  mode  is  also  known  as  \u201clow  and  slow\u201d,  in  the  sense  that  it  becomes  inactive  when \nan  internet  connection  is  not  present,  the  interactive  communication  mode  offers  real-time  interaction  with  the  compromised \nworkstation. \n\nOverall framework capabilities include, but are not limited to, executing shell commands, uploading and downloading files, recording \nkeystrokes  and  taking  screenshots,  escalating  privileges,  deploying  exploits,  bypassing  User  Account  Control  (UAC),  and  even \ndeploying memory scraping tools, such as Mimikatz, or enumerating Active Directory (AD) hosts.\n\nBy supporting malleable communication with the C&C server, it can help attackers blend malicious traffic as legitimate, by allowing \nthem to transform and store data, interpret it backwards, and extract and recover that data from a transaction. \n\nCobalt Strike Framework capabilities\n\n\u2022 \n\n\u2022 \n\n\u2022 \n\n\u2022 \n\n\u2022 \n\n\u2022 \n\n\u2022 \n\n\u2022 \n\n\u2022 \n\n\u2022 \n\n\u2022 \n\ndifferent commands can be executed (some leave traces in the events)\n\nsession passing - to hijack sessions\n\nalternate parent processes\n\nupload and download files\n\nfile System Commands (listfiles, make/remove directories etc.)\n\nKeystrokes and Screenshots (the tools for these actions are injected in different processes)\n\nSOCKS Proxy - set up a SOCKS proxy server to tunnel traffic through Beacon\n\nReverse Pivoting\n\nPrivilege Escalation \n\nElevate with an Exploit\n\nElevate with Known Credentials\n\n\u2022  Get SYSTEM - token impersonation for the SYSTEM user\n\n\u2022  UAC Bypass\n\n\u2022 \n\nPrivileges - enable the privileges assigned to your current access token\n\n\u2022  Mimikatz - Beacon integrates Mimikatz (although in other cases it can use different tools such as Modified Windows Vault \n\nPassword Dumper or Hook Password Change)\n\n\u2022 \n\n\u2022 \n\nCredential and Hash Harvesting - injects into LSASS and dumps the password hashes for local users on the current system\n\nPort Scanner\n\n\u2022  Network and Host Enumeration - interrogates and discovers targets in a Windows active directory network\n\nKerberos Tickets - inject a Kerberos ticket in the current session, making the interaction with remote systems possible using \nthe current tickets\u2019 rights\n\nLateral Movement - lateral movement can be performed when a domain admin or a domain user that has admin on the target \n\n\u2022 \n\n\u2022 \n\n[12]\n\nWhite Paper\fConclusions\n\nThe  Carbanak  group,  which  has  a  long  track  record  of  compromising  infrastructure  belonging  to  financial  institutions,  is  still \nactive.  Its  purpose  remains  to  manipulate  financial  assets,  such  as  transferring  funds  from  bank  accounts  or  taking  over  ATM \ninfrastructures and instructing them to dispense cash at predetermined time intervals. \n\nBitdefender\u2019s  investigation  shows  the  attackers\u2019  main  methods  remain  to  quietly  infiltrate  the  infrastructure  by  establishing  a \nfoothold on an employee\u2019s system, then move laterally across the infrastructure or elevate privileges to find critical systems that \nmanage financial transactions or ATM networks.\n\nThis  attack  falls  in  line  with  previous  objectives  observed  in  past  attacks  on  other  financial  institutions,  as  the  cybercriminal \norganization targeted the ATM network to reach systems belonging to key people within the organization who have access to ATM \nsystems. \n\nIf  the  attack  had  succeeded,  it  would  have  given  hackers  control  over  the  ATM  network,  while  money  mules  would  have  been \nstanding by the ATM machines at pre-set time intervals to cash them out. They could have also been able to reset the cash-out limit \non ATMs, using a predetermined / preauthorized card. This way, money mules could have extracted the same amount over and over, \nwithout the ATMs reporting any transactions to the bank.\n\nIt is not uncommon in a targeted attack for phishing emails to bypass anti-spam solutions deployed at the mail server level, which \nis why it is good practice to deploy an in-depth security model that ensures URL filtering, behavior-based detection techniques and \nsandboxing, aside from classical anti-malware solutions. An enterprise-level solution that looks at both network traffic and endpoint \nbehavior would observe lateral movements by the attacker and flag them for review by a security analyst.\n\nThe damage observed throughout the investigation process was limited to access of internal documents on the compromised \nsystems and user account credentials leaked.  \n\n[13]\n\nWhite Paper\fAppendix A: IOCs\n\nFile IOCs:\n\nFilename\n\nsmrs.exe\n\nsmrs.exe\n\njava.exe\n\n94563784.doc\n\nmd5\n\nD68351f754a508a386c06946c8e79088 \n\n341917d17440ee8a334b202eb0378108\n\nd90ecd6c825ce236838112898e1c4a2e\n\nd117c73e353193118a6383c30e42a95f\n\nWRF{8F0C5F8E-18A3-48CE-A2F4-2F4DB1B14E94}.tmp\n\nb8fc470b9665b33d2071034fdfd6629c\n\nKbhpQIcahFCuZwq.sct\n\nMGsCOxPSNK.txt\n\ncqHfjCkTtMwG.doc\n\ntCrrDqBQoCcEkbnK.txt\n\nDLL dropper\n\nDLL dropper\n\nDLL dropper\n\nDLL dropper\n\n303F1428C3F.txt\n\n9D01CA.txt\n\nrad353F7.tmp\n\njusched.exe\n\nnusb1mon.exe\n\nnetscan.exe\n\nnetscan.exe\n\npsexec.exe\n\npsexesvc.exe\n\npsexec.exe\n\npsexesvc.exe\n\nNetwork IOCs:\n\nbb784d55895db10b67b1b4f1f5b0be16\n\n4bee6ff39103ffe31118260f9b1c4884\n\nc2a9443aac258a60d8cace43e839cf9f\n\n581c2a76b382deedb48d1df077e5bdf1\n\nf0645bd9367faf4e21a9c5e8c132bed7\n\n34a58e62866e5c17db61ee5f95d52c58\n\n38242fb29d7cb82a4ffd651189d9821e\n\nf0e52df398b938bf82d9e71ce754ab34\n\neb561d46c6283c632df88bd20ade6df4\n\nbbaee5d936a3809f46fd409b8442f753\n\n63c98b8c34ee9261c0068c7f0435a9f9\n\nd68351f754a508a386c06946c8e79088\n\nddb9553c6e4e4908b5c7fbbdc4795d6c\n\n1e94f1fdf5ace5e57d8b7832ea2da22e\n\ne7aa5608c81ba4fcd8d166501b90fc06\n\n27304b246c7d5b4e149124d5f93c5b01\n\n75b55bb34dac9d02740b9ad6b6820360\n\na7f7a0f74c8b48f1699858b3b6c11eda\n\n87dfac39f577e5f52f0724455e8832a8\n\nswift-fraud[.]com/documents/94563784.doc\n\ndownloads initial doc\n\ncloud[.]yourdocument[.]biz/robots.txt\n\ndownloads DLL dropper\n\nnl[.][redacted][.]kz/robots.txt\n\nnl[.][redacted][.]kz/api/v1\n\ndownloads JavaScript backdoor\nJavaScript  backdoor  C&C  -  gets  commands \nand executes them\n\n94.140.116.69\n\n185.206.145.227\n\n45.56.162.8\n\n94.156.35.118\n\n185.243.115.28\n\n185.206.146.226\n\n94.140.116.176\n\n[14]\n\nWhite Paper\fAppendix B:\n\nsmrs.exe (d68351f754a508a386c06946c8e79088) \n\nDownloader that downloads a shellcode, which in turn downloads the beacon.\n\nsmrs.exe (341917d17440ee8a334b202eb0378108)\n\nCobalt Strike beacon that\u2019s being deployed on affected workloads.\n\njusched.exe (d68351f754a508a386c06946c8e79088)\n\nDownloader that downloads a shellcode, which in turn downloads the beacon. Same file/hash as \u201csmrs.exe\u201d, just under a different \nname.\n\nnusb1mon.exe (ddb9553c6e4e4908b5c7fbbdc4795d6c)\n\nTool that takes screenshots at specific time intervals. \n\n[15]\n\nWhite Paper \n\fBitdefender is a global security technology company that delivers solutions in more than 100 countries through a network of \nvalue-added alliances, distributors and reseller partners. Since 2001, Bitdefender has consistently produced award-winning \nbusiness and consumer security technology, and is a leading security provider in virtualization and cloud technologies. Through \nR&D, alliances and partnership teams, Bitdefender has elevated the highest standards of security excellence in both its number-\none-ranked technology and its strategic alliances with the world\u2019s leading virtualization and cloud technology providers. More \ninformation is available at http://www.bitdefender.com/.\n\nAll Rights Reserved. \u00a9 2018 Bitdefender. All trademarks, trade names, and products referenced herein are property of their \nrespective owners. FOR MORE INFORMATION VISIT: enterprise.bitdefender.com.\n\nN\nE\n_\nn\ne\n-\ns\n6\n1\n4\n1\nM\n1\n3\n-\n6\n9\n4\n3\nT\nA\nE\nR\nC\n\n-\nt\nn\ni\nr\nP\ne\nu\nB\nT\nP\nA\n\nl\n\n-\nr\ne\np\na\nP\ne\nt\ni\nh\nW\n\n-\nr\ne\nd\nn\ne\nf\ne\nd\nt\ni\nB\n\nBitdefender is a global cybersecurity leader protecting over 500 million systems in more than 150 countries. Since 2001, Bitdefender innovation has consistently delivered award-winning security products and threat intelligence for the smart connected home, mobile users, modern businesses and their networks, devices, data centers and Cloud infrastructure. Today, Bitdefender is also the provider of choice, embedded in over 38% of the world\u2019s security solutions. Recognized by industry, respected by vendors and evangelized by customers, Bitdefender is the cybersecurity company you can trust and rely on.All Rights Reserved. \u00a9 2019 Bitdefender. All  trademarks, trade names, and products referenced herein are property of their respective owners. \f"], "URLs": ["http://www.bitdefender.com/."], "weight": 0.0}