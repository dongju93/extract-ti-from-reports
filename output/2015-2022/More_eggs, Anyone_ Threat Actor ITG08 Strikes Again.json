{"rule_id": 507, "name": "More_eggs, Anyone_ Threat Actor ITG08 Strikes Again", "description": "-", "references": [], "File_Names": ["metsvr.dll", "39054.txt", "4140.txt", "65390.txt", "A70613FF7F5DE98.txt", "625222E09B6CD028459.txt", "27603.docx", "updater.exe", "58678.txt", "49340.txt", "50573.txt", "5795C3AC7F57F.txt", "12025.txt", "28535.txt"], "MD5_Hashes": [], "SHA1_Hashes": [], "SHA256_Hashes": [], "Registry_Entries": ["HKEY_USERS\\S-1-5-19\\Environment\\TEMP; a successful read means it is running with\nadministrative privileges, and the backdoor builds the path %ProgramData%\\Microsoft. If it is not\nrunning with administrative privileges, the path %AppData%\\Microsoft is used.\n\nThe More_eggs backdoor obtains the username and computer name of the infected device, and if\nrunning with privileges, it reads the following registry key:\nHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Notepad\\<computername>. If not running with\nprivileges, it reads the key HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Notepad\\\n<username> instead.\n\nThe data in these Windows registry keys is expected to be a comma-separated list of \ufb01les with no\nextension. The .txt extension is appended to the name by the backdoor. If these \ufb01les exist along\nwith msxsl.exe in the proper location, either %ProgramData%\\Microsoft or %AppData%\\Microsoft,\nthe malware\u2019s execution continues.\n\nOnce the environment is checked, the backdoor will check for network connectivity by sending an\nHTTP GET request to hxxp://www.w3[.]org/1999/XSL/Format, ensuring the response is \u201cThis is\nanother XSL namespace\\n.\u201d\n\nGET /1999/XSL/Format HTTP/1.1\nAccept: */*\nAccept-Language: en-us\nUA-CPU: [CPU version]\nAccept-Encoding: gzip, de\ufb02ate\nUser-Agent: [User agent string here]\nHost: www.w3.org\nConnection: Keep-Alive,\n\nFigure 9: HTTP GET request\n\nIf the connection is successful, the backdoor builds a string formatted with \u201c|<random-value>|\u201d.\nThe random value is between 8 and 32 bytes long, RC4-encrypted, basE91 encoded, and\nsubsequently sent to the C&C in an HTTP POST request.\n\nThe RC4 key used is generated from the Rkey variable value:\n\nPOST HTTP/1.1\nConnection: Keep-Alive\nAccept: */*\nAccept-Language: en-us\nUser-Agent: [User agent string]\nContent-Length: 36\nHost: \n6R+#9fWCy)htQSo4:H9&JSMTx|X[OEKj^gXE\n\nFigure 10: HTTP POST request\n\nThe C&C response is expected to be between 8 and 32 bytes long, nothing is done with the\nserver response. The random value acts as a handshake between the backdoor and the C&C,\nand during failure of any of the above, More_eggs sends an HTTP GET request to 8.8.8.8 with a\npseudorandom 8 to 32-byte URI.\n\nhttps://securityintelligence.com/posts/more_eggs-anyone-threat-actor-itg08-strikes-again/\n\n8/13\n\n\f8/31/2019\n\nMore_eggs, Anyone? Threat Actor ITG08 Strikes Again\n\nGET /avIRga9sfvjGj3HCPGlgzaBXOof3u7wq HTTP/1.1\nConnection: Keep-Alive\nAccept: */*\nAccept-Language: en-us\nUser-Agent: [User agent string]\nHost: 8.8.8.8\n\nFigure 11: HTTP GET request to 8.8.8.8\n\nIf the handshake is successful, the backdoor proceeds to collect system information from the\ninfected device using a series of WMIC commands.\n\n\u201c%comspec% /c wmic path win32_Operatingsystem get SerialNumber /FORMAT:Textvaluelist | \ufb01nd\u2010\nstr /R /C:\\\u201dSerialNumber=\\\u201d >\n\\\u201dC:\\\\Users\\\\mal_re\\\\AppData\\\\Local\\\\Temp\\\\12025.txt\\\u201d & vol %HOMEDRIVE% >\n\\\u201dC:\\\\Users\\\\mal_re\\\\AppData\\\\Local\\\\Temp\\\\50573.txt\\\u201d & wmic csproduct get Name\n/FORMAT:Textvaluelist | \ufb01ndstr /R /C:\\\u201dName=\\\u201d >\n\\\u201dC:\\\\Users\\\\mal_re\\\\AppData\\\\Local\\\\Temp\\\\58678.txt\\\u201d & tasklist /FO CSV /NH >\n\\\u201dC:\\\\Users\\\\mal_re\\\\AppData\\\\Local\\\\Temp\\\\39054.txt\\\u201d & ver >\n\\\u201dC:\\\\Users\\\\mal_re\\\\AppData\\\\Local\\\\Temp\\\\28535.txt\\\u201d & wmic os get ProductType\n/FORMAT:Textvaluelist | \ufb01ndstr /R /C:\\\u201dProductType=\\\u201d >\n\\\u201dC:\\\\Users\\\\mal_re\\\\AppData\\\\Local\\\\Temp\\\\4140.txt\\\u201d & ipcon\ufb01g | \ufb01ndstr /R /C:\\\u201dIPv4 Address\\\u201d >\n\\\u201dC:\\\\Users\\\\mal_re\\\\AppData\\\\Local\\\\Temp\\\\65390.txt\\\u201d\u201d\n\nFigure 12: System information collection\n\nThe infected device\u2019s system information is written to several %Temp%\\<random-\ufb01lenames>.txt\n\ufb01les. The contents of the \ufb01les are read and then the \ufb01les themselves are deleted.\n\nThe More_eggs backdoor accepts the following commands from its remote operator:\n\nCommand\n\nDescription\n\nd&exec\n\nDownload and execute an executable (.exe or .dll).\n\nmore_eggs\n\nDelete the current More_eggs and replace it.\n\nGtfo\n\nUninstall activity.\n\nmore_onion Execute a script.\n\nvia_c\n\nRun a command using \u201ccmd.exe /C\u201d.\n\nFigure 13: More_eggs commands\n\nMeterpreter Reverse TCP Stagers\n\nBeyond using More_eggs as a backdoor, the attackers in this campaign also used offensive\nsecurity tools and PowerShell scripts to carry out the different stages of the attack.\n\nhttps://securityintelligence.com/posts/more_eggs-anyone-threat-actor-itg08-strikes-again/\n\n9/13\n\n\f8/31/2019\n\nMore_eggs, Anyone? Threat Actor ITG08 Strikes Again\n\nThe PowerShell scripts analyzed during our investigation contained Metasploit Reverse TCP\nstagers. These stagers were used to execute shellcode that connected back to an attacker\u2019s\nserver and injected Meterpreter components, such as Mimikatz, into the memory space of\nlegitimate processes. After injecting Meterpreter into memory, the attacker had complete control\nof the infected device.\n\nThe reverse TCP PowerShell stagers functioned as follows:\n\n1. The reverse TCP PowerShell stagers were obfuscated with base64 encoding and GZip\n\ncompression. This encoding scheme is standard for Meterpreter PowerShell stagers. The\noriginal command contained a base64-encoded loader script.\n\n2. The loader script base64 decodes, Gzip decompresses and executes a Metasploit\n\nPowerShell re\ufb02ection payload in memory.\n\n3. The re\ufb02ection payload base64 decodes a Meterpreter reverse TCP shellcode, injects it into\n\nmemory using .NET re\ufb02ection methods and executes the decoded shellcode.\n\n4. The shellcode connects back to the attacker\u2019s server. Meterpreter components, such as the\n\ncore module and metsvr.dll, and extensions, such as Mimikatz, are injected into the\nmemory space of a legitimate process.\n\nFigure 14: Original command\n\nFigure 15: Decoded loader\n\nFigure 16: Decoded re\ufb02ection payload\n\nMetasploit Shellcode Loader\n\nAs our analysis continued, X-Force IRIS found a UPX-packed Metasploit shellcode loader\n(49340.txt) during the forensic investigation of compromised devices. This loader attempted to\nmasquerade as the Apache Bench application and notably contained metadata and project paths\n(.PDB), indicating that it may be attempting to masquerade as other applications as well, a rather\ntypical behavior for malicious binaries.\n\nThe shellcode was loaded into memory and designed to receive an RC4-encrypted buffer, which\nwas decrypted and executed in memory. The sample also contained a Comodo code-signing\ncerti\ufb01cate issued to \u201cMAHTEM LTD,\u201d which we believe is one of a number of fake companies\nestablished to purchase the certi\ufb01cates.\n\nThe sample we analyzed further contained \ufb01ve binary entries in a resource named \u201cREGISTRY\u201d\n\u2014 35, 224, 409, 3908 and 4994 \u2014 each containing some obfuscated shellcode.\n\nOnce loaded into memory, the shellcode connected back to a remote host, receiving 4 bytes in\nreturn. Those were XORed with the string 0xad350bdd and had 0x100 added to it. This value was\nthen used as the size speci\ufb01cation for the next received buffer, which was RC4-decrypted with the\nresulting 16-byte key and executed in memory.\n\nA ReverseShell Executable\n\nYet another tool in the attackers\u2019 arsenal for this campaign was a DLL backdoor executable that\nX-Force IRIS found during the investigation. When executed via its DllRegisterServer export\nfunction, the DLL connected to a remote host on port 443 and created a reverse shell. In this\ninvestigation, the DLL connected to 185[.]204[.]2[.]182 and contained a Comodo code-signing\ncerti\ufb01cate issued to \u201cD Bacte Ltd.\u201d\n\nhttps://securityintelligence.com/posts/more_eggs-anyone-threat-actor-itg08-strikes-again/\n\n10/13\n\n\f8/31/2019\n\nMore_eggs, Anyone? Threat Actor ITG08 Strikes Again\n\nITG08 Attacks Organizations for Financial Gain\n\nITG08 has been around for over four years now. Its attacks are \ufb01nancially motivated,\nsophisticated and persistent. The group historically has specialized in stealing payment card data\nfrom POS machines and has more recently expanded operations to target card-not-present data\nfrom online transactions. To follow information about ITG08 as it emerges, please join us on X-\nForce Exchange.\n\nMitigation Tips\n\nEffective network defense and threat intelligence rely on multiple factors, such as knowing the\nnetwork\u2019s attack surface, understanding the threat actor\u2019s motivations and TTPs, and the skill and\nknowledge of the security team that enable it to identify malicious behavior.\n\nIBM X-Force IRIS has gained insight into ITG08\u2019s intrusion methods, ability to navigate laterally,\nuse of custom and open-source tools, and typical persistence mechanisms. Our team has\nprovided the following mitigation tips for defenders who are looking out for attacks by this group.\n\nEducate Users About Email\n\nX-Force IRIS determined that the ITG08 compromise was the result of a phishing email in which\nthe initial compromise was made possible by a victim who clicked on a malicious attachment.\nRole-based security awareness training should be at the top of the list of any organization\u2019s\nmitigation strategies to help employees recognize phishing emails and possible malicious\nattachments, and to educate them about their security responsibilities with regards to reporting\npotentially malicious emails.\n\nSearch for Known IoCs\n\nAfter the phishing email resulted in a successful in\ufb01ltration, ITG08 used the More_eggs backdoor\nto gain a foothold and infect additional devices. More_eggs-related artifacts such as the DLL\ndropper have extremely low antivirus (AV) detection rates, based on analysis conducted via\nVirusTotal (VT). For example, a More_eggs DLL dropper submitted to VT on April 18, 2019 had a\ndetection rate of only 5 percent.\n\nTo detect this malware, critical events should be analyzed based on the attacker\u2019s patterns.\nSYSMON or an endpoint detection and response tool should be con\ufb01gured to detect the\ncombined use of msxsl.exe and WMI. In addition, Registry keys and scheduled tasks should be\nanalyzed for indications of persistence. The network should also be scrutinized for any privilege\nescalation events and any signs of internal reconnaissance. YARA signatures should also be\ncreated to assist security personnel in detecting the More_eggs malware. YARA signatures for X-\nForce IRIS premium subscribers can be provided on request.\n\nAnalyze Logs\n\nOther mitigation strategies against this type of activity include analyzing host-based \ufb01rewall logs\nfor internal pivoting, unauthorized listening executables and scanning activity. In addition,\ncon\ufb01guring PowerShell script logging and identifying any obfuscation will assist in mitigating\nITG08\u2019s use of PowerShell to conduct malicious activity. ITG08 has also demonstrated the use of\nstolen credentials; therefore, multiple failed login attempts and/or unauthorized account usage\nmay be indicators of ITG08 activity on a network.\n\nhttps://securityintelligence.com/posts/more_eggs-anyone-threat-actor-itg08-strikes-again/\n\n11/13\n\n\f8/31/2019\n\nMore_eggs, Anyone? Threat Actor ITG08 Strikes Again\n\nMonitor for Remote Services\n\nX-Force IRIS also recommends taking steps to prevent lateral movement. Although lateral\nmovement can be dif\ufb01cult to detect, a spike in usage of Windows tools, such as remote\nadministration services (PowerShell Remoting and WMI), should be monitored. Detection and\nmonitoring capabilities should be in place and network defenders should be familiar with what is\nconsidered a \u201cnormal\u201d baseline on their user network. Without a baseline of \u201cnormal\u201d activity, the\nuse of Windows tools may blend in with legitimate activity, which can allow attackers to continue\nto live off the land unnoticed.\n\nRethink Network Architecture\n\nSecurity defenders should examine network architecture to see how the network is segregated,\nwhat Windows tools are restricted or used by administrators, and what alerts are set up to warrant\npersonnel review. Least privilege principals should be implemented for all users on the network,\nand a strong password management system with two-factor authentication and password\nexpiration dates should be deployed as an additional layer of security.\n\nPen Test!\n\nOrganizations looking to limit the ways by which attackers can in\ufb01ltrate their networks should be\nmindful of ongoing patching of vulnerabilities. After reaching maturity on the vulnerability\nassessment front, mitigation strategies should also include penetration testing to \ufb01nd unknown\nvulnerabilities related to people, software and hardware used on the organization\u2019s critical assets\nand externally facing resources.\n\nIncident Response\n\nNowadays, no organization can be exempt from planning and drilling incident response plans in\nthe face of potential security incidents. Conducting tabletop exercises and regularly drilling plans\ncan help organizations proactively prepare and take control of an incident if ever one should\noccur.\n\nFor additional resources and information, please check out X-Force IRIS. If you believe your\norganization may be under attack, please call the X-Force Emergency Response Hotline at 888-\n241-9812.\n\nAppendix A: IoCs\n\nMore_eggs C&C domains:\n\napi[.]cloudservers[.]kz\nmail[.]rediffmail[.]kz\nsecure[.]cloudserv[.]ink\nmetric[.]onlinefonts[.]kz\nnews[.]bradpitt[.]kz\n\nLanding page domains (downloads \ufb01les):\n\nhttps://securityintelligence.com/posts/more_eggs-anyone-threat-actor-itg08-strikes-again/\n\nusastaf\ufb01ng[.]services\nusstaf\ufb01ng[.]services\njobhyper[.]com\n\n12/13\n\n\f8/31/2019\n\nMore_eggs, Anyone? Threat Actor ITG08 Strikes Again\n\nMeterpreter C&C IP addresses:\n\n185[.]162[.]128[.]70*.\n185[.]243[.]115[.]50\n192[.]99[.]20[.]90\n192[.]187[.]103[.]42\n37[.]1[.]221[.]212.\n\n*Also the C&C IP address for the Metasploit Shellcode Loader.\n\nReverseShell executable (DLL) C&C IP address:\n\n185[.]204[.]2[.]182\n\nFile hashes:\n\nDescription\n\nSHA256\n\n5795C3AC7F57F.txt\n\nb3537701e054823836da9c532560d30f01e38e549f\u2010\nb813206afd699ecde8a97c\n\nA70613FF7F5DE98.txt\n\n28497c50d65c9f1d0233fc193a43014497fadddb1af8e7f5dbc6eef\u2010\nb3d4ede02\n\n625222E09B6CD028459.txt\n\n80716c2a49739850d8ccd1c035ea4bcc2\u2010\nda39527693c71b800c99ed2ea2c430f\n\nMore_eggs backdoor\n\n37831e465728a913a\u2010\ncab317b65c4474b8e6a4570e78c39c8b8c9b956e5d6db25\n\nMetasploit Shellcode\nLoader\n\nd9a245f1fb502606c226c364aa1090f25916e68f5ff24e\u2010\nf75be87ad6a2e6dcc9\n\nReverseShell Executable\n\n78a87d540c1758c6b4dcabb7b825ea3a186ef61e7439045e\u2010\nce3ce3205c7e85a2\n\nOle Villadsen\nCyber Threat Hunt Analyst, IBM Security\n\nOle Villadsen is an analyst on the Threat Hunt & Discovery Team within IBM X-Force Incident\nResponse and Intelligence Services (IRIS), where he investiga... \nread more\n\nhttps://securityintelligence.com/posts/more_eggs-anyone-threat-actor-itg08-strikes-again/\n\n13/13\n\n\f"], "URLs": ["https://securityintelligence.com/posts/more_eggs-anyone-threat-actor-itg08-strikes-again/"], "weight": 0.0}