{"rule_id": 638, "name": "Newcomers-in-the-Derusbi-family", "description": "-", "references": [], "File_Names": ["udfs.sys", "9.ww", "Win32APIWarp.cpp", "safemedo.html", "shmfs.lock", "co.Ltd", "safemode.html", "XXXXXXX.biz", "wd.sys"], "MD5_Hashes": ["476bf24a4b1e9f4bc2a61b152115e1fe", "7bd55818c5971b63dc45cf57cbeb950b", "4c0b2e9d2ef909d15270d4dd7fa5a4a5"], "SHA1_Hashes": [], "SHA256_Hashes": ["50174311e524b97ea5cb4f3ea571dd477d1f0eee06cd3ed73af39a15f3e6484a", "1b449121300b0188ff9f6a8c399fb818d0cf53fd36cf012e6908a2665a27f016", "e27fb16dce7fff714f4b05f2cef53e1919a34d7ec0e595f2eaa155861a213e59", "6cdb65dbfb2c236b6d149fd9836cb484d0608ea082cf5bd88edde31ad11a0d58", "75c3b22899e39333c0313e80c4e6958d6612381c535d70b691f5f42afc8c214f"], "Registry_Entries": ["HKLM\\SYSTEM\\CurrentControlSet\\Control\\WMI\\lpstatus.\n\nConfiguration\n\nThe configuration is stored just after a string made of 15 ", "HKLM\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Level10.\n\nThe DNS Server to use for DNS requests is stored in value  Level01, xored with 0x51. Source port for the DNS\n\nrequests is randomly chosen between 1025 and 1777.\n\nProxy settings are stored in registry values  Level02 to Level05, xored with 0x51.\n\nDNS server IP address and proxy settings are retrieved by the userland DLL, by setting up a raw socket to sniff all\n\noutcoming traffic and parsing:\n\nDNS requests\n\nHTTP requests to look for a  Proxy-Authorization: Basic header and the proxy address\n\nThese two settings are then written to the registry.\n\nAll network communications are performed by the kernel driver. Each received packet is decoded and sent to the\n\nuserland in the pipe, and each data received through the pipe is encoded and sent back on the network.\n\nPackets have a 0x1c bytes clear header, followed by encrypted/compressed data. The header has the following\n\nstructure:\n\nstruct packetHeader {\n    DWORD random;\n    DWORD moduleID;\n    DWORD rawPacketSize;\n    DWORD checkSum;\n    DWORD xorKey;\n    DWORD bCompressed;\n    DWORD uncompressedSize;\n};\n\nThe ciphering is a simple XOR with the 4-bytes key, packet might be compressed with LZO and checkSum is a\n\nCRC32.\n\nUserland component\n\nThe userland component is in charge of the network communications decoding and commands interpretation. It\n\nreceives, from the kernel module, the moduleID and the deciphered/uncompressed data from the network packet.\n\nModules\n\nThis part of the malware seems modular, and each module is associated to a module ID. Previous papers described\n\nsome of those modules, but our samples contained two new modules. Here is the list of all the modules compiled in\n\nthe DLL:\n\nModule ID\n\nClass Name\n\nDescription\n\n0x80\n\nPCC_SYS\n\nVarious commands related to processes and services\n\n\fModule ID\n\nClass Name\n\nDescription\n\n0x81\n\n0x82\n\n0x83\n\n0x84\n\n0xC0\n\n0xF0\n\nPCC_CMD\n\nExecute commands\n\nPCC_PROXY\n\nNetwork proxy\n\nPCC_GUI\n\nPCC_FILE\n\nPCC_VPN\n\n-\n\nRemote Desktop\n\nFiles manipulation\n\nVPN feature\n\nUninstall, Disconnect, GetLastError, etc.\n\nThe two new modules are  PCC_GUI and PCC_VPN.\n\nEmbedded PE files\n\nThe userland DLL embeds 5 PE files, all stored in  .data section and ciphered with a 4-bytes XOR key.\n\nEmbedded PE #1\n\nThis one is a 64-bits DLL (export "], "URLs": [], "weight": 0.0}