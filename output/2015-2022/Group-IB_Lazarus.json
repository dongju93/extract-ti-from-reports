{"rule_id": 327, "name": "Group-IB_Lazarus", "description": "-", "references": [], "File_Names": ["MBLCTR.EXE", "list.jsp", "resfinan.com", "knf.gov", "ejbss.dll", "otzo.com", "finews.otzo", "software.The", "longmusic.com", "biolab.com", "wkey.dat", "fartit.com", "mbcrs.rll", "wcer.dat", "msvmgr.exe", "hyrX.dll", "dropper.exe", "smtp.dat", "telecom.com", "telecomm.com", "brou.com", "gpsvc.exe", "cnvb.gob", "global.com", "comtech.com", "encrypted_payload.bin", "sedns.cn", "208.xxx", "softether.net", "deskadp.dll", "tvoe.tv"], "MD5_Hashes": ["f38f6d976e6d66abc86f9992e808670a", "cb52c013f7af0219d45953bae663c9a2", "40e698f961eb796728a57ddf81f52b9a", "889e320cf66520485e1a0475107d7419", "1bfbc0c9e0d9ceb5c3f4f6ced6bcfeae", "5994a8fd8c68dd1cc51ce7ca0d9c2749", "b603a16a950056df336fe3950c81601d", "1f7897b041a812f96f1925138ea38c46", "85d316590edfb4212049c4490db08c4b", "1507e7a741367745425e0530e23768e6", "5C1917F6753D03A08328132DB1E06571", "3c3982d068bc7f2d1e4742c2009b0f46", "e4fb05a8c2da92ec5b19bdb59814464a", "d032aeb54cf1229e011c070ecd64c33e", "570e6ea21cdce694a4a74876ca87534a", "25200d3fe30785f3c90a91faf8ebf1b5"], "SHA1_Hashes": [], "SHA256_Hashes": [], "Registry_Entries": ["HKCU\\SOFTWARE\\Microsoft\\Windows\\\nCurrentVersion\\Internet Settings\u00bb\ncmd.exe /c tasklist /svc\ncmd.exe /c netstat -ano | find \u00abTCP\u00bb\n\n12\n\nLazarus arisen:  architecture, tools, attribution\f1   Key  \n\nFindings \n\n2   Attack  \n\npreparation and \nimplementation\n\n3   Attack  \n\norganizers\n\n4  Recommendations\n\n5  Indicators of \ncompromise\n\n6 Appendix \n\nIn the event the system is not of interest, the module will use the ", "HKCU\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Internet \nSettings\\\u00bb >> %s\\\u00bb\u00bb,\n\n\u00abcmd.exe /c \\\u00bbtasklist /svc >> %s\\\u00bb\u00bb, &TempFileName);\n\n\u00abcmd.exe /c \\\u00bbnetstat -ano | find \\\u00bbTCP\\\u00bb >> %s\\\u00bb\u00bb, &TempFileName);\n\n}\n\nThe analyzed sample can download and run executable files on \ncommand from the C&C server (the ", "HKLM\\SYSTEM\\CurrentControlSet\\Services\\<name of service>\\\n\nSecurity\\Data2\n\n\u2022  HKLM\\SYSTEM\\CurrentControlSet\\Services\\<name of service>\\\n\nSecurity\\Data3\n\nfdsvc.exe (MD5 9914075cc687bdc352ee136ac6579707 and 60928 bytes) is an \nexecutable file and can be classified as loader.\n\nExample of the Loader launch:\n\nloader.exe -d ", "HKLM\\SYSTEM\\CurrentControlSet\\Services\\<name of service>\\Security\\Data2\n\n\u2022  HKLM\\SYSTEM\\CurrentControlSet\\Services\\<name of service>\\Security\\Data3\n\n13\n\nLazarus arisen:  architecture, tools, attribution\fLoader is used to decrypt the payload \u2014 Client_RAT or Client_TrafficForwarder \n\u2014 and inject it into the legitimate process (for example, in lsass.exe)\n\nHackers manually specify the C&C server at the time when the main program \nis started. That\u2019s why even if researchers detect the loader they cannot \nidentify where the C&C server is located, by whom it is controlled, and which \nport is used for connection. In some cases, an additional loader was used by \ncriminals.  \n\nExample of loader launch:   \n\nloader.exe -d \u00abencrypted_payload.bin\u00bb -p 1540 -s [encrypted_C&C:port] -r [encrypted_commands]\n\nArgument -d:\nName of the file  \nwhere Client _Rat or  \nClient_Forwarder are stored \nin encrypted form\n\nArgument -p:\nID of the process (for example, lsass.\nexe) in which the payload \u2013  Client_RAT \nor Client_TrafficForwarder \u2013 should be \nembedded\n\n Two more arguments:\n \u2013r (functionality has not been \nidentified) and \u2013s \n\nClient_TrafficForwarder\n\nThis module was installed on one of the PCs in the internal network of the \nattacked organization. It proxies traffic from C&C server to PCs in the local \nnetwork of the attacked organization.\n\nClient_RAT\n\nThe Client_RAT program provides full control over the target system: it allows \nyou to analyze the system, download and execute files, transfer data from the \ninfected computer to the C&C server.\n\nCommunications with the C&C server are performed over an encrypted SSL \nchannel. For this purpose, Client_RAT uses statically linked libcurl libraries, \nversion 7.47.1 (FEB 2016).\n\n14\n\nLazarus arisen:  architecture, tools, attribution\f1   Key  \n\nFindings \n\n2   Attack  \n\npreparation and \nimplementation\n\n3   Attack  \n\norganizers\n\n4  Recommendations\n\n5  Indicators of \ncompromise\n\n6 Appendix \n\nThis program may execute the following commands received from the C&C \nserver:\n\nCommand Description\n\nCommand\n\nDescription\n\nNONE\n\nDo not execute any commands\n\nDIR\n\nList files in the selected \ndirectory\n\nGINF\n\nCollect and send extensive \nsystem information about the \nPC\n\nDIE\n\nRemove itself  \nfrom the system\n\nSLEP\n\nDo not execute any commands\n\nDEL\n\nDelete selected file\n\nHIBN\n\nDo not execute any commands\n\nWIPE\n\nDelete the selected file and \nmake it unrecoverable\n\nGet information about available \ndisks in the system\n\nUPLD\n\nUpload the file to C&C\n\nDRIV\n\nDIRP\n\nList files with the specified \nextension\n\nCHDR\n\nChange current directory\n\nRUNX\n\nGet the user token\n\nMOVE\n\nRename specified file\n\nSet the timestamps of the file \n%windir%/system32/kernel32.dll \nto the specified file\n\nSCFG\n\nGet a new bot configuration\n\nDRIV\n\nEnumerate installed drivers\n\nDOWN\n\nDownload and run the file\n\nCMDL\n\nRun the command and upload \nthe result of its work to \u0421&C\n\nGCFG\n\nDownload bot configuration\n\nRUN\n\nExecute command\n\nCreate a new directory with the \nspecified name\n\nPVEW\n\nList running processes\n\nPresumably download the file/\nfiles\n\nInject code in the specified \nprocess\n\nPresumably connect to the \nspecified network node\n\nPEEX\n\nPKIL\n\nInject the code in the process \nexplorer.exe\n\nTerminate the process with the \nselected PID\n\nFTIM\n\nNEWF\n\nZDWN\n\nPEIN\n\nTCON\n\n15\n\nLazarus arisen:  architecture, tools, attribution\f1   Key  \n\nFindings \n\n2   Attack  \n\npreparation and \nimplementation\n\n3   Attack  \n\norganizers\n\n4  Recommendations\n\n5  Indicators of \ncompromise\n\n6 Appendix \n\n03\n\nATTACK \nORGANIZERS\n\n3.1  Involvement  \n\nof North Korea \n\nDue to analysis of Lazarus infrastructure, Group-IB specialists have detected \nthat the attack was controlled from two IP addresses:\n\n\u2022  210.52.109.22 belongs to an autonomous system China Netcom. However, some \nsources indicate that the set of IPs 210.52.109.0/24 is assigned to North Korea.\n\n\u2022 \n\n175.45.178.222 refers to a North Korean Internet service provider. The Whois \nservice indicates that this address is allocated to the Potonggang District, \nperhaps coincidentally, where Natinal Defence Commission is located \u2014 the \nhighest military body in North Korea\n\nThrough investigation of public information, we came across a TV report \nfrom a South Korean news agency Arirang News dated 2016 \n\nOn the screen behind the host, Group-IB specialists noticed two IP addresses \n175.45.178.19 and 175.45.178.97, which had been used to control Ghost RAT \nmalware. Both IP addresses are in the same set of IP addresses as an IP address \n175.45.178.222 that was discovered by Group-IB specialists.\n\nThe South Korea\u2019s National Police Agency reportedly identified that the cyber-\nattack had been performed from the unfinished North Korean Ryugyong hotel. \nGroup-IB could not confirm this location attribution. \n\n16\n\nLazarus arisen:  architecture, tools, attribution\fThe DarkSeoul group (aka Lazarus) is controlled by Bureau 121, a division of the \nReconnaissance General Bureau, a North Korean intelligence agency. Bureau 121 \nis responsible for conducting military cyber campaigns.\n\n1st Bureau Operations\n\n2nd Bureau Reconnaissance\n\n3rd Bureau Foreign Intelligence\n\n5th Bureau Inter-Korea Dialogue\n\n6th Bureau Technical\n\n7th Bureau Rear Services\n\nBureau 121\n\nReconnaissance \nGeneral Bureau\n\n3.2  Masquerading  \n\nas Russian hackers\n\nStarting in 2016, the Lazarus group tried to mask their activity by \npretending to be Russian hackers: \n\n1.  The Client_TrafficForwarder module includes debugging symbols and \n\nstrings containing Russian words in descriptions of commands received by \nmalware from the C&C server. \n\nIt\u2019s worth noting that "], "URLs": ["http://softether.net/)"], "weight": 0.0}