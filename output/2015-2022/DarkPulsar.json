{"rule_id": 169, "name": "DarkPulsar", "description": "-", "references": [], "File_Names": ["version.fb", "Kerberos.dll", "0.exe", "sipauth32.tsp", "version.exe", "Msv1_0.dll", "version.xml", "Schannel.dll", "Wdigest.dll", "Lsasrv.dll", "9.xml"], "MD5_Hashes": ["96f10cfa6ba24c9ecd08aa6d37993fe4"], "SHA1_Hashes": [], "SHA256_Hashes": [], "Registry_Entries": ["HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Telephony\\Providers\n\nThis is loaded at start by the Telephony API (TapiSrv) launched alongside the Remote\nAccess Connection Manager (RasMan) service, setting startup type as \u201cAutomatic\u201d. When\nloading the telephony service provider\u2019s library, TapiSrv calls\nTSPI_lineNegotiateTSPIVersion which contains the AddSecurityPackage call to make the\ninject into lsass.exe.\n\nDarkPulsar implements its payload by installing hooks for the SpAcceptLsaModeContext\n\u2013 function responsible for authentication. Such injects are made in several system\nauthentication packets within the process lsass.exe and allow Darkpulsar to control\nauthentication process based on the following protocols:\n\nMsv1_0.dll \u2013 for the NTLM protocol,\nKerberos.dll \u2013 for the Kerberos protocol,\nSchannel.dll \u2013 for the TLS/SSL protocols,\nWdigest.dll \u2013 for the Digest protocol, and\nLsasrv.dll \u2013for the Negotiate protocol.\n\nAfter this, Darkpulsar gets ability to embed malware traffic into system protocols. Since\nthis network activity takes place according to standard system charts, it will only be\nreflected in the System process \u2013 it uses the system ports reserved for the above\nprotocols without hindering their normal operation.\n\n4/10\n\n\fNetwork traffic during successful connection to DarkPulsar implant\n\nThe second advantage of controlling authentication processes is ability to bypass entering\na valid username and password for obtaining access to objects that require authentication\nsuch as processes list, remote registry, file system through SMB. After Darkpulsar\u2019s\nDisableSecurity command is sent, backdoor\u2019s hooks on the victim side will always returns\nin the SpAcceptLsaModeContext function that passed credentials are valid. Getting that,\nsystem will provide access to protected objects to client.\n\nWorking with DarkPulsar\n\nDarkpulsar-1.1.0.exe is the administrative interface working under the principle of \u201cone\ncommand \u2013 one launch\u201d. The command to be executed must be specified either in the\nconfiguration file Darkpulsar-1.1.0.9.xml or as command line arguments, detailing at least:\n\nwhether the target machine uses a 32-bit or 64-bit system;\nprotocol (SMB, NBT, SSL, RDP protocols are supported) to deliver the command and\nport number\nprivate RSA key to decrypt the session AES key\n\nDarkpulsar-1.1.0 was not designed as a standalone program for managing infected\nmachines. This utility is a plugin of the Fuzzbunch framework that can manage\n\n5/10\n\n\fparameters and coordinate different components. Here is how DisableSecurity command\nin Fuzzbunch looks like:\n\nBelow is an example of Processlist after DisableSecurity, allowing to execute any plugin\nwithout valid credentials and operating via regular system functions (remote registry\nservice):\n\n6/10\n\n\fDanderSpritz\n\nDanderSpritz is the framework for controlling infected machines, different from\nFuZZbuNch as the latter provides a limited toolkit for the post-exploitation stage with\nspecific functions such as DisableSecurity and EnableSecurity for DarkPulsar.\n\nFor DanderSpritz works for a larger range of backdoors, using PeedleCheap in the victim\nto enable operators launching plugins. PeddleCheap is a plugin of DanderSpritz which can\nbe used to configure implants and connect to infected machines. Once a connection is\nestablished all DanderSpritz post-exploitation features become available.\n\nThis is how DarkPulsar in EDFStagedUpload mode provides the opportunity to infect the\nvictim with a more functional implant: PCDllLauncher (Fuzzbunch\u2019s plugin) deploys the\nPeddleCheap implant on the victim side, and DanderSpritz provides a user-friendly post-\nexploitation interface. Hence, the full name of PCDllLauncher is \u2018PeddleCheap DLL\nLauncher\u2019.\n\nThe complete DanderSpritz usage scheme with the plugin PeddleCheap via FuZZbuNch\nwith the plugins DarkPulsar and PCDllLauncher consists of four steps:\n\n7/10\n\n\fVia FuZZbuNch, run command EDFStagedUpload to launch DarkPulsar.\nIn DanderSpritz, run command pc_prep (PeedelCheap Preparation) to prepare the\n\npayload and the library to be launched on the implant side.\n\nIn DanderSpritz, run command pc_old (which is the alias of command pc_listen -reuse -\n\nnolisten -key Default) \u2013 this sets it to wait for a socket from Pcdlllauncher.\n\nLaunch Pcdlllauncher via FuZZbuNch and specify the path to the payload that has been\n\nprepared with the command pc_prep in the ImplantFilename parameter.\n/ol>\n\nDanderSpritz\n\nFile System plugin\n\nConclusions\n\n8/10\n\n\fThe FuzzBunch and DanderSpritz frameworks are designed to be flexible and to extend\nfunctionality and compatibility with other tools. Each of them consists of a set of plugins\ndesigned for different tasks: while FuzzBunch plugins are responsible for reconnaissance\nand attacking a victim, plugins in the DanderSpritz framework are developed for managing\nalready infected victims.\n\nThe discovery of the DarkPulsar backdoor helped in understanding its role as a bridge\nbetween the two leaked frameworks, and how they are part of the same attacking platform\ndesigned for long-term compromise, based on DarkPulsar\u2019s advanced abilities for\npersistence and stealthiness. The implementation of these capabilities, such as\nencapsulating its traffic into legitimate protocols and bypassing entering credentials to\npass authentication, are highly professional.\n\nOur product can completely remove the related to this attack malware.\n\nDetecting malicious network activity\n\nWhen EDFStagedUpload is executed in an infected machine, a permanent connection is\nestablished, which is why traffic via port 445 appears. A pair of bound sockets also\nappears in lsass.exe:\n\nWhen DanderSpritz deploys PeddleCheap\u2019s payload via the PcDllLauncher plugin, network\nactivity increases dramatically:\n\nWhen a connection to the infected machine is terminated, network activity ceases, and\nonly traces of the two bound sockets in lsass.exe remain:\n\n9/10\n\n\fIOCs\n\nimplant \u2013 96f10cfa6ba24c9ecd08aa6d37993fe4\nFile path \u2013 %SystemRoot%\\System32\\sipauth32.tsp\nRegistry \u2013 HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Telephony\\Providers\n\n10/10\n\n\f"], "URLs": [], "weight": 0.0}