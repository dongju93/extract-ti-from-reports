{"rule_id": 801, "name": "silence_moving-into-the-darkside", "description": "-", "references": ["CVE-2008-4250"], "File_Names": ["cleaner.exe", "i.vbs", "fuckacp.exe", "93.html", "J133295_18107_a4.exe", "lib_HkUEl.dll", "Sinaro.host", "second.cmd", "lssas.exe", "lib_m_rMJ.dll", "Hoster.KZ", "Statement.docx", "app4.exe", "ircabuse.pl", "slog.log", "process.exe", "pripr.exe", "bot.pl", "Malicious.chm", "Intent.chm", "firefoxportebles.exe", "rpc32.exe", "winexesvc.exe", "start.htm", "netsrvc32.exe", "Reg.Ru", "joiner.dll", "atmapp.exe", "app3.exe", "Farse.log", "dwenole.exe", "Malicious.lnk", "mss.txt", "Malicious.js", "lib_xqkRN.dll", "MicrosoftsUpdte.exe", "MicrosoftUpdte.exe", "injector.exe", "out.dat", "app.exe", "sapp.exe", "sok83.exe", "srv_cons.exe", "g.You", "Contract.docx", "OBDP952.tmp", "sdelete.exe", "___log.txt", "Malicious.doc", "samsung.exe", "sop.exe", "TKXV.dll", "library.dll", "lib_HpBsi.dll", "li.dll", "apcs.exe", "Radm_log.htm", "smmsrv.exe", "itbank.ru", "bankrab.ru", "lUX.dll"], "MD5_Hashes": ["2ad83e13b2a36b398a8632ef6ce5aa07", "b09b8be361cd0e30a70cc4603a31d1ee", "dc4ac53350cc4b30839db19d8d6f3b5f", "0074d8c3183e2b62b85a2b9f71d4ccd8", "79e61313febe5c67d168cfc3c88cd743", "874e94cb3f076a21d3fb9da6eb541bab", "1648437368e662fbe4805a1f95aa9fd0", "b3abb10cc8f4cbb454992b95064a9006", "40228a3ea22e61a0f53644881cd59281", "C49E6854C79043B624D07DA20DD4C7AD", "ef0fb10c602e3ee81e3677c83a44b409", "c6c84da4f27103db4ff593f4d4f45d95", "14863087695D0F4B40F480FD18D061A4", "a6cb04fad56f1fe5b8f60fabf2f64005", "5b4417521c71cc89cd3b2fe94ab395b2", "9628d7ce2dd26c188e04378d10fb8ef3", "cefd39402d7f91d8cf5f1cd6ecbf0681", "aa9c31883b3d8e493efad2f983908be3", "9b9757975d33c9c01b2d3de95d737202", "c4f18d40b17e506f42f72b8ff111a614", "ddb276dbfbce7a9e19feecc2c453733d", "15d097a50718f2e7251433ea65401588", "6743f474e3a6a02bc1ccc5373e5ebbfa", "3345dde0c827dcbda993f7216a8d7c12", "c49e6854c79043b624d07da20dd4c7ad", "121c7a3f139b1cc3d0bf62d951bbe5cb", "d7491ed06a7f19a2983774fd50d65fb2", "7b6345708e8d40254ab6fed6d124cc6d", "7d8af1f6cf7d08c0c39e03033585d404", "86ea1f46df745a30577f02fc24e266ff", "a58a830dce460e91217328bdefb25cbe", "14863087695d0f4b40f480fd18d061a4", "97599e2edc7e7025d5c2a7d7a81dac47", "1ee9f88cc7867e021a818dff012bdf9e", "b4313151019b2091cbd27c8810e5c7c5", "9596e59ea38350bc181ce56ffa7d6453", "b43f65492f2f374c86998bd8ed39bfdd", "404d69c8b74d375522b9afe90072a1f4", "8191dae4bdeda349bda38fd5791cb66f", "c3a70d2bf53f2eb6d05cafbb5e640855", "440b21958ad0e51795796d3c1a72f7b3", "4107F2756EDB33AF1F79B1DCE3D2FD77", "6743F474E3A6A02BC1CCC5373E5EBBFA", "79E61313FEBE5C67D168CFC3C88CD743", "86EA1F46DF745A30577F02FC24E266FF", "b7f97100748857eb75a6558e608b55df", "081ee959cbe6bc7dde7a6d13168e4fb4", "8A9D278B473B6C5625D57739714702FC", "d81ae5e0680d09c118a1705762b0bfce", "f69c35969745ae1b60403868e085062e", "f1954b7034582da44d3f6a160f0a9322", "a6771cafd7114df25ac0ef2688722fdf", "7d3614df9409da3933637f09587af28c", "dd74fcfa1a985beeb972022e3a722589", "cfffc5a0e5bdc87ab11b75ec8a6715a4", "50565C4B80F41D2E7EB989CD24082AAB", "50565c4b80f41d2e7eb989cd24082aab", "8a9d278b473b6c5625d57739714702fc", "88cb1babb591381054001a7a588f7a28", "9b037ead562c789620a167af85d32f72", "d565500ebee6109edba0be7dea86bf72", "1EE9F88CC7867E021A818DFF012BDF9E", "c8d0ccd2e58c1c467ee8b138c8a15eec", "a3de4a1e5b66d96183ad42800d6be862", "4107f2756edb33af1f79b1dce3d2fd77", "98c5c33f5c0bd07ac3e24935edab202a", "B3ABB10CC8F4CBB454992B95064A9006", "ee650c800d2eedd471ed59aa9435e55f", "43eda1810677afe6791dd7a33eb3d83c", "a1e210598820cbb08e269b2dfd96e741", "dfddcbcc3b15034ae733c858cb4e587b", "242b471bae5ef9b4de8019781e553b85", "dde658eb388512ee9f4f31f0f027a7df"], "SHA1_Hashes": [], "SHA256_Hashes": [], "Registry_Entries": ["HKCU\\Software\\Microsoft\\\nWindows\\CurrentVersion\\Run", "HKLM\\Software\\\nKingKongThai\\cc\\. key from the registry. \nThe second transferred parameter \nshould be ", "HKLM\\Software\\KingKongThai\\cc \nkey was not successful.\n\n", "HKLM\\\nSoftware\\KingKongThai\\cc registry key. \nThe value changes to 0.\n\nDelete the value from the HKLM\\\nSoftware\\KingKongThai\\cc\\. registry \nkey. The value name is received as a \nparameter.\n\n", "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run]\n", "HKLM\\\nSoftware\\KingKongThai\\cc registry key.\n\n", "HKLM\\Software\\KingKongThai\\cc \nkey was not successful.\n\n#ccl\n\n", "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run]\n", "HKLM\\SYSTEM\\CurrentControlSet\\\nServices\\MicrosoftService\\Note = <command line arguments>\n\n55\n\n\f\u2022 \n\nIt is important that the registry receives data from the arguments of the \ncommand line, and this data can be sent to the server even after subsequent \nlaunches, when the client is launched with no arguments at all. Thus, the \napplication under investigation can be used to collect other data, save the data \n(as an argument of the command line when launched) into the registry, and \nthen send it.\n\n\u2022  A new registry key is created called Types Supported. It is not used anywhere \nfurther: HKLM\\SYSTEM\\CurrentControlSet\\Services\\Eventlog\\Application\\\nMicrosoft Audit Service\\TypesSupported  =   7\n\n\u2022  The file under investigation tries to connect to the 185.29.10[.]117:443 network \n\nnode\n\n\u2022  The program features two ports: 443 and 444. The first one, 443, is a remote \n\nport, which should be tapped to connect with C2. The second one, 444, is used \nonly once when sending data about the system from the client to the server. \nStated in the file but not used ports for possible connections: 3389 and 8081\n\n\u2022  The connection is established at the layer of TCP sockets (Http and Https \n\nprotocols are not used)\n\n\u2022 \n\nIf the connection is not established, the attempts to connect and send files will \nbe repeated every 42 seconds or 1 minute (in two different threads). \n\n\u2022  After successful connection, the server gets information about the system: a \n\nstring with 16 random characters, PC name, user name, system right (user SID), \ncountry\\locale, local IP, number of the second port embedded into the build. \nThe length of the statistics package is always 208 bytes.\n\n56\n\nSilenceMoving into the darkside\f\u2022  The file performs 3 different requests to the server. If the responses are not \nequal to zero, it makes 4 more requests in a row (4th,5th,6th,7th requests).\n\n\u2022  Then the new TBacklinkClientThread thread is launched. The C&C server \n\naddress and 2 additional arguments are passed in the thread as arguments. \nThe first argument is the response to the server\u2019s request 1 and is also the \nport for connecting to the remote server and traffic redirection. The second \nargument is the server\u2019s response to request 4.\n\n\u2022  The connection to the C&C server is established via the port from the response \n\nto request 1. The data from response 4 is sent there.\n\n\u2022 \n\nIf the connection is successful and the response is received, the \nTSocksClientThread thread is launched.\n\n\u2022  The client reads another portion of data from the server and decrypts it. The \n\nencryption is done using XOR operations with a 0Dh byte\n\nTherefore, partially binary and partially textual protocol with encryption is \nused by the server to send commands to the client to request data from other \nnetwork nodes (stated by the server). In other words, the client can be used as an \nintermediate proxy server.\n\nSilence.ProxyBot.Net\n\nFile Name\n\nMD5 hash\n\nType of software\n\nsapp.exe\n\n50565c4b80f41d2e7eb989cd24082aab\n\nSilence.ProxyBot.NET\n\nSocksTest.exe\n\nbackconnect proxy\n\nSocksTest.exe\n\n8191dae4bdeda349bda38fd5791cb66f\n\nIn the beginning of 2018, we discovered the new version of the ProxyBot \ndeveloped for the .NET framework. The file named sapp.exe_ (56767 bytes, md5: \n50565C4B80F41D2E7EB989CD24082AAB) is an executable program for .Net. The \noriginal name of the program is SocksTest.exe. According to the information from \nthe PE heading of the file, it was compiled on January 25, 2018.\n\n57\n\n\fThe program executes the tasks of the proxy server and allows the attacker \nto redirect traffic from the current node to the backconnect server at \n185.161.208[.]61:443. The supported protocols are Sock4\\Socks5. The program is \ncompiled for .NET and needs the .NET Framework 4.0 package installed to launch. \nThe SmartAssembly tool is used for obfuscation.\n\nThe proxy contains encrypted settings for its operation, which are decrypted \ndynamically using one of the methods from the SocksTest.Settings class. The \ndecrypted settings of the proxy are presented below:\n\nFrom these settings it is clear that for its operation the proxy uses a backconnect \nserver at 185.161.208[.]61 port 443, user name ", "HKLM\\Software\\Microsoft\\Windows\\\nCurrentVersion\\Run", "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\\nCurrentVersion\\Run registry key. Deletes C:\\ProgramData\\\nIntelSofts_<disk serial number%>.exe:Zone.Identifier"], "URLs": ["http://<website", "http://192.168.19[.]171/index.", "http://192.168.19[.]171/index.php?xy=2&axy=12345", "https://sourceforge.net/projects/winexe/.", "http://cnc/index.php?xy=3&a", "http://cnc/index.php?xy=2&axy=<response1>", "https://www.welivesecurity.com/2017/05/09/sednit-adds-two-zero-", "http://192.168.19[.]171/index.php?xy=1", "http://<cnc>/index.php?xy=1"], "weight": 0.0}