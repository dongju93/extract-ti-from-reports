{"rule_id": 937, "name": "TheNaikonAPT-MsnMM1", "description": "-", "references": [], "File_Names": ["msictl.exe", "Agentb.hyb", "Cordmix.cu", "mmkcg.uicp", "finalfinalhandbookJan13.pdf", "adobe.pdf", "Pincav.cngx", "Agent.cifj", "admin.docx", "Zapchast.afma", "Dycler.ssr", "Sasfis.dmmt", "memo.doc", "2013.doc", "bagan.doc", "googlereader.pw", "tcpview.exe", "mysql.exe", "winscanx.exe", "Cordmix.ds", "Agent.gxqe", "Injector.kblf", "googlemm.vicp", "Cordmix.ch", "1_1.doc", "0158.du", "SslMM.exe", "burma.doc", "Agent.unhn", "Agentb.bphx", "hbs.txt", "Dropper.MSIL", "procex.exe", "Agent.ciry", "Agent.aidh", "Talk.lnk", "Agent.hc", "Zegost.aekr", "Zone.lnk", "Dycler.sss", "gicp.net", "Agent.tlhi", "phsenator.vicp", "unnamed.jpg", "Agent.cita", "iph.bat", "Agent.cjmv", "Zapchast.aetr", "xsAdv.dll", "NP.APS", "ahzx.eicp", "Agent.chrj", "Arakan.doc", "transcript.zip", "ReadPSW.exe", "Gap.doc", "Agent.zzrd", "Agent.bjer", "office.doc", "8.doc", "51vip.biz", "profile.dat", "ban.doc", "ubaoyouxiang.gicp", "tftp.exe", "Agent.xikp", "Menu.doc", "hd.exe", "hscan120.rar", "TPHCM.doc", "Agent.dcyv", "cutfile.exe", "mine.doc", "Summary.doc", "Agent.chuq", "wmiprive.exe", "ymsgr_tray.exe", "Zapchast.aevg", "Agent.tpbo", "readme.rtf", "lms.dat", "findmy.pw", "apcss.org", "0158.aw", "Cordmix.cs", "0158.gen", "Zapchast.aerr", "0158.eb", "Injector.jujl", "Agent.ciiu", "Developments.doc", "0158.di", "0158.ci", "Agent.hofz", "mshtml.dat", "Attendance.doc", "SpecialServices.doc", "0158.dj", "thronic.com", "thailand.vicp", "Agent.dgpd", "Zapchast.aety", "Agent.ciet", "1.rar", "Agentb.bbca", "Agent.cjkg", "frankhere.oicp", "lists.doc", "Agent.cicz", "stonehoof.com", "Zapchast.afcz", "stonehoof.rar", "Agentb.jwp", "UNFC_Statement_final_rcs.pdf", "ttteco.vicp", "procexep.exe", "imshop.in", "iExplorer.exe", "xServer.pdb", "Injector.kasl", "Agent.cibn", "aspistrategist.org", "googlemm.vic", "remarks.doc", "p.net", "goihang.vicp", "Agent.udtc", "language_rcs.pdf", "Zapchast.aest", "wuauc1t.exe", "Agent.siai", "Agent.spde", "winscan.exe", "29nov12.doc", "OLE2.CVE", "Zapchast.aevb", "0158.cb", "tour.doc", "Injector.kbre", "Agent.dfbk", "Free.doc", "Agentb.iqj", "Agent.cjez", "upd.exe", "xscan.exe", "Agent.whj"], "MD5_Hashes": ["45a99f60654f22b671aec980687d0f15", "27ed7c7dd840ff7936418cf029d56603", "ab0185f3dc730af754559297f6f47492", "800116c4fe842768a0e1acbc72c8cd62", "6f9b6adbb33b7c8912aa2e5ae1c39f7a", "6803bd509d36d2b99049fcc9d975a21c", "a5721c5e7f2b49df82595819b5a49c0c", "79de618615e139053ad92ca1e7bb7456", "33d388c6e841ede3920f79516b5da032", "469ca0c73398903908babcad14300d8d", "7a9712cbb3e340e577ce0320cceeb05f", "1b37457632840b04bf03e0745e51e573", "F14C42765F130EE6DEC3A87DC50A47E1", "b049fdeeb707e86e5e334f72cd50ffd8", "55b8b8779001b7e78a6adc55fb546401", "041436594c1ce9e99c569fb7402fe0c7", "748c4761822dc7076399922df58551ae", "b295274423c91ad9e254475bf8edd459", "7c0676d950a1443e98b7d5b4727923ea", "9883abc829870478ce6f3cfddbcbbaf2", "90E9BDFC1FC6FE5999B047880C7445AE", "516f64dd4fce3b9a325ea8501f97a88a", "d57a7369d79467d7c768bb08febcc6a2", "c8c81cca4645e71213f2310cec6c277d", "c8ed40879e1e3352692fe8c765294955", "113822c9bfeed38c099ae9004f1d8404", "a3b3a32b6f67e4629133cc4578230efe", "c334737ea5e8f74567bfdc2fce6717b9", "5de5aa40eb3d30df2053a38bc26963b5", "416e6c9105139080310984ed06f6a57b", "3bed6788753690762c7d15a3247d8301", "9f23c0aed27f0874308bbd5f173ed85b", "48c2d02c443d70fe004a2d6fb9439f76", "21119ddd01694bb9181286b52cf1203c", "dabba458b13cb676406c2bb219af9f81", "8660193a90e70f19a4419ae09306761f", "7F422B43EEB93B230FF7553C841C4785", "b6424852dd0187ea554a1cbc4e3490f3", "48fb78e8ba531505e246760c0d02d6b0", "5c04904a50f0285851fb7292c13858ec", "d86106faaa398b8d83437176bf5e39c4", "4299846c34fddda2f5a75239f8aca424", "ceb6e4499cfd8650f3e94fbcf7de48f6", "d0fba5db608ac8f5a3d05a71ceb0eca1", "448cd7c3ae0ae445d805a4849fe5e120", "1d6258bc3688226e7cb56fb821215a8b", "95c4a236faa65b75dbb0076d8248584c", "5f1f6fb3cea3e9c3bd84909b7d37aa8d", "638c119a82a1b1d470e42e2e9712f3fb", "6a82c153bd370250cc2fed89f1bb5c91", "03A3251BDE74DF30AB5BF0B730E08C8D", "cb72e70378755f1e8ab744a5b5e692bd", "40138f3db14e6e137f8d0bdcbb5851d8", "4972c7205e3279322637f609b9199e97", "6cbc73fae7118dbd0fae328ce8ee6050", "6758fc7e483ad9cd6280bcc3f4d85222", "c58df5892700ac3f467524f86bf325c0", "55048b78e9549c462c1463f7648454a5", "7b1199523a662a3844ba590f83b56dae"], "SHA1_Hashes": [], "SHA256_Hashes": [], "Registry_Entries": ["HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\InstallDate. \nThese values are built into a single string for reporting.  \n\nSslMM also maintains this code chunk and functionality but does not immediately invoke it like \nwinMM. Also interesting and different from sslMM, are the decoy Word documents dropped by \nmany of the winMM droppers. Images of these documents are shown in the Appendix. The \ndocuments are all written and formatted with a specially developed Myanmar2 True Type font,  \ndemonstrating the focus on politically-connected, native Myanmar speakers as targets. This font \nis not delivered by default with Microsoft Office. Instead, it must have been specifically installed \nby the attackers and then by the victims, otherwise the documents would not have displayed \nproperly. \n\nThe backdoor maintains multiple primitive functionalities: \nSetting a WH_CBT Windows hook for full activity spying (sslMM does not maintain this hooking \nfunctionality): \n\n\u25cf  File search and capture \n\u25cf  Process creation \n\u25cf  Keystroke capture  \n\nThe backdoor is usually configured with primary and backup domains for C2 communications, \nalthough there are multiple known samples that maintain an IP address or only a single domain \nfor communications with no backup. Communication is built to appear as though a web browser \nis simply making a request to a remote web server. Some of these backdoors are configured to \nuse an unusual port for encrypted communications. \n\nexe_exchange (used in attacks prior to ~2012) \n\n \n \n \n \n \n \n \n \n \n \n \n\fMD5 \u2013 Filename \n\nFile Size \n\nCompilation date  Linker \n\n6a82c153bd370250cc2fed89f1bb5c91 - \n%temp%\\services.exe \n\n69,632 \nbytes \n\n2012-03-13 \n07:54:19 \n\nversion \n\n6.0 \n\nINJECTv1/INJECTRESOURCE \n\nMD5 \u2013 Filename \n\nFile Size \n\nCompilation date  Linker \n\nversion \n\nb295274423c91ad9e254475bf8edd459 \n- wmiprive.exe \n\n159,744 \nbytes \n\nMay 27, 2013 \n\nThe xsPlus/nokian backdoor and keylogger \n\nMD5 \u2013 Filename \n\nFile Size \n\nCompilation date  Linker \n\nd86106faaa398b8d83437176bf5e39c4 \n\n281,624 \nbytes \n\n2011.12.19 \n08:06:30 \n\nversion \n\n6.0 \n\nIn 2014 the Naikon gang was found to be using another tool that maintains an internal name \n\u201cxsPlus\u201d and \u201cxsControl\u201d. This builder and its backdoors produce components with the \n\u201cNOKIAN95/WEBx\u201d user-agent strings, for which there are multiple versions. Its functionality is \ncovered in our previous Naikon APT post. \n\nNaikon and minor links with APT30 \n\nAnother interesting aspect of the backdoor builder is that it also provides a keylogger plugin that \nis used on specific victim systems. And here there are minor, but striking, similarities with the \nAPT30 tools. \n\nCallback sessions for stolen data include these URLs: \n\nPOST /stonehoof.rar/user=xxx&password=xxx \nGET /stonehoof.rar/user=xxx&password=xxx \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\fSome of the collector components upload data in SQLite3 format, while earlier versions of the \ntool upload xml formatted data. Presenting a similarity with the APT30 artifacts, their callback \ndomains included stonehoof.com, hosted on several IPs during the naikon campaigns. This \nname is very unusual, and it is an odd coincidence that it is shared by two geopolitically-focused \ncyber-espionage groups, both targeting the South China Sea region. \n\nAPT30 - stonehoof.com \n2012-10-07 \n2013-04-03 \n2013-04-14 \n\n208.77.46.251  \n174.36.159.165 \n219.90.115.251 \n\n174.36.159.165 \n219.90.115.251 \n174.36.159.164 \n\nWhile the MsnMM components include the unusual \u201cMM\u201d in internal names sslMM, winMM, and \nwininetMM, some of the strings in the APT30 GEMSTONE software include the same \u2013 search \nand retrieval of the registry key \u201cSoftware\\Microsoft\\GetMM\u201d, and three function names \n\u201cMicrosoftGMMExit, MicrosoftGMMHaveExit, MicrosoftGMMZJ\u201d. The APT30 BACKSPACE \nbackdoor also contains a similar potential target reference, as discussed in the FireEye paper. \n\u201cBACKSPACE Variant \nZJ Auto (version 1.4)   \n\nPossible Target \n\n/autoMM/  \n\nMyanmar\u201d \n\nPath  \n\nSo, the \u201cMM\u201d shared by both of these may be a simple reference to Myanmar, the starting target \nfor these Naikon APT attacks. \n\nAPT30 backdoors also add \u201cMSN.lnk\u201d shortcuts to the Start Menu Startup location for \npersistence, just like the MsnMM components spoof \u201cMsn Gaming Zone.lnk\u201d and \u201cMsn Talk.lnk\u201d \nfor persistence. \n\nSys10  \n\nMD5 - Filename \n\nFile Size \n\nCompilation date  Linker \n\nc58df5892700ac3f467524f86bf325c0 - \nupdate.exe \n\n116.5 kb \n\n2013.02.01 \n07:39:12 \n\nversion \n\n9.0 \n\nYet another backdoor was used throughout 2013 by Naikon. Several of the C2 domains are \nshared with either Naikon or MsnMM infrastructure. This backdoor is a very basic initial \ncomponent. To give an idea of the sophistication of its development, one of the decryption \nschemes it uses is an xor 0x1 loop on the very beginning of its .data section to decrypt its C2 \ndomain. In this case, 6C 6C 6A 62 66 2F 74 68 62 71 2F 6F 64 75 01 (lljbf/thbq/odu) \u2192 \nmmkcg.uicp.net. \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\fThis weak level of encryption is odd, because other strings, like the unicode version of the \ncallback url \u201cs.y.s.t.e.n.&.c.p.=.%.s.&.l.o.g.=.%.s.&.i.n.d.e.x.=.%.d.\u201d, are maintained in plaintext \nin the .rdata section. Perhaps the authors thought xor\u2019ing the domains would hide their \ninfrastructure for as long as needed, or they were working with others who didn\u2019t understand \nautomated sandboxes and tracing but didn\u2019t want the dns strings present in the binary. It doesn\u2019t \nseem to make sense, but it appears to have been effective enough to leave in the executables. \n\nFor all of the \u201cSys10\u201d backdoors, URL parameters were used consistently for the initial C2 \ncallback: systen&cp=&log=&index= \nwhere: \ncp = system computername \nlog =  signed decimal integer representation of the OS InstallDate \nindex = simply the return value from a GetTickCount call \n\nThe backdoor collects several bits of identifying information to send to the C2: \n\n\u25cf  computer name \n\u25cf  account name of logged-in user \n\u25cf  group name of logged-in user \n\u25cf \n\u25cf  OS versioning information \n\u25cf  OS install date \n\nlocal IP address \n\nThe backdoor maintains a simple set of primitives: \n\n\u25cf  http-based communications with hardcoded C2  \n\u25cf  download additional components \n\u25cf  start a new process \n\u25cf \n\u25cf \n\u25cf  delete files \n\u25cf  create files \n\nterminate a running process \nfind files and copy them \n\nWe detected this backdoor on multiple victim workstations with the following verdicts: \n\nTrojan.Win32.Agentb.hyb \nTrojan.Win32.Agentb.iqj \nBackdoor.Win32.MsnMM.p \nUDS:DangerousObject.Multi.Generic \nTrojan.Win32.Agentb.jwp \n\nAccording to KSN (Kaspersky Security Network) data, almost all of the victims attacked with this \nbackdoor are based in Myanmar, or were Myanmar delegates travelling through the other \ncountries like the US, for example. Some of the victims were located in Vietnam and Singapore. \nVictim profiles range from global political representatives and local IT service companies, to \n\n \n \n \n \n \n \n\fgovernment ministries controlling media and news content, university students, and local law \nenforcement agencies. \n\nWininetMM/Sakto \n\nMD5 - Filename \n\nFile Size \n\nCompilation date  Linker \n\n516f64dd4fce3b9a325ea8501f97a88a  95,744 \n\nbytes \n\n2014.11.03 \n07:59:14 \n\nversion \n\n9.0 \n\nSecond stage tools \n\nMost of the Naikon APT\u2019s second stage tools detected on victim networks are publicly-available. \nSome are very common system administration tools and utilities, and some are less publicly-\navailable custom written scanners and tools available through Chinese hacking forums. Their \nability to move through networks undisturbed appears to have matured over time, demonstrating \nthat they are a seasoned team: \n\n\u25cf  Windows system utilities: ftp.exe, systeminfo.exe, ipconfig, net view, ping, netstat -ano, \nnet use, quser, tasklist, netsh interface ip, netsh interface show, netsh advfirewall \nfirewall, reg export, AT \n\n\u25cf  Sysinternals: procmon.exe, tcpview.exe, procexep.exe, psexec \n\u25cf  Prosolve: winscan.exe \n\u25cf  Rarlabs: rar.exe \n\u25cf  Other: procex.exe, nc.exe, xscan.exe, winscanx.exe, hscan120.rar package (includes \nmysql.exe and sqlcmd.exe), cutfile.exe, tftp.exe, Win7 elevation of privilege and UAC \n\n \n \n \n \n \n \n \n \n \n \n \n\fbypass, ReadPSW.exe (password stealer) \n\nThe Naikon APT frequently used a custom backdoor that appears to be an HDoor variant, \nbased on old \u201cHonker Union\u201d code like \u201chscan v120\u201d. For example, once on a victim network, \none of the first steps is to run the hdoor -hbs scan to identify target local network hosts.  \nAlternatively, it may show up on victim networks and be run with a long list of parameters: \n\u201clms.dat -hscan 192.168.0.1-192.168.0.254 /a\u201d \n\nCustom HDoor  \n\nMD5 \u2013 Filename \n\nFile \nSize \n\nCompilation \ndate \n\nDetection Name \n\nbf6d3f52ab8176122be858ddccc2214\n8 - lms.dat \n\n56 kb \n\n2015.05.20 \n\nHackTool.Win32.Agent.whj \n\nThe Naikon APT\u2019s custom-built HDoor tool is a robust reconnaissance tool for lateral movement, \nsupporting the identification of, interfacing with and attacking of multiple technologies and \nresources: \n\n\u25cf  host, user, group, and related authentication resources and cracking/brute forcing  \n\ncapabilities \n\n\u25cf  network asset scanning and identification, including SQL database, embedded network \n\ndevices like home or SMB routers, and other common network services \nfake service listener to sniff traffic \n\n\u25cf \n\u25cf  disk wiping - safe delete with multiple overwrites \n\u25cf  process management \nlocal filetime modifier \n\u25cf \n\u25cf  SQL administration toolset \n\u25cf  SOCKS5 proxy service \n\u25cf  banner-based scanner \n\u25cf  AV killer \n\nPublicly-available hd.exe (40138f3db14e6e137f8d0bdcbb5851d8), as posted by NCPH: \n\n \n \n \n \n \n \n \n \n \n \n\fThe corresponding hbs.txt output file content that is sometimes left behind on victim systems: \n\nThe operator\u2019s scanning is somewhat inconsistent. They will scan for a specific set of ports that \ninclude 21,22,80,3389,1433,3306, and 389. Sometimes, they add 139 and 445 to the end of \nthat list. Often, they check for a \u201cPortString\u201d, or banner, which is output to a txt file: \n\n[10.1.1.2    ]:   Port 22 Open!!! SSH-1.99-Cisco-1.25 \n[10.1.1.3  ]:   Port 21 Open!!! 220-FileZilla Server version 0.9.41 beta \n[10.1.1.4   ]:   Port 21 Open!!! 220 Lexmark X860de FTP Server NP.APS.N332a ready. \n[10.1.1.5    ]:   Port 22 Open!!! SSH-2.0-OpenSSH_5.8 \n[10.1.1.6   ]:   Port 22 Open!!! SSH-2.0-dropbear_0.48 \n[10.1.1.7    ]:   Port 21 Open!!! 220 Service ready for new user \n[10.1.1.8   ]:   Port 21 Open!!! 220 Microsoft FTP Service (Version 5.0). \n[10.1.1.8   ]:   Port 80 Open!!!  \n[10.1.1.8   ]:   Port 3389 Open!!!  \n[10.1.1.8   ]:   Port 139 Open!!!  \n[10.1.1.9   ]:   Port 21 Open!!! 220 fima FTP server (SunOS 5.8) ready. \n[10.1.1.10  ]:   Port 21 Open!!! 220 (vsFTPd 2.0.5) \n[10.1.1.13  ]:   Port 21 Open!!! 220 EthernetBoard OkiLAN 8100e Ver 02.15 FTP server. \n[10.1.1.15   ]:   Port 22 Open!!! SSH-2.0-OpenSSH_5.9p1 Debian-5ubuntu1.1 \n[10.1.1.21  ]:   Port 80 Open!!! http://10.1.1.21/cgi-bin/webproc  Dlink   WIRELESS AP  \n\nTarget and Victim Profiles \n\n \n \n \n \n \n \n \n \n\fTarget profiles included high profile government and military agencies around the South China \nSea: \n\n\u25cf  Law enforcement \n\u25cf  Government - executive, administrative, regulatory \n\u25cf  Military - operations centers \n\u25cf  Economic administration \n\u25cf  State media \n\u25cf  Public/Private energy \n\nShared Victims with Cycldek and Comparing Lateral Movement with Cycldek \n\nThe Cycldek APT appeared to follow an operational script across victim systems.  It created or \nused c:\\intel on the victim hard disk to unpack tools and compress/archive stolen victim files and \ndata with Winrar, like "], "URLs": ["http://10.1.1.21/cgi-bin/webproc", "http://www.apcss.org/wp-", "http://www.apcss.org/", "http://thronic.com/Win32%20Keylogging/", "http://www.aspistrategist.org.au/asias-military-developments/)"], "weight": 0.0}