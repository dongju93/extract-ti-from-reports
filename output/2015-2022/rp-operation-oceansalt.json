{"rule_id": 214, "name": "rp-operation-oceansalt", "description": "-", "references": [], "File_Names": ["Generic.grp", "Generic.RP", "labs.aspx", "Generic.dx", "log.php", "calc.exe", "Generic.ole", "V3UI.exe", "temp.log", "java.exe"], "MD5_Hashes": ["D14DD769C7F53ACEC482347F539EFDF4", "45C362F17C5DC8496E97D475562BEC4D", "bf4f5b4ff7ed9c7275496c07f9836028", "74A50A5705E2AF736095B6B186D38DDF", "C1773E9CF8265693F37DF1A39E0CBBE2", "0355C116C02B02C05D6E90A0B3DC107C", "B2F6D9A62C63F61A6B33DC6520BFCCCD", "76C8DA4147B08E902809D1E80D96FBB4", "531dee019792a089a4589c2cce3dac95", "38216571e9a9364b509e52ec19fae61b", "5e0df5b28a349d46ac8cc7d9e5e61a96"], "SHA1_Hashes": ["ec9a9d431fd69e23a5b770bf03fe0fb5a21c0c36", "583879cfaf735fa446be5bfcbcc9e580bf542c8c", "42192bb852d696d55da25b9178536de6365f0e68", "1f70715e86a2fcc1437926ecfaeadc53ddce41c9", "12a9faa96ba1be8a73e73be72ef1072096d964fb", "0ae167204c841bdfd3600dddf2c9c185b17ac6d4", "832d5e6ebd9808279ee3e59ba4b5b0e884b859a5", "d72bc671583801c3c65ac1a96bb75c6026e06a73", "be4fbb5a4b32db20a914cad5701f5c7ba51571b7", "fc121db04067cffbed04d7403c1d222d376fa7ba", "dd3fb2750da3e8fc889cd1611117b02d49cf17f7", "281a13ecb674de42f2e8fdaea5e6f46a5436c685", "9fe4bfdd258ecedb676b9de4e23b86b1695c4e1e", "e5c6229825f11d5a5749d3f2fe7acbe074cba77c"], "SHA256_Hashes": [], "Registry_Entries": ["HKLM\\Software\\Microsoft\\Windows\\currentVersion\\\n\nRun | sysinfo\n\nBased on the executable header information, Seasalt \nwas compiled on March 30, 2010. Oceansalt was \ncompiled on June 1, 2018. Highlighting the compilation \ntimestamps is important because, as our preceding \nanalysis demonstrates, the samples have a high degree \nof code sharing:\n\n \u25a0 Multiple functional similarities\n\n \u25a0 Identical command capabilities\n\n \u25a0 Same command and response codes issued by and \n\nsent to the control server\n\nThe code used to create the reverse shell in Oceansalt \nis an exact match with that of Comment Crew\u2019s Seasalt \nimplant. The mechanism for creating the reverse shell \n(pipe-based inter-process communication for standard \nI/O handles) is also seen in Comment Crew implants \nsuch as WebC2-CSON and WebC2-GREENCAT.\n\nThese matches lead us to believe that Oceansalt is \nbased on Seasalt, because it reuses much of the code \nbase developed 10 years ago. Seasalt\u2019s public disclosure \nin the Comment Crew report does not seem to have \ndiscouraged Oceansalt\u2019s developer.\n\nObfuscated Oceansalt Comparison with Seasalt\n\nWe offer a comparative analysis of the following partially \nobfuscated implants against the initial Oceansalt sample \nand the Seasalt implant from Comment Crew.\n\nSHA-1\n\nCompile Date\n\nRole\n\nfc121db04067cffbed04d7403c1d222d376fa7ba\n\n281a13ecb674de42f2e8fdaea5e6f46a5436c685\n\n1f70715e86a2fcc1437926ecfaeadc53ddce41c9\n\nec9a9d431fd69e23a5b770bf03fe0fb5a21c0c36\n\n12a9faa96ba1be8a73e73be72ef1072096d964fb\n\nbe4fbb5a4b32db20a914cad5701f5c7ba51571b7\n\n0ae167204c841bdfd3600dddf2c9c185b17ac6d4\n\n7/16/2018\n\n7/17/2018\n\n7/17/2018\n\n7/16/2018\n\n7/17/2018\n\n7/17/2018\n\n7/17/2018\n\nPartially obfuscated Oceansalt\n\nPartially obfuscated Oceansalt\n\nPartially obfuscated Oceansalt\n\nPartially obfuscated Oceansalt\n\nPartially obfuscated Oceansalt\n\nPartially obfuscated Oceansalt\n\nPartially obfuscated Oceansalt\n\n18\n\n\u2018Operation Oceansalt\u2019 Attacks South Korea, U.S., and Canada With Source Code From Chinese Hacker Group\n\n\fREPORT\n\nAll the partially obfuscated Oceansalt implants have the \nfollowing characteristics:\n\n \u25a0 All implants were compiled during a three-day period: \n\nJuly 16\u201318\n\n \u25a0 All implants contain debug statements (print logs) \n\nEvidence of Source-Code Sharing\n\nWe present evidence of source-code sharing between \nthe Oceansalt authors and Comment Crew, based on \nour comparative analysis of the three sets of samples: \nOceansalt, partially obfuscated Oceansalt, and Seasalt.\n\nwritten to the log file: C:\\Users\\Public\\Videos\\temp.log\n\n \u25a0 There is no possibility the attackers could have re-\n\n \u25a0 These debug statements begin with the timestamp \n\nand consist of the following keywords at the beginning \nof the debug message:\n\n \u2212 [WinMain]\n\n \u2212 [FraudProc]\n\n \u25a0 All implants connected to the same control server IP \n\naddress: 27.102.112.179\n\n \u25a0 Although none of the partially obfuscated implants \n\ncontain any additional capabilities (as compared with \nthe initial Oceansalt or Seasalt), some of the partially \nobfuscated implants are missing the reverse-shell \ncapabilities:\n\nPartially Obfuscated Oceansalt Hash\n\nC1773E9CF8265693F37DF1A39E0CBBE2\n\n0355C116C02B02C05D6E90A0B3DC107C\n\n74A50A5705E2AF736095B6B186D38DDF\n\n45C362F17C5DC8496E97D475562BEC4D\n\nD14DD769C7F53ACEC482347F539EFDF4\n\nB2F6D9A62C63F61A6B33DC6520BFCCCD\n\n76C8DA4147B08E902809D1E80D96FBB4\n\nReverse-Shell \nCapability?\n\nNo\n\nYes\n\nYes\n\nNo\n\nNo\n\nYes\n\nYes\n\ninstrumented Seasalt by simply modifying the control \nserver IP addresses:\n\n \u2212 The mechanism for obtaining the address in Seasalt \n\nis different from Oceansalt\u2019s. Seasalt looks for \nencoded data at the end of the binary, decodes this \ndata into tokens separated by the marker \u201c$,\u201d and \nobtains the control server information.\n\n \u2212 Oceansalt implants have the control server IP \n\naddresses and port numbers hardcoded as plain-\ntext strings in the binaries\n\n \u25a0 Some of the partially obfuscated Oceansalt implants \nare missing the reverse-shell capability. All other \ncapabilities (code signatures, response codes, etc.) \nand command codes are similar. (Command codes are \neither the same or off by 1.) Modifying capabilities in \nthis fashion is possible only with access to the source \ncode of Seasalt.\n\n19\n\n\u2018Operation Oceansalt\u2019 Attacks South Korea, U.S., and Canada With Source Code From Chinese Hacker Group\n\n\fREPORT\n\n \u25a0 The presence of debug strings tracing the code flow of \nthe Oceansalt implants indicates they were compiled \nafter adding debug information to the source code of \nSeasalt:\n\n \u2212 [WinMain]after recv cmd=%d 0Dh 0Ah\n\n \u2212 [WinMain]before recv 0Dh 0Ah\n\n \u2212 [FraudProc]Engine is still active! 0Dh 0Ah\n\n \u2212 [FraudPRoc]Process Restart! 0Dh 0Ah\n\n \u25a0 The presence of these debug strings also indicates \n\nthat the authors who modified the source code may \nhave used these samples to perform their initial \ntesting before obfuscating and releasing the implants \nto their victims, without scrubbing the debug strings\n\n \u25a0 The Oceansalt implant \n\n531dee019792a089a4589c2cce3dac95 (compiled June \n1) contains a few key features that indicate compilation \nfrom the source code of Seasalt:\n\n \u2212 Does not contain the reverse-shell capability\n\n \u2212 Does not contain the drive recon capability\n\n \u2212 Loads API SHGetFileInfoA() dynamically without \nstatically importing it. This also suggests that \nSeasalt\u2019s source code was modified before \ncompilation.\n\nFigure 21. Dynamic API loading in an Oceansalt implant.\n\n20\n\n\u2018Operation Oceansalt\u2019 Attacks South Korea, U.S., and Canada With Source Code From Chinese Hacker Group\n\n\fREPORT\n\nOceansalt Capabilities\n\nOceansalt is 76KB, a minimal on-disk footprint that is \nharder to detect than larger malware. The implant has a \nvariety of capabilities for capturing data from the victim\u2019s \nmachine using a structured command system. From \nour research we have determined that this implant is a \nfirst-stage component. Further stages are downloaded \nthrough its commands. Oceansalt also supports \ncommands enabling the attacker to take various actions \non the victim\u2019s system.\n\nInitial reconnaissance\nOceansalt starts by trying to connect to its control server \nat 158.69.131.78:8080. Once connected, the implant \nsends the following information about the endpoint:\n\n \u25a0 IP address\n\n \u25a0 Computer name\n\n \u25a0 File path of the implant\n\nAll data sent to the control server is encoded with a NOT \noperation on each byte.\n\nFigure 23. Control server connection functionality for Oceansalt.\n\nFigure 22. Initial data gathered from the endpoint by Oceansalt.\n\n21\n\n\u2018Operation Oceansalt\u2019 Attacks South Korea, U.S., and Canada With Source Code From Chinese Hacker Group\n\n\fREPORT\n\nCommand handler functions\nOceansalt can execute 12 commands. Each command \nreceived from the control server is represented by a \ncommand code ranging from 0x0 to 0xB (0 to 11).\n\nFigure 24. Command index table showing Oceansalt\u2019s capabilities.\n\n22\n\n\u2018Operation Oceansalt\u2019 Attacks South Korea, U.S., and Canada With Source Code From Chinese Hacker Group\n\n\fREPORT\n\nFigure 25. Oceansalt\u2019s command execution functionality.\n\n23\n\n\u2018Operation Oceansalt\u2019 Attacks South Korea, U.S., and Canada With Source Code From Chinese Hacker Group\n\n\fREPORT\n\n0x0: Drive recon\nThe control server sends this command code to \nOceansalt to extract drive information from the \nendpoint. The format of the drive information: \n\n#<Drive _ letter>:<Drive _ type><Drive _\nletter>:<Drive _ type>...#\n\nLegend\n\nDescription\n\n<Drive_letter>\n\nA,B,C,D,E, etc., representing all logical drives on \nthe system\n\n<Drive_type>\n\n0 = DRIVE_REMOVABLE \n1 = DRIVE_FIXED \n2 = DRIVE_CDROM \n3 = DRIVE_REMOTE\n\n24\n\n\u2018Operation Oceansalt\u2019 Attacks South Korea, U.S., and Canada With Source Code From Chinese Hacker Group\n\nFigure 26. Oceansalt gathering drive information.\n\n\fREPORT\n\n0x1: File recon\nSends the following information about a specific file (or \nfile pattern) specified by the control server:\n\n0x3: File delete\n \u25a0 Deletes a file specified by the control server from the \n\ndisk\n\n \u25a0 Filename\n\n \u25a0 Type of file on disk, for example, file or folder\n\n \u25a0 \u201cOK\u201d if file was found on the location\n\n \u25a0 Once an operation is completed, the implant sends \na \u201c0\u201d (in ASCII) to the control server to indicate the \nsuccessful execution of the command\n\n \u25a0 If the operation fails, Oceansalt sends a \u201c1\u201d (in ASCII) to \n\n \u25a0 File creation time in format <YYYY-mm-DD HH:MM:SS>\n\nindicate failure\n\n0x2: Command execute\nExecutes a command line using WinExec(). The \ncommand line is provided by the control server along \nwith the command number. For example:\n\n<DWORD representing command \nnumber><command line to be executed> \n02 00 00 00 C:\\Windows\\system32\\calc.exe\n\nThe command line is executed with a hidden window \n(using the SW_HIDE option for WinExec()).\n\n0x4: File write\n \u25a0 Creates a file specified by a file path provided by the \ncontrol server, which also provides the content to be \nwritten to the file path\n\n \u25a0 If the file write is successful, Oceansalt sends the \n\nkeyword \u201cupfileok\u201d indicating success\n\n \u25a0 If the file write fails, the implant sends the keyword \n\n\u201cupfileer\u201d indicating failure\n\nFigure 27. Oceansalt\u2019s command execution capability.\n\n25\n\n\u2018Operation Oceansalt\u2019 Attacks South Korea, U.S., and Canada With Source Code From Chinese Hacker Group\n\n\fREPORT\n\n0x6: Process recon\n \u25a0 Sends the name and ID for every process running on \n\nthe system to the control server\n\n \u25a0 Process data is sent via individual packets, that is, one \n\npacket per process\n\nFigure 28. Oceansalt\u2019s file-writing capability.\n\nFigure 29. Oceansalt\u2019s process listing via its recon capability.\n\n26\n\n\u2018Operation Oceansalt\u2019 Attacks South Korea, U.S., and Canada With Source Code From Chinese Hacker Group\n\n\fREPORT\n\n0x7: Process terminate\n \u25a0 Terminates a process whose ID has been specified by \n\nthe control server\n\n0x8: Reverse shell create\n \u25a0 Opens a reverse shell from the infected endpoint to \n\nthe control server using Windows pipes\n\n \u25a0 This reverse shell is based on cmd.exe. It can carry out \n\nfurther recon and make changes to the endpoint.\n\n27\n\n\u2018Operation Oceansalt\u2019 Attacks South Korea, U.S., and Canada With Source Code From Chinese Hacker Group\n\nFigure 30. Oceansalt\u2019s reverse-shell creation capability.\n\n\fREPORT\n\n0x9: Reverse shell operate\n \u25a0 Operates the reverse shell established using the \n\nprevious command code\n\n \u25a0 Contains the commands sent by the control server to \nthe reverse shell that will be executed by cmd.exe on \nthe infected endpoint\n\n \u25a0 Once the command has been executed, the output is \nread from cmd.exe via a pipe and sent to the control \nserver\n\n0XA: Reverse shell terminate\n \u25a0 Closes the reverse shell by closing handles to the pipes \n\ncreated for the shell\u2019s inter-process communication\n\n0XB: Connection test\n \u25a0 Tests receive and send capabilities of the implant by \n\nreceiving data (0x7 bytes) from the control server and \nsending it back\n\n \u25a0 Persistence\n\n \u25a0 Oceansalt has no persistence capabilities to remain on \n\nthe endpoint after the system reboots\n\n \u25a0 This lack suggests other components in the infection \nchain may ensure persistence and carry out other \nmalicious activities\n\nConclusion\n\nBased on our analysis, the McAfee Advanced Threat \nResearch team has named this global threat Operation \nOceansalt. This operation has focused on targets in \nSouth Korea and other countries with new malware that \nhas roots in Comment Crew activity from 2010.\n\nOur research shows that Comment Crew\u2019s malware in \npart lives on in different forms employed by another \nadvanced persistent threat group operating primarily \nagainst South Korea. This research represents how \nthreat actors including nation-states might collaborate \non their campaigns. McAfee continues to monitor the \nthreat landscape in Asia and around the world to track \nthe evolution of known groups and changes to their \ntechniques.\n\n28\n\n\u2018Operation Oceansalt\u2019 Attacks South Korea, U.S., and Canada With Source Code From Chinese Hacker Group\n\n\fREPORT\n\nMcAfee Coverage\n\n \u25a0 Generic.dx!tjz\n\n \u25a0 RDN/Generic.grp\n\n \u25a0 RDN/Generic.ole\n\n \u25a0 RDN/Generic.grp (trojan)\n\n \u25a0 RDN/Trojan-FQBD\n\n \u25a0 RDN/Generic.RP\n\nIndicators of Compromise\n\nMITRE ATT&CK\u2122 Techniques\n \u25a0 Scripting\n\n \u25a0 Spear phishing attachment\n\n \u25a0 Automated collection\n\n \u25a0 Command-line interface\n\n \u25a0 Network share discovery\n\n \u25a0 Process discovery\n\n \u25a0 File and directory discovery\n\n \u25a0 Data from local system\n\n \u25a0 Data from removable media\n\n \u25a0 Data from network shared drive\n\n \u25a0 Exfiltration over control server channel\n\nIP addresses\n \u25a0 158.69.131.78\n\n \u25a0 172.81.132.62\n\n \u25a0 27.102.112.179\n\n \u25a0 211.104.160.196\n\nHashes\n \u25a0 fc121db04067cffbed04d7403c1d222d376fa7ba\n\n \u25a0 832d5e6ebd9808279ee3e59ba4b5b0e884b859a5\n\n \u25a0 be4fbb5a4b32db20a914cad5701f5c7ba51571b7\n\n \u25a0 1f70715e86a2fcc1437926ecfaeadc53ddce41c9\n\n \u25a0 dd3fb2750da3e8fc889cd1611117b02d49cf17f7\n\n \u25a0 583879cfaf735fa446be5bfcbcc9e580bf542c8c\n\n \u25a0 ec9a9d431fd69e23a5b770bf03fe0fb5a21c0c36\n\n \u25a0 d72bc671583801c3c65ac1a96bb75c6026e06a73\n\n \u25a0 e5c6229825f11d5a5749d3f2fe7acbe074cba77c\n\n \u25a0 9fe4bfdd258ecedb676b9de4e23b86b1695c4e1e\n\n \u25a0 281a13ecb674de42f2e8fdaea5e6f46a5436c685\n\n \u25a0 42192bb852d696d55da25b9178536de6365f0e68\n\n \u25a0 12a9faa96ba1be8a73e73be72ef1072096d964fb\n\n \u25a0 0ae167204c841bdfd3600dddf2c9c185b17ac6d4\n\n29\n\n\u2018Operation Oceansalt\u2019 Attacks South Korea, U.S., and Canada With Source Code From Chinese Hacker Group\n\n\fAbout McAfee\n\nMcAfee is the device-to-cloud cybersecurity company. \nInspired by the power of working together, McAfee \ncreates business and consumer solutions that make \nour world a safer place. By building solutions that \nwork with other companies\u2019 products, McAfee helps \nbusinesses orchestrate cyber environments that are \ntruly integrated, where protection, detection, and \ncorrection of threats happen simultaneously and \ncollaboratively. By protecting consumers across all \ntheir devices, McAfee secures their digital lifestyle \nat home and away. By working with other security \nplayers, McAfee is leading the effort to unite against \ncybercriminals for the benefit of all. \n\nwww.mcafee.com.\n\nAbout McAfee Labs and Advanced Threat \nResearch\n\nMcAfee Labs, led by McAfee Advanced Threat \nResearch, is one of the world\u2019s leading sources for \nthreat research, threat intelligence, and cybersecurity \nthought leadership. With data from millions of sensors \nacross key threats vectors\u2014file, web, message, and \nnetwork\u2014 McAfee Labs and McAfee Advanced Threat \nResearch deliver real-time threat intelligence, critical \nanalysis, and expert thinking to improve protection and \nreduce risks. \n\nwww.mcafee.com/us/mcafee-labs.aspx.\n\n2821 Mission College Blvd.\nSanta Clara, CA 95054\n888.847.8766\nwww.mcafee.com\n\nMcAfee and the McAfee logo are trademarks or registered trademarks of McAfee, LLC or its subsidiaries in the US and other countries. \nOther marks and brands may be claimed as the property of others. Copyright \u00a9 2017 McAfee, LLC.  4149_1018\nOCTOBER 2018\n\n30\n\n\u2018Operation Oceansalt\u2019 Attacks South Korea, U.S., and Canada With Source Code From Chinese Hacker Group\n\n\f"], "URLs": [], "weight": 0.0}