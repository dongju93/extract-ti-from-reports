{"rule_id": 565, "name": "Insider_Information", "description": "-", "references": [], "File_Names": ["epochtimes.com", "bowenpress.com", "website.hXXp", "bowenpress.org", "AdobeUpdate20170312.exe", "chinadigitaltimes.net", "theepochtimes.com", "icon_sad.jpg", "ymail.com", "article.asp", "AdobeUpdate20160812.exe", "secureserver.com", "HHBcampus.jpg", "7.jpg", "Stub.dll", "AdobeUpdate20160703.exe", "AdobeUpdate20161201.exe", "8.jpg"], "MD5_Hashes": [], "SHA1_Hashes": [], "SHA256_Hashes": [], "Registry_Entries": ["HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\SvcHost\\EventSystemLog\n\nHKLM\\System\\CurrentControlSet\\Services\\EventSystemLog\n\nHKLM\\System\\CurrentControlSet002\\Services\\EventSystemLog\nHKLM\\System\\CurrentControlSet003\\Services\\EventSystemLog\n\nOnce the DLL has gained persistence it starts the newly created service. When run as part of a service, the DLL unpacks itself and\n\nattempts to download what appears to be a jpg \ufb01le hosted on one of three websites: a Chinese-language news organization, a\n\nUniversity, and a software company.\n\nEach of the 4 samples uses a different URL. Each of these \ufb01les begins with a 631 byte jpg header followed by encrypted\n\nshellcode. The malware \ufb01rst decrypts the payload immediately after the jpg header using the following algorithm:\n\nfor i = 0; i < len(payload); i++ payload[i] = (16 * ~((((payload[i] ^ 0x50) >> 4) ^ i) &\n\n0xf) & 0xef) ^ payload[i]\n\nThe decrypted payload begins with a short header consisting of an unsigned 32 bit integer that is the size of the stage 2 payload, an\n\nunsigned 32 bit integer used as a checksum, and 64 bytes of padding. This header is followed by a block of shellcode and a second\n\nencrypted payload (see Figure 12). The shellcode decrypts the stage 2 payload using RC4 with different 256-bit keys for each\n\nsample.\n\n\fFigure 12: Hex code showing jpg header followed by encrypted shellcode\n\nThis decrypted data contains additional shellcode followed by a PE \ufb01le. We identify the PE \ufb01le as the Netwire RAT. The \ufb01nal stage\n\nshellcode acts as a loader and maps the RAT into memory and resolves the RAT\u2019s imports before jumping to the RAT\u2019s entrypoint.\n\nNetwire RAT is a multi-platform RAT (Remote Access Tool) that \ufb01rst appeared in 2012. Since its appearance, Netwire RAT has\n\nbeen used in a variety of attacks ranging from stealing credit card data to targeted campaigns against health care and banking\n\nsectors. The Netwire samples we analyzed are capable of a wide-range of behavior including:\n\nReading stored usernames and passwords from common apps including:\n\nWeb Browsers\n\nEmail Clients\n\nInstant Messaging Clients\n\nKeylogging\n\nTaking Screenshots\n\nAudio capture\n\nScreen recording\n\nProcess listing, creation, killing, etc.\n\nUploading and downloading \ufb01les\n\nEach of the 4 fake jpg \ufb01les contains a Netwire sample containing different con\ufb01guration settings. After analyzing the samples we\n\nrecovered the con\ufb01guration settings for each sample (see Appendix A). The use of multiple layers of packed or obfuscated\n\npayloads is likely an attempt to evade detection and analysis. Downloading the RAT each time the malware runs could be an\n\nattempt to hide the \ufb01nal payload, as the Netwire samples are never written to disk. This process makes direct analysis dif\ufb01cult\n\nwithout memory images or an understanding of the payload decryption and shellcode routines to decrypt the RAT manually. Using\n\n\fdifferent con\ufb01gurations for each sample could be an attempt to use speci\ufb01c domains tailored to each target, or to allow for the use\n\nof multiple domains as fallbacks in case previously used domains are discovered and blocked.\n\nEach of the four binary samples we analyzed downloaded a copy of the Netwire RAT as a different \u201cjpg\u201d \ufb01le. The three hosts used\n\nare all legitimate servers with active web pages. In each case, the jpg downloaded by the malware is noticeably larger than other\n\n\ufb01les in the same directory on the server and was last modi\ufb01ed more recently. We believe that each of the three servers used to host\n\nthe \u201cjpg\u201d \ufb01les have been compromised and that the operator is using these legitimate servers to host their payload in an effort to\n\nhide their activities.\n\nLike the phishing operation, the malware setup shows a signi\ufb01cant level of effort. We observe custom shellcode paired with an\n\nadditional step of using likely-compromised servers to host the payload. While Netwire has been seen in some targeted intrusions, it\n\nhas primarily been used in cybercrime activities and is not common in Asia.\n\nBowen Press Lures\n\nThe earliest domains registered by the operators that follow the pattern of mimicking China related news organizations were decoys\n\nfor Bowen Press. The real Bowen Press domain is bowenpress[.]com, the operators registered bowenpress[.]org. We were\n\nunable to retrieve the content that originally appeared on the domains in 2015. However, we were able to \ufb01nd copied Bowen Press\n\ncontent on the malware server through Google searches on the \u201cnews\u201d subdirectory of the server. The content was an iframe of the\n\nfront page of Bowen Press and results in rendering additional error messages (See Figure 13). The existence of Bowen Press\n\ncontent on this server suggests that the operators may have been using Bowen Press lures to serve malware.\n\nFigure 13: Comparison of real and fake Bowen Press webpages\n\nAdditionally,we found the Netwire samples in a directory under the URL www.bowenpress[.]org/Adobe/update, even though\n\nthe website serving the sample was a copy of HK01. The use of this URL path further suggests that the fake Bowen Press domain\n\nand content were used to serve malware at some point. The operators may have simply reused the domain for the HK01 related\n\ncampaign.\n\nOn March 15, 2017, the front page of the malware server was changed to a copy of the Bowen Press website that mirrored content\n\nfrom the same day (see Figure 14). The copied page did not contain any malicious code and we were unable to \ufb01nd a log.txt \ufb01le\n\non the server.\n\n\fFigure 14: Screenshot of the malware server on March 15 2017 showing copied content from Bowen Press.\n\nThe only change to the content of the page was the removal of a bot check supplied by WordFence, a security plugin for the\n\nWordPress blogging platform. On March 21, the content was removed and the server returned a blank page.\n\nWe cannot con\ufb01rm what was the purpose of the recently copied Bowen Press content. However, it shows that the operators have\n\nhad a continued interest in using Bowen Press content as lures potentially to serve malware.\n\nPart 3: Campaign Connections\n\nThis section links infrastructure used in the campaign against the Chinese-language news sites to previous malware campaigns\n\ntargeting a Tibetan Radio Station and the Thai government. It also highlights connections between certi\ufb01cate information used to\n\nsign the Netwire samples we analyzed and malware used in campaigns targeting gaming companies.\n\nInfrastructure Connections to Malware Operations against\nTibetan Radio Station\n\nDomain registration information for some of the infrastructure used in the campaign have links to earlier targeted malware\n\noperations against civil society and government groups in Asia.\n\nThe WHOIS records for the domains used in the phishing and malware operations include the phone number (12126881188).\n\nSearching other WHOIS records for this number reveals a known command and control server with a Tibet theme. The WHOIS\n\ninformation for this domain matches all the \ufb01elds with the exception of the email address. All other \ufb01elds used match including the\n\nsame address and misspelling of United States as \u2018Uniter States\u2019.\n\nDomain: www.tibetonline[.]info\nName: free tibet\n\nMailing Address: Uniter states, Phoenix Arizona 86303 US\n\nPhone: +1.2126881188\nEmail: rooterit@outlook.com (admin)\n\nfightfortibet@ymail.com (billing)\n\nThe registrant e-mail is linked to another domain in addition to tibetonline[.]info which is rooter[.]tk. Both these\n\ndomains are linked to a 2013 campaign targeting Voice of Tibet, an independent radio station reporting on Tibetan issues. In this\n\n\fcampaign, the two domains were reported by ThreatConnect as being used as a command and control server (rooter[.]tk) and\n\nhosting an Adobe Flash heap spray vulnerability (tibetonline[.]info) as well as an IE exploit (CVE-2013-1347).\n\nInfrastructure Connections to Malware Operations against Thai\nGovernment\n\nThe domain tibetonline[.]info was also identi\ufb01ed by Palo Alto Networks as a command and control server used for FFRAT\n\nmalware recently described by Cylance. This infrastructure overlapped with servers used by a threat actor targeting Thai\n\ngovernment entities with the Bookworm trojan in 2015. The general tactics, techniques, and procedures used by this threat actor\n\nalso show similarities to the campaign we analysed. Both used the same hosting provider on one IP: Cloudie HK\n\n\u00a0(103.226.127[.]47), and used fake Adobe updates to lure targets into installing malware. The threat actor documented by Palo\n\nAlto also used fake news site domains \u00a0(e.g., vancouversun[.]us, yomiuri[.]us, voanews[.]hk, and nhknews[.]hk)\n\n\u00a0Finally, both operations leveraged compromised web servers for command and control.\n\nCerti\ufb01cate Connections to Malware Targeting Gaming\nCompanies\n\nIn October 2016 Cylance disclosed information on a threat actor called \u201cPassCV\u201d, which targeted the gaming industry and used\n\nstolen code signing certi\ufb01cates to sign malware.\n\nThe disclosure was an update to information published by Symantec in July 2014 and Kaspersky\u2019s 2013 view into Winnti.\n\nCylance lists three malware samples signed with one of the same certi\ufb01cates used to sign one of the Netwire dropper \ufb01les in the\n\noperation we report on:\n\n57 BE 1A 00 D2 E5 9B DB D1 95 24 AA A1 7E D9 3B\n\nIn addition, Cylance also notes the discovery of Netwire being used in the same campaign. The use of Netwire is notable as it is the\n\nonly other mention of it being used in Chinese-nexus malware operations of which we are aware.\n\nThe disclosure was an update to information published by Symantec in July 2014 and Kaspersky\u2019s 2013 view into Winnti.\n\nExplaining the Connections\n\nThese overlaps point to a number of potential scenarios. The campaign we analyzed may have been conducted by the same threat\n\nactors as the previous operations. Alternatively the overlap may be an artifact of resource sharing between separate but unrelated\n\nthreat actors \u2014 potentially through the use of a \u201cdigital quartermaster\u201d (a group that supplies operators with malware and other\n\nresources), or more informal means. While the \ufb01rst scenario is possible, we do not have enough information to fully substantiate it.\n\nWe suspect that at the least there is some level of sharing and reuse of infrastructure by the same operator or group of operators.\n\nThe targets in most of these other campaigns (ethnic minority groups, government in Southeast Asia, and news sites reporting on\n\nChina) generally fall into the geopolitical interests and strategic concerns of the government of China. However, we have insuf\ufb01cient\n\ninformation to conclusively attribute the campaign to a speci\ufb01c threat actor or state sponsor.\n\nPart 4: Discussion and Conclusion\n\nThis section summarizes the characteristics of the campaign and how it re\ufb02ects wider information security challenges for news\n\norganizations and journalism.\n\nA Patient and Persistent Operator\n\nWhile the tactics used in these campaigns are technically simple, the operators demonstrate patience and persistence. They have\n\nbeen using content and domains mimicking Chinese-language news sites as lures since at least 2015, and appear to carefully\n\nmove from one target to another. The phishing campaign against China Digital Times was stood up and taken down in the span of\n\n20 days. In this period, the operators scanned the CDT site for vulnerabilities, registered a lookalike domain, created a fake CDT\n\ndecoy site, and sent the group a wave of customized phishing emails. When these efforts were not successful the operators quickly\n\nshut down the campaign and moved on to new targeting. The malware operation also showed efforts to bypass detection and\n\nanalysis. The operators combined obfuscated, packed executables and custom shellcode with an additional step of using\n\ncompromised servers to host the payload.\n\n\fThe news sites used for lures and targeting in the operation all report on topics seen as politically sensitive by the government of\n\nChina, and follow a general pattern of news organizations reporting on China being targeted by digital espionage. While there are\n\nconnections between these targets and the geopolitical concerns of the Chinese government we cannot conclusively attribute this\n\noperation to a state sponsor. What we can clearly determine is that this operation was conducted by a threat actor active for at least\n\n2 years that targets Chinese language news organizations with intrusion attempts and appears to carefully move from target to\n\ntarget.\n\nInformation Security Challenges for Journalism\n\nThis campaign re\ufb02ects general information security challenges for news organizations and journalists. Journalists operate in high-\n\npaced environments under intense time pressures. As part of their practice, they regularly receive information from unknown\n\nsources in a variety of media (e.g., social media, email, chat messages, etc). Gathering sources and material requires journalists to\n\nbe open and accessible online. Journalists also may handle sensitive information and contacts. Ideally, information security should\n\nbe part of their standard work process, but information security is but one consideration out of many other competing priorities.\n\nJournalists and management may not have the same level of awareness or concern for information security threats. \u00a0Bridging these\n\ngaps, balancing con\ufb02icting necessities for openness, availability, and security all within a resource-constrained environment are\n\nmajor challenges. Nonetheless, information security needs to be addressed.\n\nThe case we analyzed (and many others like it) shows journalists and news groups are being targeted by digital espionage\n\noperations designed to access con\ufb01dential information and systems. The threat is not only against journalists reporting on China.\n\nPrevious research has found digital espionage operations targeting journalists reporting on the \u00a0Middle East, Latin America, Russia,\n\nand elsewhere. \u00a0More work is needed to understand the nature of the threats and ways to mitigate them that are sensitive to the\n\npracticalities and realities of journalism.\n\nAcknowledgements\n\nWe are grateful to China Digital Times, Epoch Times, Bowen Press, and HK01 for their participation.\n\nThanks to our colleagues for review and assistance: John Scott-Railton, Lotus Ruan, Jeffrey Knockel, Lokman Tsui, Valkyrie-X\n\nSecurity Research Group, Andrew Hilts, Ron Deibert, and TNG.\n\nThis project was supported by the John T. and Catherine D. MacArthur Foundation.\n\nAppendix A: Malware Con\ufb01guration Settings\n\nFile name: 7.jpg\n\nConnectionString: email23.secuerserver[.]com:443;\nProxyString: -\n\nPassword: Password\n\nHostId: HostId-%Rand%\nMutex: -\n\nInstallPath: -\n\nStartupKeyName1: -\nStartupKeyName2: -\n\nKeyLoggerFilePath: -\n\nBoolSettingsByte: 000\n\nConnectionType: 000\n\nFile name: 8.jpg\n\nConnectionString: hk.secuerserver[.]com:443;\nProxyString: -\n\nPassword: Password\n\nHostId: HostId-%Rand%\nMutex: -\n\nInstallPath: -\n\nStartupKeyName1: -\n\nStartupKeyName2: -\nKeyLoggerFilePath: -\n\nBoolSettingsByte: 000\n\nConnectionType: 001\n\n\fFile name: HHBcampus.jpg\n\nConnectionString: HK.SECUERSERVER[.]COM:443;\n\nProxyString: -\n\nPassword: Password\nHostId: HostId-%Rand%\n\nMutex: -\n\nInstallPath: -\nStartupKeyName1: -\n\nStartupKeyName2: -\n\nKeyLoggerFilePath: -\nBoolSettingsByte: 000\n\nConnectionType: 001\n\nFilename: icon_sad.jpg\nConnectionString: dns.bowenpress[.]org:443;\n\nProxyString: -\n\nPassword: Password\nHostId: HostId-%Rand%\n\nMutex: -\n\nInstallPath: -\nStartupKeyName1: -\n\nStartupKeyName2: -\n\nKeyLoggerFilePath: -\n\nBoolSettingsByte: 000\nConnectionType: 001\n\nAppendix B: Indicators Of Compromise\n\nIndicators of compromise for this report can be found on our github page.\n\nContact \u00a0|\u00a0 RSS \n\n\f"], "URLs": [], "weight": 0.0}