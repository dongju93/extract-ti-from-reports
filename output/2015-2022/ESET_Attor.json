{"rule_id": 459, "name": "ESET_Attor", "description": "-", "references": [], "File_Names": ["SRanxx64.dll", "SRSfxu.dlll", "WAND.bin", "SRnhmx64.dll", "ARMcclx64.dll", "sRWobwax64.dll", "usp10.dll", "SRSfxux64.dll", "sRWobwa.dll", "SRzsp.dll", "Yandex.Mail", "ARMccl.dll", "SRhhzx64.dll", "oledboz.dll", "SRanx.dll", "SRhhz.dll", "SRnhm.dll", "SRSfxu.dll", "SRzspx64.dll", "odbccfg32.dll"], "MD5_Hashes": ["9EF725BA7881049E72F7A92C924403B0"], "SHA1_Hashes": ["bd2845b2e7178da92c9014d0e8921b7efba5a924", "8a6829b8615c5f6661a84ea3af0e15ab28c5840c", "472eef198c8da7ea233d3f21393f5823968a8a0e", "02631dedb28c8d704ba689fc9efae057d2e8c8de", "6DEC7C66CB5E6F86CDDBE313B604603731C78E20", "e7371badae22c0ed0d93de2f1393c3e47dcee2d0", "53c7232e00445fde63e7f7d75f6eecdb8a8a830e", "921e237b7e7c9945fb7cf5dd8960548a99896555", "b194b2cdae26f5c65d62fe8f0204d1e80cd7a41f", "a922558735227abe61754b02a6917a1aed18358a", "e64af8db5b6ccd076327a7c58c59e73eeb90be9b", "d1ca68eee49a4d25072855ebecc79d31f92efb2e", "52213cab4954c850a1ac51974a24b878ca88eb59", "f7e30a3fa186361794699d7a4fac6a9b85ccbf40", "c3d7391863838fbbd88660392d114ab7536ca373", "09d220b7da92a177d03eb6ca6711c500fe34667b", "6dec7c66cb5e6f86cddbe313b604603731c78e20", "b7f1f151c3206e823fcaefcd0dab963be4efeb2f", "7b1e48154b93b6b374dd35bf821b2670ad1d0f69", "a8112bd5e7dd78161c8b77638826c7cfc730f95f", "37a1138f9ef575d3b7fc11d59473aea261be4aef", "47dc997d08d53e55b8450940d9de94e2b5db631e", "9d8126148089646717c84f313fd52c1a9fec2aca", "c2371eb7a01149e87220bc7e62263266ee48be46", "d0528b8777d556809ac64935fa6247164aaabb4f", "87ded0f812ced722e86ff4a4f36bf8217c480388", "16b4c4da770991cc94e763ffec2a3fc418f9dc46", "f9e9c4e45697880d8f601096e9dfc90e46557dcc", "1f69ba8063853dd80953b7881f4df9759a025780", "9E772541AB8C93301F50D1CC942A1954720B8CDA", "6f640e5acd1592424962df781707556f2c02cb17", "5316abf8c4c148ce4d18419bb4e5057cf7535dcf", "3c417b299532e62844869c4e0f33f3d719682f46"], "SHA256_Hashes": ["53427F93B3716DB92511666C379758B5473790FFBB29811C4E8C9607B7CF385F", "BEB05E4C303A65902E57A2C570465BD3993E5BCBB295BCF06AD167997A175247", "AEB1A7C9BF3F61777B8B820C74ED6C62A838A2D5A0B56A2195552CA7713D40FE", "34695948760973CC78077E64576B934344E2525072DB71897F848EF3B823BCDF", "AB783BBF82C9320F376A3D45B3CD402EA2D3AFFE648BBBBA5E9B724520A3627E", "7C7B55DBA50A286B71F86EA5691580287FF0A8C5407D656540EAB3FC96582215", "88EA7F35861891EF7AE62BA541545939B92E85BC24FD59E3B1C2991F99A14E9C"], "Registry_Entries": ["HKEY_CURRENT_USER\\Environment registry key .\n\nIf running in a privileged context, it registers the dispatcher as a service, and installs it to be executed on \neach system start by adding the service name to the netsvcs group .\n\nNotably, Attor also instructs the service to be executed in Safe Mode and Safe Mode with Networking . \n\nThis is achieved by creating a subkey for the malicious service under the SafeBoot registry keys:\n\n\u2022 HKEY_LOCAL_MACHINE\\SYSTEM\\*ControlSet*\\Control\\SafeBoot\\Minimal\n\n\u2022 HKEY_LOCAL_MACHINE\\SYSTEM\\*ControlSet*\\Control\\SafeBoot\\Network\n\nAttor then sets the default value of these subkeys to Service, to indicate the malicious service should \nbe loaded during a safe mode boot .\n\nNote: In the provided registry keys, *ControlSet* represents all registry subkeys with the \u201cControlSet\u201d substring in \n\ntheir names, e.g. ControlSet001 or CurrentControlSet.\n\n3.2  Collection and exfiltration\n\nSeveral plugins provide espionage capabilities; we refer to them as the Device monitor, \n\nScreengrabber, Audio recorder and Key/clipboard logger plugins . These plugins store the collected \n\ndata and log files in a central Upload folder .\n\nThese plugins do not communicate with the C&C server themselves . Instead, it is the File uploader \n\nplugin that automatically uploads these files to the C&C server .\n\nThe main module monitors if there is enough space on the disk where the Upload folder is located \u2013 if \n\nnot, the plugins do not proceed with creating additional files, in order to avoid suspicion by the user .\n\n3.3  Network communication\n\nThere are only two Attor components that communicate with the C&C server: the aforementioned File \n\nuploader, and the Command dispatcher that downloads commands and additional tools from the \n\nC&C server .\n\nBoth plugins use FTP; files are uploaded to/downloaded from an FTP server that is protected by \n\ncredentials hardcoded in the configuration . Passive FTP mode is used, where the client initiates both \n\nconnections to the server .\n\nThe malware uses the Tor: Onion Service Protocol, with the C&C server having a  .onion address, so the \n\ncommunication must be enabled by a Tor client plugin and relayed using a SOCKS proxy plugin . In \n\norder to communicate with the C&C server, any plugin must first establish a connection with the Tor \n\nclient (listening on the non-default localhost:8045) which is responsible for resolving the onion domain, \n\nchoosing a circuit and encrypting data in layers .\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f6\n\nThe Tor client plugin must communicate with the dispatcher, which implements the cryptographic \n\nfunctions . Furthermore, it communicates with the SOCKS proxy (listening on localhost:5153) that relays \n\nthe communication between the Tor client and the remote server .\n\nIn total, the infrastructure for C&C communication spans four Attor components \u2013 the dispatcher \n\nproviding encryption functions, and three plugins implementing the FTP protocol, the Tor functionality \n\nand the actual network communication . This mechanism is illustrated in Figure 4 .\n\nFTP\n\nID 0x06\nSOCKS proxy\n\n127.0.0.1:5153\n\nSOCKS\n\nID 0x0D \nTor client\n\n127.0.0.1:8045\n\nUploads \ndata\n\nDownloads \ncommands\n\nID 0x05\nFile uploader\n\nUses \nfunctions\n\nID 0x06\nCommand dispatcher\n\nUses \nfunctions\n\nUses \nfunctions\n\nID 0x00\nDispatcher\n\nProxy for Windows API \nand cryptographic functions\n\nFigure 4 // Four Attor components cooperate to enable communication with the C&C server\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f7\n\n4  TECHNICAL ANALYSIS\n\nIn this section, we will provide technical details about the respective Attor components .\n\n4.1  Dispatcher\n\nThe dispatcher, which is a dynamic-link library, is a central unit of the platform . Its name usually starts \nwith letters \u201cSR\u201d, followed by some random letters . Dispatcher names we have seen include SRnhm.dll, \nSRSfxu.dll, SRzsp.dll, SRhhz.dll, SRanx.dll and sRWobwa.dll . For 64-bit versions, the \u201cx64\u201d \nsuffix is added to the name, e .g ., SRzspx64.dll .\n\nThe dispatcher contains encrypted configuration data with:\n\n\u2022  Paths to working folders (Upload folder, Plugin folder, Update folder, Resource folder)\n\n\u2022  FTP server domain and credentials (for C&C and exfiltration)\n\n\u2022  RSA public key\n\n\u2022  Name of the service under which the malware should be installed\n\nOther components retrieve the configuration data from the dispatcher via a designated interface .\n\nThe dispatcher injects itself into all processes (except some system processes and some processes \n\nbelonging to Symantec products) . Subsequently, it loads all plugins from the Plugin folder (location of \n\nwhich is determined by the configuration) .\n\nThe plugins then use functions implemented by the dispatcher, a reference to which is passed to the \n\nplugins on load . \n\nThere are both 32-bit and 64-bit versions of the main Attor dispatcher DLL . On 64-bit systems, both are \n\nloaded, which ensures the malware can inject itself into both 32-bit and 64-bit processes and monitor \n\nthem (e .g ., by taking screenshots and collecting keystrokes) .\n\n4.1.1  Encryption methods\n\nStrings in the malware components are protected by an XOR cipher with a hardcoded key2 .\n\nThe configuration data (which is embedded in the main module), as well as the backdoor commands, \n\nare protected by a hybrid encryption scheme, where data is encrypted symmetrically using Blowfish and \n\nprepended with an RSA-encrypted Blowfish key .\n\nThe Blowfish cipher is used in OFB mode, with a 16-byte key randomly generated for each message . The \n\npublic RSA key2 used for encrypting the Blowfish key is embedded in the main module .\n\nEncryption and decryption methods are implemented by the main module, but are also used by the \n\nloadable plugins via the interface provided by the main module (see Section 4 .1 .3) . Attor\u2019s plugins use the \n\nsame encryption scheme for encrypting the collected data .\n\n4.1.2  Evasion techniques\n\nAttor has implemented measures to detect whether it is being executed in an analytical environment . It \n\nterminates itself if an emulator or virtual machine is detected .\n\nTo detect (some) emulators, Attor performs two similar tests:\n\n\u2022  It creates a randomly-named event, and then queries the event name via the NtQueryObject API \n\nfunction .\n\n\u2022  It opens the HKEY_LOCAL_MACHINE\\SYSTEM registry key and then queries its name by passing the key \n\nhandle to the same API function .\n\n2  See the IoCs section for the extracted keys\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f8\n\nIf there is a mismatch in the names in any of these cases, Attor assumes the presence of an emulator \n\nand exits .\n\nTo detect virtual machines, Attor utilizes the following methods for detecting VMware, VirtualBox and \n\nVirtual PC:\n\n\u2022  It calls the sldt instruction, which stores the address of the Local Descriptor Table in a register; the \naddress should be zero on native systems and non-zero in VMware . This is illustrated in Figure 5a .\n\n\u2022  It executes an undefined instruction vpcext that is valid in Virtual PC and VirtualBox environments, \nbut will generate an exception if executed in a native environment . This is illustrated in Figure 5b .\n\n\u2022  It attempts to retrieve the VMware version by communicating with I/O ports, using the in \n\ninstruction . If called in a VMware environment with the parameters seen in Figure 5c, the magic value \nVMXh is returned as the result .\n\n\u2022  It tries to read from the \\\\.\\VBoxMiniRdrDN pseudo-device, to discover whether it is running in \n\nVirtualBox . This is illustrated in Figure 5d .\n\nFigure 5 // Attor employs several techniques to detect specific virtual environments\n\nFurthermore, Attor uses other techniques to avoid detection:\n\n\u2022  Network communication plugins are injected into applications such as web browsers or IM \n\napplications, in order to blend in with legitimate network traffic .\n\n\u2022  To prevent suspicion, whenever Attor manipulates a file or a registry key, it then restores the original \n\nvalues of their last access time .\n\n\u2022  All files created by Attor have the hidden, system and archive attributes set in order to be hidden from \n\nWindows Explorer by default .\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f9\n\n4.1.3  Interface for plugins\n\nAttor\u2019s plugins use functions implemented by the main module, which makes them harder to detect and \n\nanalyze, because they call functions of the dispatcher instead of Windows API functions .\n\nThe functions are called using the function dispatcher, which takes as its arguments the function type \n\nand its numerical identifier . Figure 6 illustrates a part of one plugin, calling the function dispatcher on \n\nseveral occasions . In the disassembly on the right, we replaced the numeric identifiers with descriptive \n\nnames, that we recovered by reverse-engineering the dispatcher .\n\nA reference to the function dispatcher is passed to the plugin on load . Since the plugins are loaded into \n\nthe same process as the dispatcher, they share the same address space, and thus the plugins can call the \n\nfunctions of the dispatcher DLL directly . This design makes it harder to analyze individual components of \n\nAttor without access to the dispatcher, which translates the specified identifier to a meaningful function \n\nthat is then executed .\n\nFigure 6 // Additional plugins use functions implemented in the main module, \nby calling the function dispatcher (dubbed helperFnc here)\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f10\n\nAccording to our analysis, the dispatcher implements three to four dozen functions, depending on the \n\ndispatcher version (new functions are included in the newer samples) . Table 1 lists functions recovered \n\nacross all samples examined .\n\nTable 1 // The interface provided by the dispatcher DLLs\n\nFunction type\n\nFunction ID\n\nFunctionality\n\n1 (resource \nmanipulation \nfunctions)\n\n2 (cryptographic \nprimitives)\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n14\n\n15\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n14\n\nNtCreateFile wrapper\n\nNtClose wrapper\n\nSetFilePointer wrapper\n\nNtFlushBuffersFile wrapper\n\nChange file attributes\n\nNtReadFile wrapper\n\nNtWriteFile wrapper\n\nCreate and close a file\n\nCreate a session event\n\nCreate a mutex\n\nFind first file\n\nFind next file\n\nRelease all resources used by an unowned critical section object\n\nDelete a file\n\nNtOpenEvent wrapper\n\nFree a memory block\n\nFree a memory block and overwrite it with null bytes\n\nGenerate a new Blowfish key and initialize the encryption routine\n\nOverwrite the Blowfish key with null bytes\n\nEncrypt the Blowfish key with RSA\n\nEncrypt/decrypt data with a previously initialized Blowfish key, in OFB mode\n\nHybrid decryption \u2013 decrypt the RSA-encrypted Blowfish key and then decrypt \nthe Blowfish-encrypted data\n\nGenerate an RSA key\n\nHash data (SHA-1 or MD5)\n\nHash data \u2013 init part (SHA-1 or MD5)\n\nOverwrite a memory block with null bytes\n\nHash data \u2013 update part (SHA-1 or MD5)\n\nHash data \u2013 final part (SHA-1 or MD5)\n\nHybrid encryption \u2013 generate a Blowfish key, encrypt it with RSA and then \nencrypt the data with Blowfish in OFB mode\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f11\n\nFunction type\n\nFunction ID\n\nFunctionality\n\n3 (retrieving \nconfiguration \ndata and global \nvariables)\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n14\n\nGet path to the Upload folder (from the config)\n\nGet path to the Update folder (from the config)\n\nGet path to the Plugin folder (from the config)\n\nGet path to the Resource folder (from the config)\n\nGet 16 hardcoded bytes\n\nGet attributes of ntdll .dll file (to be used for forging file timestamps)\n\nChange file timestamps to those of ntdll .dll file\n\nCheck if there is enough space on disk\n\nGet FTP directory name (from the config)\n\nGet user ID (from the config)\n\nGet structure with global variables and configuration data\n\nGet user security descriptor\n\nGet the specified config field\n\nResolve import\n\n4.2  Shared resources\n\nInstrumental for synchronization between the main module and plugins is a set of four central folders, \n\nwhere various resources are stored .\n\nThe precise locations are hardcoded in Attor\u2019s configuration; most often we have seen the patterns in \n\nTable 2 used for naming these folders (x represents a variable lower-case letter) .\n\nTable 2 // Naming convention for the folders\n\nFolder type\n\nNaming pattern\n\nPlugin folder\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\sxx\n\nUpdate folder\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\vxx\n\nResource folder\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\kxx\n\nUpload folder\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\dxx\n\n4.2.1  Plugin folder, Update folder\n\nAll plugins are permanently stored \u2013 compressed and encrypted \u2013 in the Plugin folder . The dispatcher \n\nloads plugins from this folder on each execution .\n\nThe Update folder serves as a temporary store for additional files the attacker wants to execute on the \n\ncompromised machine . The files get pushed to this folder via the Command dispatcher plugin; once the \n\ndispatcher recognizes a DLL in the Update folder, it loads it automatically, and deletes it afterwards . \n\nAccording to the artifacts in the dispatcher, the thread responsible for this functionality is called \nUpdate_th; thus, we believe this mechanism most likely is used for updating Attor\u2019s components .\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f12\n\n4.2.2  Upload folder\n\nThe Upload folder is used, by the plugins tasked with collection, as a central folder to store collected \n\ndata, and by other plugins to store log files .\n\nThe File uploader plugin automatically uploads these files to the C&C server . Each file contains control \ndata including plugin ID, file creation timestamp and a control flag 3ff3 and is encrypted using \nBlowfish-OFB combined with RSA . The hidden, system and archive attributes of the log files are set; the \n\nlast access time is faked .\n\nRSA encryption\n\nRandom 16-byte Blow\ufb01sh key\n\nBlow\ufb01sh-OFB encryption\n\nTimestamp\n\n\u201c3ff3\u201d \ufb02ag\n\nPlugin ID\n\nData\n\nFigure 7 // Hybrid encryption scheme used by Attor\n\nAdditionally, index files are used to keep track of log files \u2013 they store the number of log files of a certain \n\ngroup, and the counter values are then used to name the log files .\n\nPlugins usually store data in subdirectories of the Upload folder named by the plugin ID .\n\nFilenames are derived from user names, collected data (such as clipboard contents or device \n\ninformation), timestamp or counter value, and are mostly hexadecimal values .\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f13\n\nTable 3 // The properties of the files in the Upload folder\n\nFilename pattern\n\nPlugin ID\n\nFile content\n\n1.<device-hash>\\nm\\index.dat\n\n1.<device-hash>\\<counter><data-hash>\n\n1.<device-hash>\\<counter><data-hash><data-hash>\n\n1.<com-device-hash>\\nm\\index.dat\n\n1.<com-device-hash>\\<counter><data-hash>\n\n2.<user-name-hash>\\nm\\index.dat\n\n2.<user-name-hash>\\<counter><data-hash>\n\n7\\nm\\info\n\n7\\nm\\index.dat\n\n7\\<counter><data-hash>\n\nnm\\0_skp_<user-name>\\index.dat\n\n0_skp_<variable-data>\n\n1\n\n1\n\n1\n\n1\n\n1\n\n2\n\n2\n\n7\n\n7\n\n7\n\n3\n\n3\n\nIndex file for storage device metadata\n\nStorage device information (bus type, device type, total disk \nsize, TrueCrypt version . . .)\n\nInformation about documents stored on the device (name, \nsize, creation & last modified time)\n\nIndex file for COM device metadata\n\nCOM device information (information about the phone/\nmodem, information about the subscriber)\n\nIndex file for screenshots\n\nScreenshot file\n\nHash of last-stored clipboard data\n\nIndex file for keylog/clipboard files\n\nKeylog/clipboard data\n\nIndex file for audio recordings\n\nAudio recording file\n\nNote: We only analyzed the older version of the plugin with ID 0x03. The file paths may be slightly different in the \n\nnewer version, i.e., the one with the modern architecture.\n\n4.2.3  Resource folder\n\nThis folder is used by all plugins to store miscellaneous resources that are not to be exfiltrated to the \n\nC&C server, such as scripts, timestamps or temporary files .\n\n4.3  Plugins\n\nAttor\u2019s architecture allows customization for individual targets, where the functionality of the platform \n\nrelies heavily on plugins deployed on the compromised machine . \n\nThe plugins are implemented as DLLs, loaded by the dispatcher . They are stored on the disk in a \n\ncompressed and encrypted form, with the valid form of the DLL only being recovered in memory, when \n\nthe dispatcher loads the plugin . This probably is an attempt to thwart detection, as the plugin DLLs are \n\nnever present unencrypted on disk .\n\nAll plugins export the same set of functions: DllCanUnloadNow, DllGetClassObject, \nDllRegisterServer, DllUnregisterServer, DllEntryPoint . When the dispatcher loads a plugin \n(DllEntryPoint), a start event is created, and several threads with the payload are started, which all \nwait until the event is signaled .\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f14\n\nFigure 8 // DllGetClassObject export of a plugin that is responsible for initialization and starting the actual payload\n\nThe plugins are activated by the main DLL calling the DllGetClassObject export (see Figure 8) with \nthe following actions happening:\n\n\u2022  The main DLL passes a reference to the helper function of the dispatcher, which the plugin will use for \n\nretrieving configuration data, for file manipulation, for encryption/decryption\u2026\n\n\u2022  The start event is signaled, which activates the threads\n\n\u2022  The plugin returns the plugin ID and version, so that the main DLL can keep track of the active \n\nmodules\n\nThe version information of plugins recovered in the course of our investigation, along with the plugins\u2019 \n\nfunctionality, is listed in Table 4 .\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f15\n\nTable 4 // The analyzed plugins and their versions\n\nPlugin ID\n\nAnalyzed versions\n\nFunctionality\n\n0x01\n\n0x02\n\n0x03\n\n0x05\n\n0x06\n\n0x07\n\n0x0D\n\n0x10\n\n0x0E\n\nDevice monitor\n\n(no version), 0x0C\n\nScreengrabber\n\n(no version), 0x08, 0x09, 0x0B, 0x0C\n\nAudio recorder\n\n0x0A\n\n0x0A\n\nFile uploader\n\nCommand dispatcher/SOCKS proxy\n\n0x02, 0x04, 0x09, 0x0A\n\nKey/clipboard logger\n\n0x03\n\n0x01\n\nTor client\n\nInstaller/watchdog\n\nNote that if the numbering is continuous (which it might be, since 0x10 is the last we have seen and is \n\nonly version 1, while e .g ., 0x03 is now on version 0x0C), there may be additional plugins available that \n\nwe haven\u2019t seen . \n\nWe only can guess what functionality those plugins unknown to us might have . If we are to speculate, \n\nwe feel that missing is a remote shell functionality, and also functionality to exfiltrate specific files \n\nsilently; there may also be more victim-specific plugins available .\n\n4.3.1  Device monitor (ID 0x01)\n\nThe most curious plugin in Attor\u2019s arsenal collects information about connected modem/phone devices \n\nand connected storage drives, and about files present on these drives . It is responsible for collection of \n\nmetadata, not the files themselves, so we consider it a plugin used for device fingerprinting, used as a \n\nbase for further data theft . \n\nThe Device monitor plugin creates a new window and uses SHChangeNotifyRegister API to register \nShell-level notifications for that window on storage media insertion/removal, with a custom window \nmessage 0x421 . The window procedure handles these events, and WM_DEVICECHANGE message, and \ncollects a specific set of information for either a modem or a phone device, or an external storage drive .\n\n1.  External storage drive\n\nIn case a hard disk device is inserted, Device monitor collects the following information:\n\n\u2022  Bus type, device type, device type modifier, vendor ID, product ID, product revision string, serial \n\nnumber, device interfaces\n\n\u2022  Free space on disk, total disk size, filesystem used\n\n\u2022  If applicable, also TrueCrypt version\n\nThe TrueCrypt version is determined by sending IOCTLs to the TrueCrypt driver (0x222004 \n(TC_IOCTL_GET_DRIVER_VERSION) and 0x72018 (TC_IOCTL_LEGACY_GET_DRIVER_VERSION)) . As \nthese are TrueCrypt-specific control codes, not standard codes, the authors of the malware must have \n\nbeen familiar with the code of the TrueCrypt driver, or TrueCrypt installer . This technique is very rare .\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f16\n\nFigure 9 // Device monitor plugin sends non-standard, TrueCrypt-specific control codes to the TrueCrypt driver, \nin order to determine the TrueCrypt version\n\nFurther, it scans these hard disk devices for specific files and collects information about these files . It \n\ncollects metadata such as filename, file size, creation and last-modified time of documents having the \n\ntarget extensions:  .xls,  .xlsx,  .xlsm,  .doc,  .docx,  .docm,  .ppt, and  .pptx .\n\nThe information gathered by this plugin is stored in separate log files in the Upload folder, in order to be \n\nexfiltrated by another plugin .\n\n2.  GSM/GPRS modem/phone device \n\nThe more unusual functionality of this plugin is the ability to fingerprint GSM devices . Whenever \n\na modem or a phone device is connected to the COM port, Device monitor uses AT commands to \n\ncommunicate with the device, via the associated serial port .\n\nAT commands, also known as Hayes command set, were originally developed in the 1980s to command \n\na modem to dial, hang up or change connection settings . The command set was subsequently extended \n\nto support additional functionality, both standardized and vendor-specific .\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f17\n\nIn a recent paper, it was discovered that the commands are still in use in most modern smartphones . The \n\nresearchers were able to bypass security mechanisms and communicate with the smartphones using AT \n\ncommands through their USB interface . Thousands of commands were recovered and tested, including \n\nthose to send SMS messages, push touch events, or leak sensitive information .\n\nThis research illustrates that the old-school AT commands pose a serious risk when misused .\n\nAs for Attor\u2019s plugin, however, we may only speculate why AT commands are employed . We have \n\ndetected a 64-bit version of this plugin in 2019, and we can confirm it is still a part of the modernized \n\nAttor platform (that we first saw in 2018) . On the other hand, it seems unlikely it is targeting modern \n\nsmartphone devices . The plugin ignores devices connected via a USB port, and only contacts those \n\nconnected via a serial port (more precisely, devices with \u201cCOM*\u201d in the friendly name) .\n\nA more likely explanation of the plugin\u2019s main motive is that it targets modems and older phones . \n\nAlternatively, it may be used to communicate with some specific devices (used by the victim or target \n\norganization) that are connected to the COM port or to the USB port using a USB-to-serial adaptor . In \n\nthis scenario, it is possible the attackers have learned about the victim\u2019s use of these devices using some \n\nother reconnaissance techniques .\n\nIn any case, the plugin retrieves the following information from the connected devices, using the AT \n\ncommands listed in Table 5:\n\n\u2022  Basic information about the mobile phone or GSM/GPRS modem: name of manufacturer, model \n\nnumber, IMEI number and software version\n\n\u2022  Basic information about the subscriber: MSISDN and IMSI number\n\nTable 5 // The commands of the AT protocol used by the Device monitor plugin\n\nAT command\n\nFunctionality\n\nAT\n\nSignals start of communication (AT for attention) .\n\nAT+MODE=2\n\nPrepares the phone for an extended AT+ command set .\n\nAT+CGSN\n\nRequests IMEI number (International Mobile Equipment Identity), which is a unique number to identify a device .\n\nAT+CGMM\n\nRequests information about the model of the device (model number) .\n\nAT+CGMI\n\nRequests name of the device manufacturer .\n\nAT+CGMR\n\nRequests the version of the software loaded on the device .\n\nAT+CNUM\n\nAT+CIMI\n\nRequests MSISDN (Mobile Station International Subscriber Directory Number), which is the mapping of the telephone \nnumber to the subscriber identity module in a mobile or cellular phone .\n\nRequests IMSI (International Mobile Subscriber Identity), which is a unique number identifying a GSM subscriber . This \nnumber has two parts . The initial part is comprised of six digits in the North American standard and five digits in the \nEuropean standard . It identifies the GSM network operator in a specific country with whom the subscriber holds an \naccount . The second part is allocated by the network operator to uniquely identify the subscriber .\n\nNote that many more (vendor-specific) AT commands exist that are not used by this plugin . It is possible \n\nthat malware operators use the listed commands to fingerprint the connected devices, and then deploy \n\nanother plugin with more-specific commands to extract information from the device .\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f18\n\n4.3.2  Screengrabber (ID 0x02)\n\nThis plugin captures screenshots of targeted applications and stores them encrypted in the Upload \n\nfolder . It is only activated in applications of the attackers\u2019 choice, determined by the process name .\n\nAfter activation, the Screengrabber monitors the application\u2019s foreground window and if it is a web \n\nbrowser with a specific window title, or if it is another from the list of target applications, captures a \n\nscreenshot every 10 seconds . For example, the plugin takes a screenshot if the victim is using an email \n\nclient or has opened an email attachment .\n\nTargeted are mostly web browsers, including all major (Firefox, Opera, Chrome, Safari, Internet Explorer) \n\nand a few less popular (Maxthon, Avant, SeaMonkey) ones . By checking the window title of the web \n\nbrowser, the malware can determine whether the user is visiting a website of interest .\n\nWe have encountered process names and window titles referring to these services:\n\n\u2022  Social networks and blogging platforms (Facebook, Twitter, Google+, Blogger, Livejournal)\n\n\u2022  Email services (Gmail, AOL Mail, Hotmail, Hotbox, Webmail, Yahoo! Mail)\n\n\u2022  Office software (MS Word, Powerpoint, Excel, Visio, Notepad, Notepad++, Wordpad)\n\n\u2022  Archiving utilities (WinRAR, WinZip, Hamster)\n\n\u2022  Cloud storage and file sharing services (Turbobit, Skydrive, RapidShare)\n\n\u2022  Messaging, VoIP applications and web-based messaging services (Skype, Viber, Miranda, Pidgin, QIP, \n\nqutIM)\n\nApart from these widely used applications, the list contains a number of irregularities, which can give us \n\nmore insight about the intended victims .\n\nFor example, having TrueCrypt on the list suggests that the attackers are specifically interested in \n\nprivacy-conscious users . Also targeted are encryption/digital signature utilities, a VPN application (HMA \n\nVPN), secure mail clients (The Bat! and HushMail) and a secure web browser (Dragon) .\n\nFurthermore, the applications on the list show the attackers are targeting Russian-speaking users \u2013 \n\nwhich is also confirmed by the geographical distribution of Attor, as explained in Section 2 . The strings \n\nfrom the list of services targeted by the Screengrabber, that support this claim, are documented \n\nin Table 6 .\n\nTable 6 // Artifacts from Attor\u2019s Screengrabber associated with Russian applications\n\nProcess name/window title substring\n\nContext\n\n\u041e\u0414\u041d\u041e\u041a\u041b\u0410\u0421\u0421\u041d\u0418\u041a\u0418 (transl . Classmates)\n\nRussian social network (Odnoklassniki)\n\nAGENTVKONTAKTE\n\nRussian social network (VKontakte)\n\nWEBMONEY\n\nOnline payment system used in Russia (WebMoney)\n\nMAIL .YANDEX, \u042f\u041d\u0414\u0415\u041a\u0421 .\u041f\u041e\u0427\u0422\u0410 (transl . Yandex .Mail), \nMAIL .RU, POCHTA (transl . Mail), MAGENT\n\nRussian email services (Mail.ru, Yandex.Mail)\n\n\u041f\u0420\u0418\u0413\u041b\u0410\u0428\u0415\u041d\u0418\u0415 \u0414\u0420\u0423\u0416\u0418\u0422\u042c (transl . Friend request)\n\nRussian text\n\n\u0412\u0410\u041c \u0421\u041e\u041e\u0411\u0429\u0415\u041d\u0418\u0415 (transl . Message for you)\n\nRussian text\n\nMULTIFON\n\nQIP, INFIUM\n\nRAMBLER\n\nRussian VoIP service\n\nRussian IM application (QIP)\n\nRussian search engine (Rambler)\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f19\n\nInterestingly, the list of targeted applications contains some services that are now defunct or less \n\npopular than 10 years ago, which may suggest that the Attor platform is much older than we think .\n\n4.3.3  Audio recorder (ID 0x03)\n\nThis plugin creates audio recordings using available microphones and stores them encrypted in the \n\nUpload folder .\n\nThe plugin is only activated if executed within a process of a teleconferencing application, which is \n\ndetermined by comparing the process name against a hardcoded list that includes Skype, Facebook \n\nVideo Calling, Brosix or Cheap VoIP .\n\nThis may indicate the attackers are interested in eavesdropping on online calls .\n\nWith this mechanism, the attackers can also record the victim\u2019s conversations outside of \n\nteleconferencing apps . In this case, running in a process of a teleconferencing application can be an \n\nattempt to stay undetected, as the user is less likely to become suspicious that these applications access \n\nthe microphone device .\n\n4.3.4  File uploader (ID 0x05)\n\nThe File uploader plugin is responsible for exfiltration of collected data and log files to the C&C server . \n\nThe files are uploaded to the C&C server automatically, in batches . Files are uploaded in FTP passive \n\nmode, as binary content, and are deleted from the Upload folder after the exfiltration .\n\nThe C&C server and credentials are hardcoded in the configuration data; these credentials were used in \n\nall the collected plugins:\n\n\u2022  C&C server: \u201cidayqh3zhj5j243t[ .]onion\u201d\n\n\u2022  username: \u201cdo\u201d\n\n\u2022  password: [Redacted]\n\nThe plugin logs in to the FTP server and copies the contents of the upload directory to a directory on the \n\nFTP server hardcoded in the config, creating a subdirectory there, with the victim ID as its name .\n\nIn order to reach out to the C&C server in the Tor network, the File uploader plugin uses other \n\nplugins (0x0D and 0x06) that provide the Tor and SOCKS proxy functionality (see Figure 4 . Network \n\ncommunication .)\n\nThe File uploader plugin is only activated if running within the process of a web browser or an instant \n\nmessaging application or other network applications (this is determined by checking the process name \n\nagainst a hardcoded list) . This trick hides the exfiltration-related network communication in a stream of \n\nlegitimate communication made by that application, and thus reduces the risk of raising any suspicion .\n\n4.3.5  Command dispatcher/SOCKS proxy (ID 0x06)\n\nThis plugin serves two purposes .\n\nFirst, it serves as a SOCKS proxy, used by the Tor client plugin (ID 0x0D) to communicate with the \n\nremote computer . \n\nSecond, it downloads commands from the C&C server and interprets them .\n\nJust as with other plugins involved in C&C communication, Command dispatcher also hides its network \n\ncommunication using the trick described in Section 4 .3 .4 . \n\nThe Command dispatcher plugin communicates with the C&C server via the FTP protocol using the \n\n0x0D plugin (with Tor); the credentials are the same as those used by the File uploader plugin for \n\nexfiltration .\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f20\n\nAfter the communication is established, Command dispatcher downloads a file called WAND.bin from \nthe server, decrypts it (RSA + Blowfish) and parses the commands using the CommandLineToArgW API \nfunction .\n\nThe plugin supports four commands, as listed in Table 7 .\n\nTable 7 // Commands supported by Attor\u2019s Command dispatcher plugin\n\nCommand name\n\nFunctionality\n\nSET\n\nMOVE\n\nDELETE\n\nCOPY\n\nSet the value of an internal variable\n\nRename a local file\n\nDelete a local file\n\nDownload a file from the FTP server to the specified location\n\nOf interest is the COPY command serves as a mechanism for the malware to download additional \n\nresources, namely:\n\n\u2022  New plugins that will be stored in the Plugin folder and loaded by the main module on its next \n\nexecution\n\n\u2022  Updates that will be stored in the Updates folder and immediately loaded and then deleted by the \n\ndispatcher\n\n\u2022  Miscellaneous files that will be stored in the Resource folder\n\n\u2022  New versions of the dispatcher, either 32-bit or 64-bit\n\nCommand dispatcher stores encrypted log data containing status/results of the executed commands in \n\nthe Upload folder, and timestamp of the last time the C&C server was contacted, in the Resource folder .\n\n4.3.6  Key/clipboard logger (ID 0x07)\n\nThis plugin steals clipboard data, and collects keystrokes pressed within the process in which the DLL is \n\ninjected .\n\nDue to the fact the dispatcher injects itself into all running processes, and then loads additional plugins, \n\nthis logger\u2019s DLL will be loaded into all processes as well .\n\nThis plugin scans the content of the clipboard and whenever a change is detected, it stores the data in a \n\nlog file . It is only concerned with user GUI desktop (\u201cWinSta0\u201d) and UNICODE format clipboard data (i .e ., \n\nnot files, objects etc .) .\n\nFor keylogging, this plugin installs a hook function to the window of the current process that has the \nkeyboard focus . To avoid detection, it uses a less common technique: instead of hooking WH_KEYBOARD or \nWH_KEYBOARD_LL, it hooks WH_GETMESSAGE . Whenever the window receives WM_CHAR or WM_KEYDOWN \nmessage, the plugin translates the pressed keystrokes into text .\n\nThe collected clipboard and keyboard data are stored in encrypted files in the Upload folder .\n\n4.3.7  Tor client (ID 0x0D)\n\nThis plugin is based on the Tor client, customized to the design of this malware (tor.exe with added \ninteraction with Attor\u2019s dispatcher) . \n\nIt is responsible for computations, such as choosing a random circuit and providing multilayer \n\nencryption, and for establishing the communication with the Tor network by resolving the onion \n\nhostname . \n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f21\n\nFor the actual network communication, it utilizes the SOCKS proxy implemented by plugin 0x06 .\n\nThe attackers use Tor for C&C communication and exfiltration for anonymity and untraceability . Also, \n\nthe Tor client plugin hides its network communication using the trick described in Section 4 .3 .4 .\n\n4.3.8  Installer/watchdog (ID 0x10)\n\nThis plugin establishes and monitors persistence of the main module . \n\nIt schedules a task that loads the main module with each system start or each user logon (depending on \n\nthe process privileges) . It then continues to monitor whether the task is still scheduled; if not, the plugin \n\nwill reschedule it . \n\nTo run with necessary privileges, the Installer/watchdog plugin is only activated if injected into one of \n\nthe following processes:\n\n\u2022  %system%\\*\n\n\u2022  %windir%\\explorer.exe\n\n\u2022  %windir%\\regedit.exe\n\nTo make the task scheduling functionality stealthier, it doesn\u2019t utilize API calls; instead, it is implemented \nusing the ITaskScheduler COM interface, registered using XML specification .\n\n5  CONCLUSION\n\nAttor is an espionage platform, used for highly targeted attacks, and has flown under the radar \n\nsuccessfully since 2013 . \n\nAttor is professionally written malware with a loadable plugin architecture that can be used to \n\ncustomize the functionality to specific targets . It implements mechanisms for automated data collection \n\nand exfiltration, as well as for pushing additional plugins to the compromised machine .\n\nIts functionality includes an unusual plugin for GSM fingerprinting that utilizes a rarely used AT \n\ncommand set . Attor incorporates Tor with the aim of anonymity and untraceability, and scatters the \n\nnetwork communication functionality among several components, to make analysis rather difficult .\n\nWe were not able to recover the full operation timeline, nor the initial access vector . The versioning \n\ninformation in the plugins suggests there are other plugins that we have not yet seen . However, our \n\nresearch provides a deep insight into the malware, and suggests that it is well worth further tracking of \n\nthe operations of the group behind this malware .\n\n6  INDICATORS OF COMPROMISE (IOCS)\n\nESET detection names\n\nWin32/Attor \n\nWin64/Attor\n\nSHA-1\n\nNote: We only present SHA-1 of older-version plugins, which used a simplified architecture and appeared \n\nunencrypted on disk.\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f22\n\nDropper\n\n47dc997d08d53e55b8450940d9de94e2b5db631e \n\n52213cab4954c850a1ac51974a24b878ca88eb59 \n\n8a6829b8615c5f6661a84ea3af0e15ab28c5840c \n\nd0528b8777d556809ac64935fa6247164aaabb4f \n\nf7e30a3fa186361794699d7a4fac6a9b85ccbf40\n\nDispatcher\n\n1f69ba8063853dd80953b7881f4df9759a025780\n\n37a1138f9ef575d3b7fc11d59473aea261be4aef\n\n3c417b299532e62844869c4e0f33f3d719682f46\n\n53c7232e00445fde63e7f7d75f6eecdb8a8a830e\n\n6dec7c66cb5e6f86cddbe313b604603731c78e20\n\n6f640e5acd1592424962df781707556f2c02cb17\n\n87ded0f812ced722e86ff4a4f36bf8217c480388\n\n9d8126148089646717c84f313fd52c1a9fec2aca\n\na922558735227abe61754b02a6917a1aed18358a\n\nb7f1f151c3206e823fcaefcd0dab963be4efeb2f\n\nd1ca68eee49a4d25072855ebecc79d31f92efb2e\n\ne7371badae22c0ed0d93de2f1393c3e47dcee2d0\n\nScreengrabber plugin\n\n7b1e48154b93b6b374dd35bf821b2670ad1d0f69\n\nAudio recorder plugin\n\n02631dedb28c8d704ba689fc9efae057d2e8c8de\n\n09d220b7da92a177d03eb6ca6711c500fe34667b\n\n16b4c4da770991cc94e763ffec2a3fc418f9dc46\n\n472eef198c8da7ea233d3f21393f5823968a8a0e\n\n921e237b7e7c9945fb7cf5dd8960548a99896555\n\nb194b2cdae26f5c65d62fe8f0204d1e80cd7a41f\n\nbd2845b2e7178da92c9014d0e8921b7efba5a924\n\nc2371eb7a01149e87220bc7e62263266ee48be46\n\nc3d7391863838fbbd88660392d114ab7536ca373\n\ne64af8db5b6ccd076327a7c58c59e73eeb90be9b\n\nf9e9c4e45697880d8f601096e9dfc90e46557dcc\n\nKey/clipboard logger plugin\n\n5316abf8c4c148ce4d18419bb4e5057cf7535dcf\n\na8112bd5e7dd78161c8b77638826c7cfc730f95f\n\nC&C server\n\nidayqh3zhj5j243t[ .]onion\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f23\n\nFile-based indicators\n\nDispatcher filenames\n\nARMccl.dll\n\nARMcclx64.dll\n\nodbccfg32.dll\n\noledboz.dll\n\nSRanx.dll\n\nSRanxx64.dll\n\nSRhhz.dll\n\nSRhhzx64.dll\n\nSRnhm.dll\n\nSRnhmx64.dll\n\nSRSfxu.dlll\n\nSRSfxux64.dll\n\nsRWobwa.dll\n\nsRWobwax64.dll\n\nSRzsp.dll\n\nSRzspx64.dll\n\nPlugin folder paths\n\n%COMMONAPPDATA%\\Lenovo\\ImController\\shared\\US-df\n\n%COMMONAPPDATA%\\Adobe\\Setup\\Replicate\\US-sf\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\sup\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NetFX\\svn\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\sgp\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\ssw\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\ssm \n\n%ALLUSERSPROFILE%\\Sun\\Java\\Java Update\\Caches\\s3x\n\nUpload folder paths\n\n%COMMONAPPDATA%\\Lenovo\\ImController\\shared\\US-vv\n\n%COMMONAPPDATA%\\Adobe\\Setup\\Replicate\\US-nh\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\dmx\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NetFX\\dtr\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\dnf\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\dtl\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\deu \n\n%ALLUSERSPROFILE%\\Sun\\Java\\Java Update\\Caches\\d5l \n\nUpdate folder paths\n\n%COMMONAPPDATA%\\Lenovo\\ImController\\shared\\US-fu\n\n%COMMONAPPDATA%\\Adobe\\Setup\\Replicate\\US-zn\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\vhb\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NetFX\\vau\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\vtt\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\vzu\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f24\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\vwq \n\n%ALLUSERSPROFILE%\\Sun\\Java\\Java Update\\Caches\\v1e\n\nResource folder paths\n\n%COMMONAPPDATA%\\Lenovo\\ImController\\shared\\US-ba\n\n%COMMONAPPDATA%\\Adobe\\Setup\\Replicate\\US-pq\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\knz\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NetFX\\kcw\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\kya\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\kub\n\n%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\kmm \n\n%ALLUSERSPROFILE%\\Sun\\Java\\Java Update\\Caches\\k7f\n\nSynchronization object names\n\nNote: xx represents a byte expressed in hexadecimal notation (a module ID or an object ID)\n\nGlobal\\{6A2B597F-1C2F-4f78-AC94-7E1C8F136B0F}\n\nGlobal\\{3B68B0E9-08C4-4f23-B84C-CD76CCC4D362}\n\nGlobal\\{E5C403BC-555E-4162-8F18-EFF27A6957C1}\n\nGlobal\\{DC006092-9E86-4c20-8601-F643AF574444}\n\nGlobal\\{C4AE71DA-D55C-4a41-9F86-9F97D3CD47D9}\n\nGlobal\\{7D715AC5-B909-4aaf-90C9-882CC4423F8C}\n\nGlobal\\{377142C5-B7BD-42da-A8B3-4CAD9DA53326}\n\nGlobal\\{343D67FA-567D-415e-9FAE-622153EFE241}\n\nGlobal\\{144DB9C5-A3B7-4eab-AD9A-0E80B3FF7853}\n\nGlobal\\{7BD3390E-05C1-43a0-B938-94F52C3F3D32}\n\nGlobal\\Root#SYSTEM#0000#{43850F15-CB8E-4a88-9BA0-F11FB0xxA2xx}\n{770F45C0-D879-4d4d-9F03-3AC9F2CA4ECB}\n\n{69DB17B0-4DA5-43b6-8A63-76B483AE7D5A}\n\n[HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\{A7F7DE86-C5BF-4239-A220-BF7523F5501E}]\n\n[HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\{A8F7DE86-C5BF-4239-A220-BF7523F5501E}]\n\n[HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\{A7E7DE86-C5BF-4239-A220-BF7523F5501E}]\n\n[HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\{A8E7DE86-C5BF-4239-A220-BF7523F5501E}]\n\nService display names\n\nAdobe Acrobat Update v3 .17 .lkws \n\nAdobe Acrobat Update Service v3 .2 .muitnl \n\nMicrosoft  .NET Framework NGEN v3 .5 .10549_X64_86  \n\nMicrosoft  .NET Framework NGEN v4 .0_X64_86 \n\nMicrosoft  .NET Framework NGEN v3 .5 .10549_X64_86  \n\nMicrosoft  .NET Framework NGEN v3 .5 .10549_X64_86  \n\nMicrosoft  .NET Framework NGEN v3 .5 .10549_X64_86\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE \n\f25\n\nCryptographic keys\n\nXOR cipher keys\n\nCE2064368387DE357A3752F5\n\n9EF725BA7881049E72F7A92C924403B0\n\n9E772541AB8C93301F50D1CC942A1954720B8CDA\n\n34695948760973CC78077E64576B934344E2525072DB71897F848EF3B823BCDF\n\n53427F93B3716DB92511666C379758B5473790FFBB29811C4E8C9607B7CF385F\n\n7C7B55DBA50A286B71F86EA5691580287FF0A8C5407D656540EAB3FC96582215\n\n88EA7F35861891EF7AE62BA541545939B92E85BC24FD59E3B1C2991F99A14E9C\n\nAB783BBF82C9320F376A3D45B3CD402EA2D3AFFE648BBBBA5E9B724520A3627E\n\nAEB1A7C9BF3F61777B8B820C74ED6C62A838A2D5A0B56A2195552CA7713D40FE\n\nBEB05E4C303A65902E57A2C570465BD3993E5BCBB295BCF06AD167997A175247\n\nRSA public keys\n\n-----BEGIN PUBLIC KEY-----\n\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAowPQz4fof3j6eFMysdwU\n\ns9fXAiij6dRC4yYFm32OSKaYGFSEJLoln+prl7Dx5YCI7MTYa1aAQtTkWpSTTgsl\n\ntF174pGFl7+ycxbCILAOZiHeCoEmk0463WJaLaNq27nQYSo4tCmdHy8DOH/ZYPwH\n\ncNM/8TsHFJjYsagVgrZXGdjdT78nxDDAORy5ey2Fb6tovVdT5oFGn3fJLcpyRzQK\n\n0QL4/GeLis53IC8tlflGjnChT2R5rbecKk1d4b+AkhawwmOgsCsZJtgh+MpSyVAH\n\nKMqk5F30u7QjsxP50mw4hzDyEPTFgNvtlekQuyYeutU8/45p933tD08jJviqqOpi\n\n8wIDAQAB\n\n-----END PUBLIC KEY-----\n\n-----BEGIN PUBLIC KEY-----\n\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAq+wyxqkGYGSrU6wbMz5y\n\nI2FfwmsFM8MbhU/73LSo/U0TYcecX7CGtT+yi+aG0Bddox4GKFebPYHqnOr0fVaB\n\nFxfjyDx359qgrtfbeGH4qUlVCheHWt890urb8m5SntqGN3m1PniK5u7Vvg8vvihw\n\n20Z/FXUPjzvf99w45FeBSSj/FoOp7wHGA+HLArbpfRHHadj6MaxrCGqCXJZHFLYy\n\n6j3Y0LFtRkw6dOGAfgSM4w10NLbzR1O37zUZ4kkJ1itnNDBzfDJlx4IbZo82ale+\n\nfFiHYywxwIlLpbPzqcKHCwpx6rrz6t/Twp7FGNldRxV4AjlGxLyevQnMeCAnKgjg\n\nWwIDAQAB\n\n-----END PUBLIC KEY-----\n\n-----BEGIN PUBLIC KEY-----\n\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArFYkoqZrdAm4zDI/hYT5\n\np2WfqOSzrD+bdr6VuZYYa1CInG1xciAwAZcDZi+wB8bFoCWIsVf7v6d6eTJ84DO8\n\ne8av4RKt26mXwWglm0znmWuGEGsrsmbBNjWJgl5jI2qb0hcMtLPc4LV/ngz8KWbE\n\nqxwPfnFYrhhYgCgFjWbJ1A8azRyOYWLo7qhFYeO+Fmvb480/9lZ4hYEhPRzKL3nW\n\nsTR8WFiDNKuMh9CxAFBsialMHKUCC9VO6J8T1mYC1f5e7Gj4Aaa+puEHtervPUdZ\n\nZhYURbAr8fEmH65gIat8iZVkUAqdRJetVpWnXypaoxP9ZeXc7T7vPMYzpf4l7l9u\n\nzQIDAQAB\n\n-----END PUBLIC KEY-----\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f26\n\n-----BEGIN PUBLIC KEY-----\n\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAru8YYbvLSqvQQTvDfNSU\n\nADtZ3K2aFtyurvHZcOipzm3BA9RC9YS3HV3WLIo6bH2TzO9mJA5piBtYWNiSasDu\n\n0zzS8TtrCWiBBOkdiimrrNBoJ4KeWJnFEjL1Md8sZmpNUoqvUY2RwEl7J3Fg2+z/\n\nd9hm23EX2LMLqDRDGFPKadD3GHCw9ZFoVbiUGzg2anEO3UebXHcWEZztktrRVcA0\n\nU4w1LBzBkbonwDYY1VJ98W2BO3qtXiUWmsFRBas88nPO9B4fCR0Urz92ocOf8WBh\n\nJPMCkM7qPxW+mnOL7LHhZMpFcLbIlKzNXvUBUJ6T3DvZ5eO28WGoD8AUMHF6J1jx\n\nQwIDAQAB\n\n-----END PUBLIC KEY-----\n\n-----BEGIN PUBLIC KEY-----\n\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvg5VRwJbmGuWCjGKBJFE\n\nKBGdvXxdak4HnUzf+YiQmeqCeJVeR0fimcpf+Mvs1kKMT6LEpqzI3GknQca8V0Y+\n\nvHe22NOZYqAVmHVZWgtg9Le2tOCqBLaTeRHO3SejzT3fwxcWshpvOM1QSXx6WP5V\n\nOlNw3XqOM7D1t/MZwo4hi+RaqQPgPLWXigtqDoQuuv/tP7vGOiKfVpjv6oQ4AlAX\n\nyTauktpktB4Q51nmm3hxy/pET2WjXpwPOXrl+Cpny5lZC44KRKvX8yume97zXZpg\n\ngf8rebKSvwipIIRVeD0ihpazjQ9V8AzPSYpbmk8oF8TUB/hFyYWQRq8+hKZ6IlKC\n\nwwIDAQAB\n\n-----END PUBLIC KEY-----\n\n-----BEGIN PUBLIC KEY-----\n\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1Kgs1+tUSi1Vh1zvJjcC\n\nD9Yj7X8vLBwf82XQ8be6gsew3SD3mrTQUBv5PaQWer6w5iJpkM0FLwx2kvLuLKtz\n\nx1cUWFcN2mSKCMHeJpdBPCEM7CwBjGjp9euSG+ZpvpOobvv/eggUVa68wm2HfNAk\n\n+WkpR/XKyOCBOQ7UzU7nHXka7MmdDLNuKrH+CSMGEK1VIuz6CjMPJkAwGpL1r1g3\n\na7nr4ihoLO2+r/dZUXgf7oyPLQdUiPH4I8eCzJVCMLi7kD7AqHvyOF/F9yYJ9DKO\n\nLEZrxG5wDnTKM+3Iwti6ULqCQwd/krlcSZkm+kwxN5htMwk2chmEONS6y7fwcMLW\n\nLwIDAQAB\n\n-----END PUBLIC KEY-----\n\n-----BEGIN PUBLIC KEY-----\n\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4rdRiBiEW7RKi+nGuQkQ\n\nzzy6B5M1patDsz8CplezC5ML4TGVjzU1IVpe/qzVoaYoDH5snjRuzcTWc4+BZlE3\n\n2+HAVzySXkTxIm6tBPR10NIj2xUMKyoKlswS45iSbnFyDfwRdoKTVy1PoFQ27HSR\n\nDB35SxIba7reQf3p44ByLoNByG19Qp0GNpKxY7x74pRJDe8rYF9rcqNjEGjhy4Pv\n\nwnzK/EItumjT9wuMcngHggG1T5hjgZQoLjVhAJ8zyNOmcVNsL9/DSUf1zg5SdGjv\n\nDV5/xFQGFeKegFKcZLukKA3et8y92NS2KLzQj3SIJVxFrSOK+rGfwy0pkr6qW00a\n\nTQIDAQAB\n\n-----END PUBLIC KEY-----\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f27\n\nApplications targeted by Screengrabber plugin\n\nProcess name substrings:\n\n&RQ, 7ZFM, 7ZG, AGENTVKONTAKTE, AVANT, BROSIX, BROWSER, CHEAPVOIP, CHROME, DRAGON, \n\nEXCEL, FACEBOOKVIDEOCALLING, FINEREADER, FIREFOX, FIREFOXPORTABLE, FLOCK, GAJIM, \n\nGGAPP, HAMSTERARC, ICQ, IEXPLORE, INFIUM, LF30, MAGENT, MAXTHON, MIRANDA32, MOZILLA, \n\nMSIMN, MSMSGS, MSNMSGR, MULTIFON, MYIE, NERO, NICHROME, NIMBUZZ, NONOH, NOTEPAD, \n\nNOTEPAD++, OOVOO, OPERA, OUTLOOK, PGPKEYS, PGPTOOLS, PIDGIN, PIDGIN-PORTABLE, \n\nPOWERPNT, PSI, PUFF, QIP, QQ, QUTIM, R&Q, RUN, SAFARI, SEAMONKEY, SKYPE, TBB-FIREFOX, \n\nTEAMVIEWER, THEBAT, THUNDERBIRD, TRILLIAN, TRUECRYPT, TWEETDECK, TWITTER-WIN8, VIBER, \n\nVISIO, W8VK, WEBMONEY, WINMAIL, WINRAR, WINWORD, WINZIP32, WLMAIL, WORDPAD, WUALA, \n\nWWAHOST, X-LITE, YAHOOM, YAHOOMESSENGER\n\nWindow title substrings:\n\n************, AOL MAIL, ATTACHMENT .GOOGLE, BLOGGER, BLOGSPOT, DEPOSIT FILES, FACEBOOK, \n\nFROMRU, GMAIL, GOOGLE+, HIDE MY ASS!, HIDEMYASS .COM, HOTBOX, HOTMAIL, HUSHMAIL, IMO, \n\nLIVEJOURNAL, MAIL .RU, MAIL .YANDEX, MESSENGER, MICROSOFT EXCEL WEB APP, MICROSOFT \n\nONENOTE WEB APP, MICROSOFT POWERPOINT WEB APP, MICROSOFT WORD WEB APP, MSN, \n\nPOCHTA, RAMBLER, RAPIDSHARE, SKYDRIVE, SKYPE, TURBOBIT, TWITTER, WEBMAIL, YAHOO! MAIL, \n\n\u0412\u0410\u041c \u0421\u041e\u041e\u0411\u0429\u0415\u041d\u0418\u0415, \u041e\u0414\u041d\u041e\u041a\u041b\u0410\u0421\u0421\u041d\u0418\u041a\u0418, \u041f\u0420\u0418\u0413\u041b\u0410\u0428\u0415\u041d\u0418\u0415 \u0414\u0420\u0423\u0416\u0418\u0422\u042c, \u042f\u041d\u0414\u0415\u041a\u0421 .\u041f\u041e\u0427\u0422\u0410\n\n7  MITRE ATT&CK TECHNIQUES\n\nTactic\n\nID\n\nName\n\nDescription\n\nT1106\n\nExecution through API\n\nAttor\u2019s dispatcher uses CreateProcessW API for execution .\n\nT1129\n\nExecution through Module Load\n\nAttor\u2019s dispatcher executes additional plugins by loading the respective DLLs .\n\nExecution\n\nT1085\n\nRundll32\n\nPlugin 0x10 schedules rundll32.exe to load the dispatcher .\n\nT1053\n\nScheduled Task\n\nPlugin 0x10 schedules rundll32.exe to be executed on each boot/logon, \nand subsequently to load the dispatcher .\n\nT1035\n\nService Execution\n\nAttor\u2019s dispatcher can be executed as a service .\n\nT1037\n\nLogon Scripts\n\nPersistence\n\nT1050\n\nNew Service\n\nAttor\u2019s dispatcher can establish persistence via adding a Registry key with a \nlogon script: HKEY_CURRENT_USER\\Environment\n\n\u201cUserInitMprLogonScript\u201d\n\nAttor\u2019s dispatcher can establish persistence by registering a new service .\n\nHKEY_LOCAL_MACHINE\\SYSTEM\\*ControlSet*\\Control\\SafeBoot\\\nMinimal registry keys are updated to execute the service even in Safe \nmode and Safe mode with networking .\n\nT1053\n\nScheduled Task\n\nPlugin 0x10 schedules a new task that loads the dispatcher on boot/logon .\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f28\n\nTactic\n\nID\n\nName\n\nDescription\n\nT1140\n\nDeobfuscate/Decode Files or \nInformation\n\nStrings are encrypted with a XOR cipher, using a hardcoded key .\n\nConfiguration data, log files and plugins are encrypted using a hybrid \nencryption scheme \u2013 Blowfish-OFB combined with RSA .\n\nT1107\n\nFile Deletion\n\nThe collected files and log files are deleted after exfiltration by plugin 0x05 .\n\nT1158\n\nHidden Files and Directories\n\nThe attributes of log files and directories are set to HIDDEN/SYSTEM/\nARCHIVE (or combination of those) .\n\nT1036\n\nMasquerading\n\nAttor\u2019s dispatcher disguises itself as a legitimate task (i .e ., the task name and \ndescription appear legitimate) .\n\nT1112\n\nModify Registry\n\nAttor\u2019s dispatcher can modify the Run registry key .\n\nDefense \nEvasion\n\nT1055\n\nProcess Injection\n\nT1108\n\nRedundant Access\n\nAttor\u2019s dispatcher injects itself into running processes, to gain higher \nprivileges and to evade detection . It avoids specific system and Symantec \nprocesses .\n\nBoth 32-bit and 64-bit versions of Attor\u2019s dispatcher are executed; also they \nare injected into almost all processes .\n\nThere is a watchdog component, implemented in the dispatcher or as a \nseparate plugin, that reinstalls Attor if it has been removed .\n\nT1099\n\nTimestomp\n\nThe time of last access to files and registry keys is manipulated after they \nhave been created/modified .\n\nT1497\n\nVirtualization/Sandbox Evasion\n\nAttor can detect whether it is executed in some virtualized or emulated \nenvironments . If detected, it terminates itself immediately .\n\nCredential \nAccess\n\nT1056\n\nInput Capture\n\nUser credentials can be collected by plugin 0x07 via capturing keystrokes .\n\nT1083\n\nFile and Directory Discovery\n\nPlugin 0x01 enumerates files with specific extensions on all hard disk drives \nand stores file information in encrypted log files .\n\nDiscovery\n\nT1120\n\nPeripheral Device Discovery\n\nPlugin 0x01 collects information about inserted storage devices, modems \nand phone devices .\n\nT1082\n\nSystem Information Discovery\n\nAttor monitors the free disk space on the system .\n\nT1123\n\nAudio Capture\n\nPlugin 0x03 is capable of recording audio using available input sound \ndevices .\n\nT1119\n\nAutomated Collection\n\nAttor automatically collects data about the compromised system .\n\nT1115\n\nClipboard Data\n\nCollection\n\nPlugin 0x07 collects data stored in the Windows clipboard by using the \nOpenClipboard and GetClipboardData APIs .\n\nT1074\n\nData Staged\n\nCollected data is staged in a central upload directory prior to exfiltration .\n\nT1056\n\nInput Capture\n\nPlugin 0x07 captures keystrokes pressed within the window of the process \nwhere Attor is injected .\n\nT1113\n\nScreen Capture\n\nPlugin 0x02 captures screenshots of target applications .\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\f29\n\nTactic\n\nID\n\nName\n\nDescription\n\nT1043\n\nCommonly Used Port\n\nAttor uses port 21 for C&C communication .\n\nT1188\n\nMulti-hop Proxy\n\nAttor uses Tor for C&C communication .\n\nT1079\n\nMultilayer Encryption\n\nAttor sends encrypted traffic using Tor, which itself uses multiple layers of \nencryption .\n\nCommand \nand Control\n\nT1105\n\nRemote File Copy\n\nAttor can download additional plugins, updates and other files .\n\nT1071\n\nStandard Application Layer Protocol\n\nFTP protocol is used for C&C communication .\n\nT1032\n\nStandard Cryptographic Protocol\n\nA combination of Blowfish-OFB and RSA is used for data encryption .\n\nT1020\n\nAutomated Exfiltration\n\nExfiltration of the collected data and log files is done automatically\nby plugin 0x05 .\n\nExfiltration\n\nT1022\n\nData Encrypted\n\nAttor encrypts data with a combination of Blowfish and RSA ciphers before \nsending it to the C&C server .\n\nT1041\n\nExfiltration Over Command and \nControl Channel\n\nAttor exfiltrates data over the C&C channel .\n\nAT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platformTLP: WHITE\fABOUT ESET \n\nFor 30 years, ESET\u00ae has been developing industry-leading IT security software and services for \n\nbusinesses and consumers worldwide . With solutions ranging from endpoint and mobile security, \n\nto encryption and two-factor authentication, ESET\u2019s high-performing, easy-to-use products give \n\nconsumers and businesses the peace of mind to enjoy the full potential of their technology . ESET \n\nunobtrusively protects and monitors 24/7, updating defenses in real time to keep users safe and \n\nbusinesses running without interruption . Evolving threats require an evolving IT security company . \n\nBacked by R&D centers worldwide, ESET becomes the first IT security company to earn 100 Virus \n\nBulletin VB100 awards, identifying every single \u201cin-the-wild\u201d malware without interruption since 2003 . \n\nFor more information, visit www .eset .com or follow us on LinkedIn,  Facebook and Twitter .\n\n\f"], "URLs": [], "weight": 0.0}