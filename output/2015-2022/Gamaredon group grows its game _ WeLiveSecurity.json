{"rule_id": 211, "name": "Gamaredon group grows its game _ WeLiveSecurity", "description": "-", "references": [], "File_Names": ["5.log", "inject.txt", "gent.ARJ", "odo.YE", "odo.XC", "1.log", "do.DP", "3.log", "odo.XG", "odo.ZM", "Harvesterx64.dll", "do.CD", "do.CA", "csc.exe", "2.log", "4.log", "myftp.biz", "REG.RU"], "MD5_Hashes": [], "SHA1_Hashes": ["6F75F2490186225C922FE605953038BDEB537FEE", "DFC941F365E065187B5C4A4BF42E770035920856", "941F341770B67F9E8EE811B4B8383101F35B27CD"], "SHA256_Hashes": [], "Registry_Entries": ["HKCU\\Software\\Microsoft\\Office\\<version>\\<product>\\Security\\VBAWarnings\nHKCU\\Software\\Microsoft\\Office\\<version>\\<product>\\Security\\AccessVBOM\n\nIt iterates over all possible Office <version> values for both Word and Excel <product>\nvalues. It then scans for documents with valid Word or Excel file extensions on all drives\nconnected to the system. For the drive containing the Windows installation, it scans only\nspecific locations, namely the Desktop and Downloads folders. For the others, it scans\nthe entire drive. The malware moves each located document into the AppData folder,\ninserts malicious Word or Excel macros into it using a Microsoft.Office.Interop object,\nand then moves the document back into its original folder. In the samples we analyzed,\nthe injected macros were simple downloaders.\n\nBatch file/VBScript\n\nhttps://www.welivesecurity.com/2020/06/11/gamaredon-group-grows-its-game/\n\n5/13\n\n\f8/24/2020\n\nGamaredon group grows its game | WeLiveSecurity\n\nThe VBScript version of this module is similar in behavior to the .NET one. The main\ndifference is that instead of inserting a malicious macro into existing documents, it\ninserts references to a remote template into them.\n\nFigure 5. VBScript using the Document.AttachedTemplate property to inject a reference to a remote\ntemplate into existing documents\n\nThis VBScript module also comes packaged in a self-extracting archive, containing one\nbatch file and two VBS files responsible for iterating through documents and adding the\nremote template references to them.\n\nModule updates\n\nInterestingly, some of the custom tools described in Palo Alto Networks\u2019 2017 blogpost\non Gamaredon are still being updated and in use today. Some show significant\nsimilarities while others are rewrites in different coding languages. The most prevalent\ntools downloaded and installed on compromised machines can be broadly grouped into\ntwo different categories: downloaders and backdoors.\n\nDownloaders\n\nThere are many variations of their downloaders, most of them written in either C# or\nVBScript. This section will cover only two of their most original variants; the others have\nnot evolved that much and are very simple.\n\nC# compiler module\n\nThis .NET executable, similar to many other tools used by the Gamaredon group, uses\nobfuscation techniques such as junk code insertion and string obfuscation. It contains in\nits body the base64-encoded source code of a downloader. It decodes that source code\nand compiles it directly on the system using the built-in\nMicrosoft.CSharp.CSharpCodeProvider class. It places the resulting executable in an\nexisting directory and creates a scheduled task that will launch it every 10 minutes. As\ncan be seen in Figure 6, the decoded source code still has comments in it, illustrating the\napparent sloppiness of Gamaredon\u2019s operators.\n\nhttps://www.welivesecurity.com/2020/06/11/gamaredon-group-grows-its-game/\n\n6/13\n\n\f8/24/2020\n\nGamaredon group grows its game | WeLiveSecurity\n\nFigure 6. Part of the C# downloader source code included in the C# compiler module\n\nGitHub project module\n\nAs seen in Figure 7, this .NET executable uses a GitHub repository to obtain and execute\na downloader. This repository is now gone, but we were able to download a copy of it\nwhile it was still available.\n\nFigure 7. .NET module responsible for downloading and executing a payload stored on github.com\n\nThe repository contained a single file \u2014 readme.txt \u2014 that was a base64-encoded .NET\ndownloader executable. The role of the GitHub project module is to download this file,\ndecode it and execute it.\n\nBackdoors \u2013 file stealers\n\nWhile some variations exist in functionalities, the main purpose of these modules is to\nenumerate all documents on a compromised system and upload them to the C&C server.\nThese file stealers can also download and execute arbitrary code from the C&C server. As\nwith many other tools used by the Gamaredon group, they come in four different coding\nlanguages: C/C++, C#, batch file and VBScript.\n\nC/C++\n\nhttps://www.welivesecurity.com/2020/06/11/gamaredon-group-grows-its-game/\n\n7/13\n\n\f8/24/2020\n\nGamaredon group grows its game | WeLiveSecurity\n\nThis variant is the successor of the USBStealer module described here. Although the\nlatest versions are now quite different, examining samples of this module throughout its\ndevelopment clearly shows it originates from the same source code.\n\nOne sample that illustrates this shift well is a 64-bit DLL with internal name\nHarvesterx64.dll, compiled in June 2019. It still has most of the strings used in the older\nvariants, but also exhibits two improvements that are still in the newer ones. First, it\nnow resolves Windows APIs via name hashing and second, it uses a basic text file\ninstead of a SQLite database to track which files were already uploaded to the C&C\nserver.\n\nThe behavior of this module is quite straightforward: it scans the system for new\nMicrosoft Office documents, both on local and removable drives, and uploads them to\nthe C&C server. To know whether the document is new, the module keeps, in a text file,\none MD5 hash per file uploaded to the server. These MD5 hashes are not based on the\nfile content, but rather on a string composed of the file name, its size and its last\nmodified time. The module\u2019s strings are stored in its .data section, encrypted with a\nsimple XOR key. It also has the ability to download and execute arbitrary code from its\nC&C server.\n\nC#\n\nThis is a reimplementation in C# of the C/C++ version. The major difference is that it\nalso takes screenshots of the compromised computer every minute. As seen in Figure 8,\nthe version we analyzed has five different threads with evocative names.\n\nFigure 8. C# backdoor thread creation routine\n\nBatch file/VBScript\n\nhttps://www.welivesecurity.com/2020/06/11/gamaredon-group-grows-its-game/\n\n8/13\n\n\f8/24/2020\n\nGamaredon group grows its game | WeLiveSecurity\n\nThis version comprises several scripts, written in both batch file form and VBScript. The\nultimate goal is the same, though: scanning the system for sensitive documents. The\nmain mechanism is a batch file that searches for Word documents (*.doc*) on the\nsystem and stores their names in a text file (see Figure 9).\n\nFigure 9.Example inject.txt file containing the result of the backdoor\u2019s document file scan\n\nThe package also contains encrypted script files named 1.log, 2.log, 3.log, 4.log and 5.log.\nOnce decrypted, these scripts are obfuscated VBScript downloaders that are able to\ndownload and execute arbitrary code.\n\nNetwork infrastructure\n\nThe Gamaredon group uses many different domains, both free and paid, for its C&C\nservers. Free domains are mostly DDNS from No-IP: hopto.org, ddns.net, myftp.biz,\nwhile paid domains are registered through the REG.RU registrar and include the .fun,\n.site, .space, .ru, .website and .xyz TLDs.\n\nThey are constantly changing the domains used by their tools, but mostly on a small\nnumber of ASNs. Careful analysis suggests they use separate domains for small groups\nof victims. Please check ESET\u2019s GitHub account for an extensive list of domains used by\nthe Gamaredon group.\n\nQuality of execution\n\nWe were able to collect numerous different samples of malicious scripts, executables and\ndocuments used by the Gamaredon group throughout their campaigns. We noticed\nseveral mistakes in these, especially in scripts. It is of course impossible to know the\nexact reason behind these bugs or oversights, but the volume of samples the group\nproduces and their rapid development could explain it. The fact that there were\ncomments left in the source code included in some C# compiler module samples or that\nthe Russian encoding was wrong in email generated by the Outlook VBA module shows\nthat there is no stringent review or testing before releasing their many tools and using\nthem in the wild.\n\nhttps://www.welivesecurity.com/2020/06/11/gamaredon-group-grows-its-game/\n\n9/13\n\n\f8/24/2020\n\nGamaredon group grows its game | WeLiveSecurity\n\nHowever, while these errors might lower their tools\u2019 overall effectiveness, this group\u2019s\nrapid execution and adaptation also has some advantages. The volume and\nrelentlessness of the attacks can create a state of constant dread in their targets. And\nalthough the code is very simple, some techniques, such as script obfuscation, make it\nhard to fully automate the analysis, making the analyst\u2019s job tedious.\n\nTheir GitHub project allowed us a glimpse into the rapid development of their tools. The\ncode that was committed there clearly showed the evolution of the C# downloader. The\nfirst versions showed no signs of obfuscation; then the developers added different string\nobfuscations and junk code to make the analysis harder.\n\nIn terms of persistence, several different techniques are used, but the most common\nones are scheduled tasks, autorun registry keys and leveraging the Startup folder.\nAlthough these techniques are very simple and have been known for a long time, the\nGamaredon group\u2019s strategy of trying to install multiple scripts and executables on each\nsystem, and constantly updating them, significantly complicates the defender\u2019s lives.\n\nConclusion\n\nDespite the simplicity of most of their tools, the Gamaredon group also is capable of\ndeploying some novelty, such as their Outlook VBA module. However, as it is far from\nstealthy, in the long run it is no match for a capable organization. The variety of tools\nGamaredon has at its disposal can be very effective at fingerprinting a machine and\nunderstanding what sensitive data is available, then spreading throughout the network.\nCould this just be a way to deploy a much stealthier payload?\n\nSpecial thanks to ESET Senior Malware Researcher Anton Cherepanov for his help in\nthis research.\n\nIndicators of Compromise (IoCs)\n\nSHA-1\n\nESET de-\ntection\nname\n\n6F75F2490186225C922FE605953038BDEB537FEE DOC/Tro-\njanDown-\nloader.A-\ngent.ARJ\n\nDFC941F365E065187B5C4A4BF42E770035920856 Win32/Pter\n\n9AFC9D6D72F78B2EB72C5F2B87BD-\nC7D59C1A14ED\n\nodo.XG.-\ngen\n\nWin32/Pter\nodo.ZM\n\nComments\n\nOutlook VBA\nmodule\n\nC# Office macro\ninjection module\n\nBatch file/ VB-\nScript Office\nmacro injection\nmodule\n\nhttps://www.welivesecurity.com/2020/06/11/gamaredon-group-grows-its-game/\n\n10/13\n\n\f8/24/2020\n\nGamaredon group grows its game | WeLiveSecurity\n\nSHA-1\n\nESET de-\ntection\nname\n\nComments\n\n3DD83D7123AEFBE5579C9DC9CF3E68B-\nCAFC9E65E\n\nMSIL/Ptero\ndo.CD\n\nC# compiler\nmodule\n\n941F341770B67F9E8EE811B4B8383101F35B27CD MSIL/Ptero\n\ndo.CA\n\nDC8BD2F65FD2199CE402C76A632A9743672E-\nFE2D\n\nWin32/Pter\nodo.XC\n\nGitHub project\nmodule\n\nC/C++ backdoor\n\n336C1244674B-\nB378F041E9064EA127E9E077D59D\n\nMSIL/Ptero\ndo.DP\n\nC# backdoor\n\n5FC1B6A55A9F5A52422872A8E34A284CDBD-\nD0526\n\nWin32/Pter\nodo.YE\n\nBatch file/ VB-\nScript backdoor\n\nMITRE ATT&CK techniques\n\nTactic ID\n\nName\n\nDescription\n\nInitial\nAc-\ncess\n\nT1193 Spearphis\n\nhing\nAttach-\nment\n\nGamaredon group sends emails with malicious attach-\nments to its targets.\n\nT1199 Trusted\n\nRelation-\nship\n\nGamaredon group malware abuses a compromised or-\nganization\u2019s email accounts to send emails with mali-\ncious attachments to the victim\u2019s contacts.\n\nExe-\ncution\n\nT1064 Scripting\n\nGamaredon group uses scripting heavily, mostly Batch\nfiles and VBScript.\n\nT1085 Rundll32\n\nGamaredon group malware uses rundll32 to launch ma-\nlicious DLLs, for example the C/C++ backdoor.\n\nT1106 Execution\n\nthrough\nAPI\n\nGamaredon group malware uses CreateProcess to\nlaunch additional components, for example to execute\npayloads received from its C&C servers.\n\nT1204 User\n\nExecution\n\nInitial compromise by the Gamaredon group usually re-\nquires the user to execute a malicious email\nattachment.\n\nPer-\nsis-\ntence\n\nT1053 Sched-\n\nuled Task\n\nGamaredon group malware registers several of its mod-\nules (downloaders, backdoors, etc.) as scheduled\ntasks.\n\nhttps://www.welivesecurity.com/2020/06/11/gamaredon-group-grows-its-game/\n\n11/13\n\n\f8/24/2020\n\nGamaredon group grows its game | WeLiveSecurity\n\nTactic ID\n\nName\n\nDescription\n\nT1060 Registry\n\nRun Keys\n/ Startup\nFolder\n\nGamaredon group uses Run keys and the Startup fold-\ner to ensure its modules are executed at every reboot.\n\nT1137 Office Ap-\n\nplication\nStartup\n\nGamaredon group malware inserts malicious macros\ninto existing documents, providing persistence when\nthey are reopened.\n\nDe-\nfense\nEva-\nsion\n\nT1027 Obfuscat-\n\ned Files\nor\nInforma-\ntion\n\nGamaredon group makes heavy use of compressed\narchives, some password protected, to deliver its mali-\ncious payloads. Strings are routinely obfuscated or en-\ncrypted in these malicious modules.\n\nT1112 Modify\n\nRegistry\n\nGamaredon group malware modifies several registry\nkeys to deactivate security mechanisms in Microsoft Of-\nfice related to macros.\n\nT1116 Code\n\nSigning\n\nGamaredon group uses signed binaries in its malicious\ncampaigns. One notable example is wget samples\nsigned with a valid certificate from Jernej Simon\u010di\u010d and\navailable here.\n\nGamaredon group uses simple string deobfuscation\nand decryption routines in its modules.\n\nT1140 Deobfus-\ncate/De-\ncode Files\nor\nInforma-\ntion\n\nT1221 Template\nInjection\n\nGamaredon group adds remote templates to docu-\nments it sends to targets.\n\nT1500 Compile\n\nAfter\nDelivery\n\nGamaredon group C# compiler module contains an ob-\nfuscated downloader that it compiles using csc.exe and\nthen executes.\n\nDis-\ncov-\nery\n\nLater-\nal\nMove-\nment\n\nT1083 File and\nDirectory\nDiscovery\n\nGamaredon group uses its backdoors to automatically\nlist interesting files (such as Office documents) found\non a system for future exfiltration.\n\nT1080 Taint\n\nShared\nContent\n\nGamaredon group malware injects malicious macros\ninto all Word and Excel documents reachable by the\ncompromised system.\n\nT1534 Internal\n\nSpearphis\nhing\n\nGamaredon group uses its Outlook VBA macro to send\nemail with malicious attachments to other targets within\nthe same organization.\n\nhttps://www.welivesecurity.com/2020/06/11/gamaredon-group-grows-its-game/\n\n12/13\n\n\f8/24/2020\n\nGamaredon group grows its game | WeLiveSecurity\n\nTactic ID\n\nName\n\nDescription\n\nCol-\nlec-\ntion\n\nT1005 Data from\n\nLocal\nSystem\n\nGamaredon group malware actively searches for sensi-\ntive documents on the local system.\n\nT1025 Data from\n\nRemov-\nable\nMedia\n\nT1039 Data from\n\nNetwork\nShared\nDrive\n\nGamaredon group malware scans all drives for sensi-\ntive data and also watches for removable drives being\ninserted into a system.\n\nGamaredon group malware scans all drives A: \u2013 Z: for\nsensitive data, so it will scan any network shares\nmounted as drives.\n\nT1113 Screen\nCapture\n\nGamaredon group uses a backdoor that takes screen-\nshots every minute.\n\nT1119 Automat-\ned\nCollection\n\nGamaredon group deploys scripts on compromised\nsystems that automatically scan for interesting\ndocuments.\n\nGamaredon group malware uses both HTTP and\nHTTPS for command and control.\n\nGamaredon group uses modules that automatically up-\nload harvested documents to the C&C server.\n\nCom-\nmand\nand\nCon-\ntrol\n\nExfil-\ntration\n\nT1071 Standard\nApplica-\ntion Layer\nProtocol\n\nT1020 Automat-\ned\nExfiltra-\ntion\n\nJean-Ian Boutin\n11 Jun 2020 - 11:30AM\n\nNewsletter\n\nDiscussion\n\nhttps://www.welivesecurity.com/2020/06/11/gamaredon-group-grows-its-game/\n\n13/13\n\n\f"], "URLs": ["https://www.welivesecurity.com/2020/06/11/gamaredon-group-grows-its-game/"], "weight": 0.0}