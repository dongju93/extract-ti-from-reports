{"rule_id": 15, "name": "GlassRAT-final", "description": "-", "references": [], "File_Names": ["virustotal.com", "flash.exe", "rausers.com", "updatef.dll", "foryousee.net", "off.dat", "charge.rsa", "secureworks.com", "alternate009.com", "cainformations.com", "threatconnect.com", "ECAT.pdf", "mecahnicnote.com", "wp_the_taidoor_campaign.pdf", "PlugX.pdf", "Flash.exe", "pastebin.com", "google.net", "fireeye.com", "mechanicnote.com", "blackhat.com", "3.html", "RSA.com"], "MD5_Hashes": ["59b404076e1af7d0faae4a62fa41b69f", "e98027f502f5acbcb5eda17e67a21cdc", "5c17395731ec666ad0056d3c88e99c4d"], "SHA1_Hashes": [], "SHA256_Hashes": ["30d26aebcee21e4811ff3a44a7198a5c519843a24f334880384a7158e07ae399", "421f4c83898ff3ae9b2a94621140ef770888a8a0914b163cdae4690433173899", "89317809806ef90bb619a4163562f7db3ca70768db706a4ea483fdb370a79ede", "c11faf7290299bb13925e46d040ed59ab3ca8938eab1f171aa452603602155cb", "2ee38b14a570f693c093a53c53c6d10234fb11cfb7318022190cdb8c96d73b35", "91279f578d2836ea679ae9578068cb70810fb781faf6d7c03c3212aa509f3e7b"], "Registry_Entries": ["HKLM\\System\\CurrentControlSet\\Services c:\\programdata\\application data\\updatef.dll \n\nFigure 9 GlassRAT persistence mechanism if installed using administrative privileges \n\nThe timestamp on the DLL reflects the compile date of the binary. \n\nRSA Research found samples of GlassRAT with three unique C2 configurations (Table 1).  Static analysis of these  GlassRAT \nDLL's revealed that the C2 host configuration is obfuscated in all of the samples using a simple XOR technique, utilizing \n0x01 as the one-byte key. The most recent sample used URL's for C2, other samples used URL's in combination with a hard \ncoded IP address (perhaps as a backup), and yet another GlassRAT sample we found used only a single IP address with no \nURLs. The C2 port for each specified C2 node is stored as a packed string and can be readily decoded with a simple script. \n\n9 \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\fGlassRAT DLL MD5 \n\nObfuscated C2 \nhosts(s) \n\n5c17395731ec666ad0056d3c88e99c4d  003/064/50/60 \n\nC2 hosts XOR decoded \nwith 0x01 \n112.175.x.x \n\ne98027f502f5acbcb5eda17e67a21cdc \n\nchur/gnsxntrdd/odu \n012/31/084/353 \n\nbits.foryousee.net \n103.20.x.x \n\n59b404076e1af7d0faae4a62fa41b69f \n\npy/s`trdsr/bnl \nly/s`trdsr/bnl \nyy/s`trdsr/bnl \n\nqx.rausers.com \nmx.rausers.com \nxx.rausers.com \n\nTable 1 Three different GlassRAT C2 host configurations found in the wild by RSA Research \n\nGLASSRAT CAPABILITIES AND FUNCTIONS \n\nGlassRAT provides reverse shell functionality to an infected victim. The communication contains a handshake between the \nattacker and the victim. The sample will send the hard coded value 0x cb ff 5d c9 ad 3f 5b a1  54 13 fe fb 05 c6 22, the \nresponse from the C2 is then compared with the value 0x3f5ba154 and then the subsequent commands are a series of two \nbyte codes. The malware performs a sanity check to make sure that the low byte of the two-byte combinations is 17 (0x11) \nor less. A QWORD is used to track directionality, and a DWORD is used to delimit data size.  Control data is then passed to \nand from GlassRAT in the clear, such that system information and Windows command shell output would be readily \nobservable in network traffic.  GlassRAT initially accepts two primary commands (both with a set of sub commands) from its \ncontroller which are as follows: \n\n0x01:  Provides/Enumerates system information from the victim host \n0x02:  Native Command and reverse shell communications and output. \n\nThe initial beacon and handshake of controller-initiated C2 will pass the IP address of the victim to the GlassRAT controller.  \nHowever, this was not observed in our dynamic analysis, suggesting that it requires manual command from the C2 \noperator.  Perhaps such commands are performed by the operator only if a connection by a nosy researcher has been ruled \nout. \n\nWhen the 0x01 primary command is issued the malware is configured with the following subcommands, which are in red. \n\n0x01 01 \u2013 C2 request for System Information \n0x01 02 \u2013 Victim response to request for system information \n0x01 03 \u2013 C2/Victim keep alive \n0x01 06 \u2013 C2 Read C:\\ProgramData\\off.dat  \n\nWhen the 0x02 primary command is issued the malware is configured with the following subcommands.  Not all of the 17 \npossibilities are utilized in the samples that were analyzed, and this could allow for future expansion of the malware\u2019s \ncapabilities by its author(s).  \n\n0x02 01 \u2013 C2 Cmd command \n0x02 02 \u2013 Victim Response from cmd commands \n0x02 03 \u2013 C2 initiate cmd.exe pipe/thread \n0x02 04 \u2013 C2 kill cmd pipe/thread \n0x02 05 \u2013 C2 execute file/start process  \n0x02 06 \u2013 Not Used/present \n0x02 07 \u2013 Not Used/present \n0x02 08 \u2013 Victim response to file download \u2013 File not found  \n0x02 09 \u2013 Not Used/present \n0x02 0A \u2013 Not Used/present \n0x02 0B \u2013 C2 command to get handle information  \n0x02 0C \u2013 Download file from Victim \n0x02 0D \u2013 Victim response to file download \u2013 File transmission \n\n10 \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\f0x02 0E \u2013 Upload/write file to Victim \n0x02 0F \u2013 Not Used/present \n0x02 10 \u2013 C2 command to get handle information \n0x02 11 \u2013 Create process on Victim  \n0x02 12 \u2013 Victim response to file upload \n\nCOMMAND AND CONTROL \n\nTo perform dynamic analysis on the new dropper, RSA Research leveraged RSA Security Analytics (Figure 10) and RSA \nECAT to quickly gather indicators and forensic details about the GlassRAT malware. \n\nFigure 10 GlassRAT C2 activity in RSA\u00ae Security Analytics \n\nRSA\u00ae ECAT (Figure 11) reveals that the Trojan is loaded as RasAuto service (via svchost.exe network service process) when \ninstalled with administrative privileges, and Figure 12 indicates detection by RSA\u00ae ECAT when installed with non-privileged \ncredentials (rundll32.exe running the GlassRAT DLL). \n\nFigure 11 GlassRAT (administrative install) C2 as detected by RSA\u00ae ECAT \n\n11 \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\fFigure 12 GlassRAT (user-level install) C2 as detected by RSA\u00ae ECAT \n\nAnalysts wishing to leverage RSA\u00ae ECAT to find RATs including GlassRAT in their enterprise networks may want to refer to \nthe technical whitepaper \u201cCatching the R.A.T. with ECAT\u201d17 presented at RSA Charge by Justin Lamarre. \n\nRSA\u00ae Security Analytics reveals connections to following host aliases, which as of the time of this writing, resolve to the \nsame IP address: 115.144.x.x in South Korea.  The GlassRAT connects with the following string in the handshake.   \n\ncb ff 5d c9 ad 3f 5b a1 54 13 fe fb 05 c6 22 \n\nThe handshake protocol has been incorporated into a parser for RSA\u00ae Security Analytics (Figure 13) that is included in this \nreport\u2019s annex, as well as on RSA\u00ae Live. \n\nFigure 13 GlassRAT C2 parser in action on RSA\u00ae Security Analytics \n\nEven without the parser (typical with a protocol-abusing raw socket connection) RSA\u00ae Security Analytics flags on \u201cunknown \nservice over http port\u201d and \u201cunknown service over ssl port\u201d (Figure 14), cluing the security investigator to the probability \nthat the traffic is malicious. \n\n17 http://charge.rsa.com/wp-content/uploads/2015/09/Finding-The-R.A.T-With-ECAT.pdf \n\n12 \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n                                   \n \n\fFigure 14 GlassRAT protocol abuse identified by Security Analytics \n\nIn each case, the Trojan dropper installed the DLL with the file pointer hard coded to be 12 megabytes in size.  Thus, \nalthough the functional part of the GlassRAT DLL is only 16kb or so in size, the file size shown on disk is much larger (Figure \n15).   \n\nFigure 15 GlassRAT DLL takes 11+MB on disk, but consists of mostly null data bytes \n\nAPPENDIX \n\nCampaign C2 overlap graphic \n\nMalware hashes \n\nC2 infrastructure (some IP addresses redacted) \n\nGlassRAT Yara signature \n\nPRIVATE ANNEX  \n\nUnredacted C2 infrastructure  \n\nUnredacted campaign C2 overlap graphic \n\nGlassRAT C2 decoder script \n\n(RSA customers and vetted industry partners can have access to the private annex by emailing conops@RSA.com.) \n\n13 \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\f", "HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run   Update \n\n4. \n\nthe dropper deletes itself with and embedded command: \n\n\u201ccmd.exe /c erase /F "], "URLs": ["https://www.threatconnect.com/khaan-quest-chinese-cyber-espionage-targeting-mongolia/", "http://charge.rsa.com/wp-content/uploads/2015/09/Finding-The-R.A.T-With-ECAT.pdf", "http://blog.trendmicro.com/trendlabs-security-intelligence/christmas-themed-malware-starts-to-jingle-all-the-way/", "http://pastebin.com/B2jNMrM8", "https://www.virustotal.com/en/file/421f4c83898ff3ae9b2a94621140ef770888a8a0914b163cdae4690433173899/analysis/", "https://www.fireeye.com/blog/threat-research/2013/09/evasive-tactics-taidoor-3.html", "https://www.virustotal.com/en/file/2ee38b14a570f693c093a53c53c6d10234fb11cfb7318022190cdb8c96d73b35/analysis/", "https://www.virustotal.com/en/file/91279f578d2836ea679ae9578068cb70810fb781faf6d7c03c3212aa509f3e7b/analysis/", "https://www.virustotal.com/en/file/c11faf7290299bb13925e46d040ed59ab3ca8938eab1f171aa452603602155cb/analysis/", "http://www.secureworks.com/cyber-threat-intelligence/threats/the-mirage-campaign/", "https://www.blackhat.com/docs/asia-14/materials/Haruyama/Asia-14-Haruyama-I-Know-You-Want-Me-Unplugging-PlugX.pdf", "https://www.virustotal.com/en/file/89317809806ef90bb619a4163562f7db3ca70768db706a4ea483fdb370a79ede/analysis/", "https://www.virustotal.com/en/file/30d26aebcee21e4811ff3a44a7198a5c519843a24f334880384a7158e07ae399/analysis/"], "weight": 0.0}