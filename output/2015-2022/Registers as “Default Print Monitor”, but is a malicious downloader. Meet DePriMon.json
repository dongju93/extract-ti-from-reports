{"rule_id": 136, "name": "Registers as \u201cDefault Print Monitor\u201d, but is a malicious downloader. Meet DePriMon", "description": "-", "references": [], "File_Names": ["dpnvmrs.dll", "plamgr.dll", "prntapt.dll", "spoolsv.exe", "ppcrlupd.dll", "msptromn.dll", "ifssvcmgr.dll", "hp6nhd.dll", "ifssvc.dll", "winmnprt.dll", "prntqdl64.dll", "rb1us0wm99sslpa1vx.tmp", "hp5nhd.dll", "hp3mlnv.dll", "hp4mlnv.dll", "msprtmon64.dll", "ppcrlchk.dll", "stprn32.dll", "pscript6f.dll", "shprn64.dll", "hpmdnel3b.dll", "pscript6s.dll", "hpjdnb64.dll"], "MD5_Hashes": [], "SHA1_Hashes": ["8B4F3A06BA41F859E4CC394985BB788D5F76C85C", "2D80B235CDF41E09D055DD1B01FD690E13BE0AC7", "C2388C2B2ED6063EACBA8A4021CE32EB0929FAD2", "15EBE328A501B1D603E66762FBB4583D73E109F7", "1911F6E8B05E38A3C994048C759C5EA2B95CE5F7", "E272FDA0E9BA1A1B8EF444FF5F2E8EE419746384", "E2D39E290201010F49652EE6116FD9B35C9AD882", "03E047DD4CECB16F513C44599BF9B8BA82D0B7CB", "968B52550062848A717027C512AFEDED19254F58", "6FAB7AA0479D41700981983A39F962F28CCFBE29", "02B38F6E8B54885FA967851A5580F61C14A0AAB6", "CA34050771678C65040065822729F44B35C87B0C", "AA59CB6715CFFF545579861E5E77308F6CAEAC36", "2B30BE3F39DEF1F404264D8858B89769E6C032D9", "7E8A7273C5A0D49DFE6DA04FEF963E30D5258814", "F413EEE3CFD85A60D7AFC4D4ECC4445BB1F0B8BC", "94C0BE25077D9A76F14A63CBF7A774A96E8006B8", "7D0B08654B47329AD6AE44B8FF158105EA736BC3", "9C4BADE47865E8111DD3EEE6C5C4BC83F2489F5B", "D38045B42C7E87C199993AB929AD92ADE4F82398", "6DB79671A3F31F7A9BB870151792A56276619DC1", "0996C280AB704E95C9043C5A250CCE077DF9C8B2"], "SHA256_Hashes": ["C097CF17DC3303BC8155534350464E50176ACA63842B0973831D8C6C8F136817", "8D35913F80A23E820C23B3125ABF57901BC9A7B83283FB2B240193ABDEDE52B9"], "Registry_Entries": ["HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors\\Windows Default Print Monitor\nDriver = %PathToThirdStageDLL%\n\nhttps://www.welivesecurity.com/2019/11/21/deprimon-default-print-monitor-malicious-downloader/\n\n1/8\n\n\f3/4/2020\n\nRegisters as \u201cDefault Print Monitor\u201d, but is a malicious downloader. Meet DePriMon | WeLiveSecurity\n\nAdministrator rights are required for creating this registry key.\n\nAt system startup, the registered DLL will be loaded by spoolsv.exe with SYSTEM privileges,\nwhich, combined with the uniqueness of this method, makes this technique very effective for\nattackers.\n\nThe second stage checks regularly whether there is a \ufb01le in the %system32% folder with the\nsame name as the third stage DLL \ufb01le but without the \u201c.dll\u201d extension. This \ufb01le serves as an\nuninstallation trigger \u2013 should DePriMon \ufb01nd it, it removes both this \ufb01le and its own components\nin a secure way by overwriting the binaries and then deleting them.\n\nStage three\n\nThe third stage, responsible for downloading the main payload(s) from DePriMon\u2019s operators,\nalso implements some interesting techniques.\n\nFor C&C communication, it uses the Microsoft implementation of SSL/TLS, Secure Channel,\ninstead of common APIs like WinHTTP or WinInet. Its con\ufb01guration is very complex, as is the way\nthe malware handles it. Finally, the authors have put signi\ufb01cant effort into encryption, making the\nDePriMon malware more dif\ufb01cult to analyze.\n\nC&C communication\n\nDePriMon communicates securely over TLS, however, not on a high level as is a typical scenario\nin malware. The connection is initialized with a Windows socket and can continue with\ninitialization of an authenticated Security Support Provider Interface (SSPI) session with the\nNegotiate / NTLM SSP. After that, DePriMon uses Schannel.\n\nSSPI is used/not used according to a particular \ufb02ag in the con\ufb01guration \ufb01le and can utilize the\nlocal proxy settings of the machine. The implementation is similar to this example provided by\nMicrosoft.\n\nThe malware\u2019s implementation of TLS via Schannel is similar to this example by Coast Research\n& Development. It includes creating credentials, performing the client handshake and verifying the\nserver certi\ufb01cate.\n\nhttps://www.welivesecurity.com/2019/11/21/deprimon-default-print-monitor-malicious-downloader/\n\n2/8\n\n\f3/4/2020\n\nRegisters as \u201cDefault Print Monitor\u201d, but is a malicious downloader. Meet DePriMon | WeLiveSecurity\n\nFigure 1. Part of the SSPI implementation as output by the Hex-Rays decompiler\n\nAfter the communication is established, the third stage encrypts and decrypts messages manually\neach time.\n\nCon\ufb01guration\n\nThe con\ufb01guration data for DePriMon\u2019s third stage has 27 members, which is an unusually large\nnumber for a downloader. It is encrypted with AES-256 and embedded in the binary.\n\nDuring the \ufb01rst run, DePriMon\u2019s third stage (the downloader itself) decrypts the con\ufb01guration data\nwith Key 2 (see the IoCs section), encrypts it with Key 3 and stores the encrypted con\ufb01guration\n\ufb01le in a temporary folder. The \ufb01lename for the con\ufb01guration \ufb01le is created via the following\nprocess: Starting with the second byte, the value of Key 2 is transformed into a number in base\n36 but encoded using custom alphabet \u201cabc\u2026xyz012\u2026789\u201d. The extension of the con\ufb01guration\n\ufb01le is \u201c.tmp\u201d.\n\nAn example of a con\ufb01guration \ufb01le path: %temp%\\rb1us0wm99sslpa1vx.tmp.\n\nDuring the second run, the downloader reads the con\ufb01guration data from the \ufb01le, not from itself \u2013\nthis way, the attacker can easily update the con\ufb01guration.\n\nThanks to its secure design, the con\ufb01guration is not left in memory in unencrypted form. Every\ntime the downloader needs to use some element of the con\ufb01guration \ufb01le, it decrypts the\ncon\ufb01guration \ufb01le, retrieves the member and encrypts the \ufb01le again.\n\nThis design protects the malware\u2019s primary function \u2013 C&C communication \u2013 against memory\nforensics.\n\nhttps://www.welivesecurity.com/2019/11/21/deprimon-default-print-monitor-malicious-downloader/\n\n3/8\n\n\f3/4/2020\n\nRegisters as \u201cDefault Print Monitor\u201d, but is a malicious downloader. Meet DePriMon | WeLiveSecurity\n\nFigure 2. Part of the code as seen by the Hex-Rays decompiler, which illustrates how the DePriMon malware\ndecrypts the con\ufb01guration \ufb01le, saves a few members to local variables and encrypts it again\n\nOf interest in the con\ufb01guration \ufb01le are:\n\nTwo entries for usernames and two members for passwords \u2013 for the proxy server if it is set\non the machine. It means attackers are preparing to further their attack via a proxy with\ncredentials. However, we haven\u2019t seen functionality for stealing these details, so it appears\nthat it is done in another phase of the attack.\nThree entries for three C&C servers \u2013 each of them used on a different occasion.\nThree entries for three ports \u2013 each of them used on a different occasion.\nFlags indicating whether the downloader initializes a connection through Security Support\nProvider Interface (SSPI) with a possible proxy or only with a socket (described later).\n\nIt should be noted that besides C&C servers extracted from malware samples, we identi\ufb01ed\nadditional domains and servers likely related to this malware.\n\nEncryption\n\nThe malware uses the AES encryption algorithm with three different 256-bit keys for different\npurposes (these keys are listed in the IoCs section).\n\nKey 1: For decryption of various sensitive strings in the malware.\nKey 2: For encryption and decryption of the con\ufb01guration data in memory (as described\nearlier). This key is also used to generate the third key.\nKey 3: For encryption and decryption of the con\ufb01guration \ufb01le on disk.\n\nhttps://www.welivesecurity.com/2019/11/21/deprimon-default-print-monitor-malicious-downloader/\n\n4/8\n\n\f3/4/2020\n\nRegisters as \u201cDefault Print Monitor\u201d, but is a malicious downloader. Meet DePriMon | WeLiveSecurity\n\nThis key is not hardcoded but derived using a 32-byte array which is then encrypted. The array is\ngenerated as follows: the \ufb01rst 4 bytes are the volume serial number of the system drive, and the\nremaining 28 bytes contain the values 5 \u2013 32. This array is encrypted with Key 2, resulting in Key\n3.\n\nConclusion\n\nDePriMon is an unusually advanced downloader whose developers have put extra effort into\nsetting up the architecture and crafting the critical components.\n\nDePriMon is downloaded to memory and executed directly from there as a DLL using the\nre\ufb02ective DLL loading technique. It is never stored on disk. It has a surprisingly extensive\ncon\ufb01guration \ufb01le with several interesting elements, its encryption is properly implemented and\nprotects the C&C communication effectively.\n\nAs a result, DePriMon is a powerful, \ufb02exible and persistent tool designed to download a payload\nand execute it, and to collect some basic information about the system and its user along the way.\n\nIndicators of Compromise (IoCs)\n\nESET detection names\n\nWin32/DePriMon\nWin64/DePriMon\n\nSHA-1 hashes\n\n02B38F6E8B54885FA967851A5580F61C14A0AAB6\n03E047DD4CECB16F513C44599BF9B8BA82D0B7CB\n0996C280AB704E95C9043C5A250CCE077DF9C8B2\n15EBE328A501B1D603E66762FBB4583D73E109F7\n1911F6E8B05E38A3C994048C759C5EA2B95CE5F7\n2B30BE3F39DEF1F404264D8858B89769E6C032D9\n2D80B235CDF41E09D055DD1B01FD690E13BE0AC7\n6DB79671A3F31F7A9BB870151792A56276619DC1\n6FAB7AA0479D41700981983A39F962F28CCFBE29\n7D0B08654B47329AD6AE44B8FF158105EA736BC3\n7E8A7273C5A0D49DFE6DA04FEF963E30D5258814\n8B4F3A06BA41F859E4CC394985BB788D5F76C85C\n94C0BE25077D9A76F14A63CBF7A774A96E8006B8\n968B52550062848A717027C512AFEDED19254F58\n9C4BADE47865E8111DD3EEE6C5C4BC83F2489F5B\nAA59CB6715CFFF545579861E5E77308F6CAEAC36\nC2388C2B2ED6063EACBA8A4021CE32EB0929FAD2\nCA34050771678C65040065822729F44B35C87B0C\nD38045B42C7E87C199993AB929AD92ADE4F82398\n\nhttps://www.welivesecurity.com/2019/11/21/deprimon-default-print-monitor-malicious-downloader/\n\n5/8\n\n\f3/4/2020\n\nRegisters as \u201cDefault Print Monitor\u201d, but is a malicious downloader. Meet DePriMon | WeLiveSecurity\n\nE272FDA0E9BA1A1B8EF444FF5F2E8EE419746384\nE2D39E290201010F49652EE6116FD9B35C9AD882\nF413EEE3CFD85A60D7AFC4D4ECC4445BB1F0B8BC\n\nDomains\n\nDomain\n\nIP address\n\nimg.dealscienters[.]net 138.59.32.72\n\nteknikgorus[.]com\n\n88.119.179.17\n\nwnupdnew[.]com\n\n190.0.226.147\n\nbabmaftuh[.]com\n\n185.56.89.196\n\nalwatantrade[.]com\n\n188.241.60.109\n\nshayalyawm[.]com\n\n5.226.168.124\n\nelehenishing[.]com\n\n185.225.17.77\n\nalmawaddrial[.]com\n\n46.151.212.202\n\nmdeastserv[.]com\n\n46.151.212.201\n\nKeys \u2013 example\n\nKey 1: C097CF17DC3303BC8155534350464E50176ACA63842B0973831D8C6C8F136817\nKey 2: 8D35913F80A23E820C23B3125ABF57901BC9A7B83283FB2B240193ABDEDE52B9\nKey 3: Derived as described earlier.\n\nFilenames\n\ndpnvmrs.dll\nhp3mlnv.dll\nhp4mlnv.dll\nhp5nhd.dll\nhp6nhd.dll\nhpjdnb64.dll\nhpmdnel3b.dll\nifssvc.dll\nifssvcmgr.dll\nmsprtmon64.dll\nmsptromn.dll\nplamgr.dll\nppcrlchk.dll\nppcrlupd.dll\nprntapt.dll\n\nhttps://www.welivesecurity.com/2019/11/21/deprimon-default-print-monitor-malicious-downloader/\n\n6/8\n\n\f3/4/2020\n\nRegisters as \u201cDefault Print Monitor\u201d, but is a malicious downloader. Meet DePriMon | WeLiveSecurity\n\nprntqdl64.dll\npscript6f.dll\npscript6s.dll\nshprn64.dll\nstprn32.dll\nwinmnprt.dll\n\nMITRE ATT&CK techniques\n\nTactic\n\nID\n\nName\n\nDescription\n\nPersis\u2010\ntence\n\nDefense\nEvasion\n\nT1013 Port Monitors\n\nDePriMon installs one of its components as a\nport monitor for achieving persistence.\n\nT1036 Masquerading\n\nT1107 File Deletion\n\nDePriMon places its components into the Sys\u2010\ntem32 folder with names mimicking common\nsystem DLLs.\n\nDePriMon can delete itself securely by overwrit\u2010\ning its \ufb01les with random data and then deleting\nthem.\n\nT1112 Modify Registry DePriMon adds registry entry in HKLM\\SYS\u2010\n\nTEM\\CurrentControlSet\\Control\\Print\\Monitors\nto achieve persistence.\n\nT1134 Access Token\nManipulation\n\nDePriMon obtains a user token for obtaining in\u2010\nformation about the proxy settings on the\nmachine.\n\nT1140 Deobfuscate/De\n\ncode Files or\nInformation\n\nDePriMon encrypts some of its strings and its\ncon\ufb01guration \ufb01le using AES-256.\n\nDiscov\u2010\nery\n\nT1007 System Service\n\nDiscovery\n\nDePriMon can list registered services on the\nsystem.\n\nT1057 Process\n\nDiscovery\n\nDePriMon can list running processes on the\nsystem.\n\nT1082 System Infor\u2010\nmation\nDiscovery\n\nT1124 System Time\n\nDiscovery\n\nDePriMon collects various information about the\nsystem.\n\nDePriMon regularly checks system time and\nperforms various actions based on it, such as\nuninstallation.\n\nT1043 Commonly\nUsed Port\n\nDePriMon uses ports 443 and 8080 for C&C\ncommunication.\n\nCom\u2010\nmand\nAnd\nControl\n\nhttps://www.welivesecurity.com/2019/11/21/deprimon-default-print-monitor-malicious-downloader/\n\n7/8\n\n\f3/4/2020\n\nRegisters as \u201cDefault Print Monitor\u201d, but is a malicious downloader. Meet DePriMon | WeLiveSecurity\n\nTactic\n\nID\n\nName\n\nDescription\n\nT1071 Standard Appli\u2010\n\nDePriMon uses HTTP for C&C communication.\n\ncation Layer\nProtocol\n\nT1090 Connection\n\nProxy\n\nDePriMon uses local proxy settings to make its\ncommunication less suspicious.\n\nESET Research 21 Nov 2019 - 11:30AM\n\nhttps://www.welivesecurity.com/2019/11/21/deprimon-default-print-monitor-malicious-downloader/\n\n8/8\n\n\f"], "URLs": ["https://www.welivesecurity.com/2019/11/21/deprimon-default-print-monitor-malicious-downloader/"], "weight": 0.0}