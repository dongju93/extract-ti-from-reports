{"rule_id": 473, "name": "CozyDuke", "description": "-", "references": [], "File_Names": ["agent_wininet_dl.exe", "atidemgy.bin", "atiicdxx.dat", "atiu9pag.bin", "aticfx32.dll", "observers.dll", "atiode.exe", "atiadlxx.dll", "atioglxx.bin", "amd_opencl32.dll", "amdmftvideodecoder_32.bin", "ativce02.dat", "atiapfxx.exe", "atisamu32.dll", "amdpcom32.bin", "aticalcl.dll", "amdmftdecoder_32.dll", "ativvsva.dat", "amdh264enc32.dll", "autorun_curver.dll", "wininetp.dll", "ovdecode.dll", "atiglpxx.dll", "amdocl_ld32.exe", "amdmiracast.dll", "atiadlxx.bin", "aticfx32.bin", "amdmftvideodecoder_32.dll", "amdocl.bin", "atiesrxx.exe", "atimuixx.dll", "atibtmon.exe", "ativvsvl.dat", "ativvaxy_cik.dat", "atidxx32.bin", "relance.fr", "ativvaxy_cik_nd.dat", "amdhdl32.dll", "atidxx32.dll", "atikmdag.sys", "autorun.dll", "clinfo.exe", "152.dll", "autorun_com.dll", "atiodcli.exe", "com.ar", "amdh264enc32.bin", "atieclxx.exe", "atiuxpag.dll", "aticalrt.dll"], "MD5_Hashes": [], "SHA1_Hashes": ["daa651188610fd9c5a6987109e7ee5504d72a35d", "41bb403d2549db95cfc6c851ef92ad26bdf2e906", "1d734a26184005603605aab67eba76d7d5ec3b8c", "365cbfe32a79ce41b049dd85bb30afc51ba1ea6f", "1051f814b33991a1f8e551759ead44b8ee7fc2c9", "034481acd945028f4521cf0eaa3685c6202f9e19", "ac2b5928f46069111f4334f650a7dbf1b5f026d5", "75aeaee253b5c8ae701195e3b0f49308f3d1d932", "6b64ed0f4e39a1c320c7cbd342a93faed9f5df86", "c117608dab3ab632de8110f8981dd7e773c61d05", "37144694cfa953ab7acd376c033beda45cc95f4d", "3f0be1751afa9cb0fdd6bc6fc9874dd880bc8c1b", "443bc2e77b10ae64af6321c2c7bfd311c0772503", "42cfe068b0f476198b93393840d400424fd77f0c", "c3fde950fe7d668805b40b1680d519f20c18b899", "cebcf2f495c3b95138128d0577dcac5cde29490d", "4975293c49ca223013088e51b8378e935322fe93", "6b5ef7b76b35203dd323af49bfa27cfa7e1b6376", "a38ea2533e3dfa6339726aafd4bc2bc7e3eec529", "42fadc443025a132f833a4a5ed8a5350f79a86cc", "c8fe2296565c211e019cdad3918a5736d4b12d44", "56ac317ed78f8016d59cb41e9283b1c08cbf149f", "26d030c93c517d63147f502bf6536c3914698821", "d12e4f164a4734e8136da85001750157014d012c", "a99d8313876015fcf1b783d38fee9e9c3cde088c", "8ad2003b99d92dfb9d85912ee6a39c46b1ec8137", "a7a00f35797db2db9302625be456671911896d27", "c5ef4c31693845d492285e5f1c7ff3c293f99976", "5d4535df615a30b87b57facf4babf8d506e86a07", "8bc2d5aa1f384d56f3e921bce5326de8ff4dce2d", "8cc326473fd30ab5c97709e5a91fb04e18e72e96", "b26bc0a3e35c474f7099bd2b066f1680f3394b14", "7cda99eefb5150b87278f9bcf6ac0bde534b99e8", "5d3b82cdea4ae066efd5d127c7dd222adee62d0b", "00f67deb6e435c68f8a39336c9effc45d395b134", "69c82f6ca382bd2205d55b89f2e842b4790bda62", "d89fc09f1aa72547d4b7f022470b6c8362997a5f", "cb7652aede9b1b7d756019f44c25fb0263498313", "feb9424386af47d550b13614c78530bc06ec876e", "ce9d077349638ffd3e1ad68cda76c12cfb024069", "f7693e5d39db067d97cd91fb22522f94c59fda3d", "80935ac2ab3cf5b2900b49f6982a6a3f4575367c", "caa1083d2f20be0858e8d3d0671c042d0455a657", "31163d35c5a3caa5e82e1d9b0d1b4db8fbdd79fa", "7c710cf31f20ef7e0ad1809672255d4edfdff052", "33beb7a410f1cd699733000b5b30b5e4eb2062ba", "7c79e3205323b9917f9eedcd3d5a891d87ddf256", "5ffe420a3cc848024884db8e2cfed68c47368dae", "55bd71353408cdda1bdbbd54bc70b4c595d70e56", "ba29768a2452a0e3abde02a903e53a181ee05bc8", "8f467b32f1ec0f3b2efe10b3fed2a14b16075702", "259b4679c26625c452141861014fe2f2c336462b", "3b297f0ca7750c0c74e5f931fec1528fe1ba6bc9", "9319bf72000f8e468c182947dd5c82fb8b9ae419", "fb1b1dc288d68f695f88c5ac036b3ab1c4f5e850", "3c8ba7ca3675ecc75855a58b9c0527d067c88f86", "29a91e7823046f4ec3fd6b3fd1b442eaa92f3565", "3583647ef8158e29e3c18413ece70c2851720926", "662d3cb303450abae2b88699c7f48d74f84f0d5a", "883292f00e5836f99a1943a6e0164d8c6c124478", "efd41300ccf4143d04664715e1de98cb416ffdd1", "94520b93510db0dc10387a65e0a46f45ab501226", "4a16674c799fae6535c82f878f6a37f94ee9a49b", "29686320a3f06030f7192ca5b4f3eb47e73cb470", "8ba7932a40008881a4ed975f52271c0b679eaff2", "44406a80f13045442ce6a28ee62a923ac8f8c56a", "e2d0edf2e7d4a09fad732d4113d970a56e9a6667", "c02b8c2bc15dd8a7110e5f1765716464bf421591", "81affba765aa87a0d0b12b5a213f09fd51e1e9a1", "c62e840ffe4bba50f6584b33a877475f0ebcf558", "669b7c98f0f697b91e95804dacdfe55fae3f0a85", "75e03a17d49d1b052770a21520bc13b14fc6c607", "b2b2e5c5a6f8a07f051aab14fbec1f6607888b50", "0a38765d599865dabc394287e61f5e8f6ac442c5", "f38040c70024fe9e305af5a3687e0d5993bb9e96", "b47e711845d03c389004c912b3fbfc59228bb18c", "210bc99275368df7ea179055737cffc3a12a6614", "975b86c329c537f763f94a3f12610304dd358ff8", "c7b91ff3cc69dab807016aa76d0c261411ccf27d", "9e156f41ff9c17692c9eba5bdb67ac14f0c0473f", "d5cbf554e4e700b37ddcb026d4407fcd87032d87", "43a979aa6ab08685d9ce949c67e19bebbb3c3559", "1e02eea130d17b9afb712d846612ab8bd6972183", "d3254f1f4c4def8c023982dfb28fa31e91b69ab5", "8f1ac45360196a7b5a1680ff839a131394e9d9b4", "08facf0ae484f5bc7b066bbdd382e683fdfcba77", "9dc6bbc34933ffecbfbb454788bab4230fcc2c65", "3a624b196576b03d327b43247a975da44688ffda", "6502bffbd1324071c7461c50a2552e48084560ae", "7765a0869530c1a17b8fd339bbe55cc4c1bdba30", "9f8f1672594a6fbac43793c857dd7718e75f328a", "5bcd74e0c3c661580201e7d8122d7525a1480b4c", "1a3825ef1064c2bbea5169671ef62030b00875ca", "b5e973df0a159ab583fc8923c796c8cbf5b535df", "71c59eaa445346251467942bac489a9d4e807f7f", "2564d7d42384bd3dce7257ef4a0a4b0cedac635b"], "SHA256_Hashes": [], "Registry_Entries": ["HKLM\\Software\\Microsoft\\Windows\\\n\nCurrentVersion\\Run\\\n\n\u2022  HKCU\\Software\\Microsoft\\Windows\\\n\nCurrentVersion\\Run\\\n\n\u2022  HKLM\\Software\\Microsoft\\Windows\\\nCurrentVersion\\Policies\\Explorer\\Run\n\u2022  HKCU\\Software\\Microsoft\\Windows\\\nCurrentVersion\\Policies\\Explorer\\Run\n\nThe name of the registry value will usually be the \nfilename, (without the extension) of the CozyDuke main \ncomponent.\n\nCozyDuke may also register itself as a Windows service \nor scheduled task. Additionally, CozyDuke may \nutilize a technique known as COM-object hijacking \n[1] to establish persistence. To achieve this, CozyDuke \nwill \u201chijack\u201d the registry entries for the COM object \n\u201cSharedTaskScheduler\u201d. CozyDuke will modify the \nregistry entries in such a way that any loading of the \nSharedTaskScheduler COM object will first load a special \nCozyDuke module that will ensure CozyDuke stays active \non the victim host.\n\nConfiguration data\n\nThe configuration data for CozyDuke is stored as a \nseparate RC4-encrypted file that is written to disk by the \nCozyDuke dropper during initial infection. The name of \nthe encrypted configuration file on disk has been racss.\ndat in all of the observed cases. The decrypted file is \nformatted as XML with the UTF-16LE character encoding.\n\nFIGURE 3: SCREENSHOT OF A DECRYPTED COZYDUKE CONFIGURATION FILE\n\nCOZYDUKE  Malware analysis\f5\n\nTABLE 1: DETAILS OF KNOWN COZYDUKE C&C SERVERS \n\nDropper SHA1\n\nProtocol\n\nDomain/IP\n\nPath\n\nPort\n\n75aeaee253b5c8ae701195e3b0f49308f3d1d932\n\n75aeaee253b5c8ae701195e3b0f49308f3d1d932  \n\n446daabb7ac2b9f11dc1267fbd192628cc2bac19  \n\n87668d14910c1e1bb8bbea0c6363f76e664dcd09\n\n87668d14910c1e1bb8bbea0c6363f76e664dcd09\n\nea0cfe60a7b7168c42c0e86e15feb5b0c9674029\n\nf2ffc4e1d5faec0b7c03a233524bb78e44f0e50b\n\n9b56155b82f14000f0ec027f29ff20e6ae5205c2\n\n9b56155b82f14000f0ec027f29ff20e6ae5205c2\n\nbf265227f9a8e22ea1c0035ac4d2449ceed43e2b\n\n32b0c8c46f8baaba0159967c5602f58dd73ebde9\n\n78e9960cc5819583fb98fb619b33bff7768ee861\n\n78e9960cc5819583fb98fb619b33bff7768ee861\n\nce9d077349638ffd3e1ad68cda76c12cfb024069\n\nac2b5928f46069111f4334f650a7dbf1b5f026d5\n\nac2b5928f46069111f4334f650a7dbf1b5f026d5\n\nbf9d3a45273608caf90084c1157de2074322a230\n\nNote: Domain names intentionally broken\n\nHTTP\n\nHTTP\n\nHTTP\n\nHTTPS\n\nHTTPS\n\nHTTPS\n\nHTTPS\n\nHTTPS\n\nHTTPS\n\nHTTPS\n\nHTTPS\n\nHTTPS\n\nHTTPS\n\nHTTPS\n\nHTTPS\n\nHTTPS\n\nHTTPS\n\nwww.sanjosemaristas. com\n\n/app/index.php\n\nwww.cifss. org\n\npvt.relance.fr\n\n200.119.128.45\n\n202.206.232.20\n\n/product_thumb/index.php\n\n/catalogue/json/index.php\n\n /mobile.php\n\n/rss.php\n\nwww.getiton.hants. org.uk\n\n/themes/front/img/ajax.php\n\nwww.seccionpolitica. com.ar\n\n/galeria/index.php\n\n200.125.133.28\n\n200.125.142.11\n\n203.156.161.49\n\n209.40.72.2\n\n210.59.2.20\n\n121.193.130.170\n\n208.75.241.246\n\n183.78.169.5\n\n201.76.51.10\n\n208.77.177.24\n\n/search.php\n\n/news.php\n\n/plugins/twitter.php\n\n/plugins/fsearch.php\n\n/search.php\n\n/wp-ajax.php\n\n/msearch.php\n\n/search.php\n\n/plugins/json.php\n\n/fsearch.php\n\n80\n\n80\n\n80\n\n443\n\n443\n\n80\n\n80\n\n443\n\n443\n\n443\n\n443\n\n443\n\n443\n\n443\n\n443\n\n443\n\n443\n\nIn all CozyDuke samples from 2015, the configuration \ndata has been encrypted with the RC4 key B5 78 62 52 98 \n3E 24 D7 3B C6 EE 7C B9 ED 91 62. In CozyDuke samples \nfrom July of 2014, the RC4 key has been embedded in the \nencrypted configuration file. In this case, the encrypted \nconfiguration file will begin with a 4-byte value specifying \nthe length of the included RC4 key. This will be followed \nby the actual key. Finally, the rest of the file will be the \nactual configuration data.\n\nCommand and control communication\n\nCozyDuke\u2019s main method of communicating with its \ncommand and control server is using either HTTP or \nHTTPS. The method of communication, as well as the \naddress to connect to, are specified in CozyDuke\u2019s \nconfiguration data. In the cases we have observed, the \nconfiguration data for any single CozyDuke instance has \nincluded the details of either one or two C&C servers. \nListed above are details of known CozyDuke C&C servers. \nWe believe all of the ones listed are compromised servers. \n\nIn addition to its main communication method, \nCozyDuke also features the ability to use Twitter as a \nbackup C&C channel. In cases where CozyDuke utilizes \nthis functionality, the twitter account to be used will be \nspecified in CozyDuke\u2019s configuration data. We have only \nobserved two samples where a backup Twitter account \nwas actually specified in the configuration data. These \naccounts were @US2515 and @monkey_drive. \n\nTasks\n\nCozyDuke\u2019s primary purpose is the execution of tasks. \nThese tasks usually involve the execution of modules or \nexecutables providing additional functionality. The main \ndifference between the two is that modules are DLL files \nloaded in memory by the CozyDuke main component, \nwhereas executables are PE executable files that \nCozyDuke will write to disk and execute.\n\nFor the purpose of managing tasks, the main component \nof CozyDuke implements 6 commands that the C&C \nserver can specify. These commands are briefly described \nin Table 2 (overleaf).\n\n   REFERENCE\n\nI.   GData; Paul Rascagneres; COM Object hijacking: the discreet way of persistence: An Analysis of a new persistence mechanism in the wild; \n\npublished 30.10.2014; https://blog.gdatasoftware.com/blog/article/com-object-hijacking-the-discreet-way-of-persistence.html\n\nCOZYDUKE  Malware analysis\f6\n\nTABLE 2: 6 COZYDUKE  \nC&C SERVER COMMANDS\n\nCommand\nAdd\nDelete\nStop\nModify\nUpload\nDownload\n\nPurpose\nAdd task\nDelete task\nStop task\nModify task or configuration\nUpload data\nDownload data\n\nThe following chapter, CozyDuke Tasks, provides further \ninformation on the tasks CozyDuke has been observed \nexecuting.\n\nCOZYDUKE TASKS\n\nBased on samples obtained from our own collections \nand generously shared to us by a trusted source, we \nhave been able to identify some of the tasks executed \nrecently by CozyDuke. These tasks can be divided into \ntwo categories. The first consists of CozyDuke modules \nwhich are DLL files loaded in memory by the main \ncomponent of CozyDuke for the purposes of extending \nCozyDuke\u2019s functionality. The second category consists \nof PE executable files that CozyDuke will write to disk \nand execute on the infected host. These executables are \nusually droppers similar to those used to infect a host \nwith CozyDuke. In this case, however, instead of dropping \nCozyDuke, the executables may drop other executables, \nscripts or DLLs. Once executed by CozyDuke, these \nexecutables function independently of CozyDuke\u2019s main \ncomponent.\n\nModules\n\nListed below are the modules we have observed being \nused:\n\nTABLE 3: COZYDUKE MODULES\n\nModule Type\nCommand \nexecution \nmodule\nPassword stealer \nmodule\nNTLM stealer \nmodule\n\nSystem info \nmodule\n\nScreenshot \nmodule\n\nPurpose\nCan be used to execute arbitrary \ncommands by invoking C:\\\nWindows\\System32\\cmd.exe\nWill attempt to harvest stored \ncredentials from the victim\nWill attempt to harvest credentials \nstored on the victim host that are \nused as part of Windows NTLM user \nauthentication \nWill attempt to gather \ncomprehensive information on the \nvictim host\u2019s configuration\nWill take a screenshot of the victim \nhost\n\nExecutables\n\nWe have observed executables executed by CozyDuke for \nthe following purposes:\n\n\u2022  Dropping and executing scripts for collecting \ninformation and credentials from the victim \norganization\u2019s Active Directory environment\n\n\u2022  Dropping and executing scripts for further \n\npenetrating the victim organization with the help \nof commonly available tools such as Mimikatz and \nPSExec\n\n\u2022  Dropping and executing additional malware with \nthe same file and export naming conventions \nas OnionDuke and the same string encryption \nalgorithm as OnionDuke\n\nThese executables will implement their own methods of \nC&C communication and data exfiltration. In many cases, \nthe scripts utilized Microsoft OneDrive accounts for data \ntransfer.\n\nCOZYDUKE EVOLUTION\nThe earliest CozyDuke sample we have observed so far \nwas compiled on the 29th of December, 2011. The sample \nin question was not an actual CozyDuke main component, \nbut a CozyDuke module. The earliest main component \nwe observed was compiled on the 29th of February, 2012. \nThe main component in question stores its strings and \nconfiguration in an unencrypted form. Additionally, the \nconfiguration is stored embedded in the binary, not as \na separate XML file in the manner of newer CozyDuke \nversions. Even this oldest main component does however \nuse XML for other purposes via the open-source Pugi-XML \nlibrary. \n\nThe next CozyDuke main component we observed \nwas compiled on the 30th of November, 2012. By then, \nthe authors had switched to encrypting the strings \nand the configuration. However, the configuration \nwas still stored embedded in the binary. Design-wise, \nthis sample is a bit of an outlier. Instead of being a DLL \nfile, the main component is actually an EXE that, in \naddition to the configuration, embeds multiple DLLs that \nprovide additional functionality to the main component. \nApart from the different design, functionally the main \ncomponent is very similar to other CozyDuke main \ncomponents. It is possible the authors of CozyDuke were \ntrying out a new design, but eventually decided to go \nback to the original.\n\nThe next CozyDuke main component we observed, \ncompiled on the 2nd of July, 2014, is again a DLL file.  \nBy now, the authors of CozyDuke had switched from  \n\nCOZYDUKE  Malware analysis\fFIGURE 4: TIMELINE OF COZYDUKE EVOLUTION\n\n30/11/12 \nExecutable CozyDuke main component \n426KB EXE  \nEncrypted strings \nEncrypted embedded configuration\n\n29/12/11 \nOldest known CozyDuke module  \nUnencrypted strings\n\n7\n\n26/2/15 \nCozyDuke main component \n820KB DLL \nEncrypted strings \nEncrypted external configuration\n\n2012\n\n2013\n\n2014\n\n2015\n\n29/2/12 \nOldest known CozyDuke main module  \n266KB DLL  \nUnencrypted strings \nUnencrypted embedded configuration\n\n2/7/14 \nCozyDuke main component \n279KB DLL \nEncrypted strings \nEncrypted external configuration\n\nan embedded configuration to the external XML-\nformatted configuration file seen today. We have yet to \nobserve samples from 2013, but we believe CozyDuke to \nhave been under active development as well during that \nyear. Between 2012 and 2014, the authors of CozyDuke \nappear to have performed significant refactoring of \nthe CozyDuke codebase, even though functionally the \ndifferences are smaller. Examples of this refactoring \ninclude for instance the switch from using the Pugi-XML \nlibrary to using Microsoft\u2019s MSXML 3.0 for XML-related \nfunctionality.\n\nThe latest CozyDuke main component we observed \nwas compiled on the 26th of February, 2015. The core \nfunctionality of the latest sample is very similar to the \nprevious sample from July of 2014, but the authors \nof CozyDuke have implemented a lot of additional \nfunctionality, as the increase in size from 279KB to 820KB \nwould also suggest.\n\nCOZYDUKE TERMINOLOGY AND NAMING\nBased on logging strings, variable naming and PDB strings \nfound in CozyDuke samples, we observed the following:\n\n\u2022  The internal name for CozyDuke is \u201cAgent\u201d\n\n\u2022  The CozyDuke main component\u2019s functionality \n\nrevolves around the execution of \u201ctasks\u201d that are \noften associated with \u201cmodules\u201d\n\n\u2022 \n\nIt is possible that the name \u201cAgent\u201d is not the \noriginal internal name of CozyDuke and that the \nname was changed sometime in 2011 with the \noriginal project name being \u201cAgent_NextGen\u201d\n\n\u2022  Sometime in 2011, CozyDuke was identified \n\ninternally as being version 3\n\nPDB strings found in early CozyDuke samples are listed in \nTable 4 (below).\n\nTABLE 4: COZYDUKE PDB STRINGS\n\nCompilation timestamp PDB string\nMon Feb 13 13:07:04 2012 \n(UTC)\nWed Dec 28 13:23:04 2011 \n(UTC)\nThu Jan 26 13:57:00 2012 \n(UTC)\n\nE:\\Visual Studio 2010\\Projects\\Agent_NextGen\\Agent2011v3\\Agent2011\\Agent\\tasks\\bin\\\nGetPasswords\\exe\\GetPasswords.pdb\nD:\\Projects\\Agent2011\\Agent2011\\Agent\\tasks\\bin\\systeminfo\\exe\\systeminfo.pdb\n\n\\\\192.168.56.101\\true\\soft\\Agent\\tasks\\Screenshots\\agent_screeshots\\Release\\agent_\nscreeshots.pdb\n\nCOZYDUKE  Malware analysis\f8\n\nAPPENDIX A | SAMPLE HASHES\n\u2022  00f67deb6e435c68f8a39336c9effc45d395b134\n\u2022  01d3973e1bb46e2b75034736991c567862a11263\n\u2022  034481acd945028f4521cf0eaa3685c6202f9e19\n\u2022  04aefbf1527536159d72d20dea907cbd080793e3\n\u2022  08facf0ae484f5bc7b066bbdd382e683fdfcba77\n\u2022  0a38765d599865dabc394287e61f5e8f6ac442c5\n\u2022  1051f814b33991a1f8e551759ead44b8ee7fc2c9\n\u2022  1a3825ef1064c2bbea5169671ef62030b00875ca\n\u2022  1d734a26184005603605aab67eba76d7d5ec3b8c\n\u2022  1e02eea130d17b9afb712d846612ab8bd6972183\n\u2022  210bc99275368df7ea179055737cffc3a12a6614\n\u2022  23e20c523b9970686d913360d438c88e6067c157\n\u2022  2564d7d42384bd3dce7257ef4a0a4b0cedac635b\n\u2022  259b4679c26625c452141861014fe2f2c336462b\n\u2022  26d030c93c517d63147f502bf6536c3914698821\n\u2022  29686320a3f06030f7192ca5b4f3eb47e73cb470\n\u2022  29a91e7823046f4ec3fd6b3fd1b442eaa92f3565\n\u2022  31163d35c5a3caa5e82e1d9b0d1b4db8fbdd79fa\n\u2022  32b0c8c46f8baaba0159967c5602f58dd73ebde9\n\u2022  33beb7a410f1cd699733000b5b30b5e4eb2062ba\n\u2022  3583647ef8158e29e3c18413ece70c2851720926\n\u2022  365cbfe32a79ce41b049dd85bb30afc51ba1ea6f\n\u2022  37144694cfa953ab7acd376c033beda45cc95f4d\n\u2022  3a624b196576b03d327b43247a975da44688ffda\n\u2022  3b297f0ca7750c0c74e5f931fec1528fe1ba6bc9\n\u2022  3c8ba7ca3675ecc75855a58b9c0527d067c88f86\n\u2022  3f0be1751afa9cb0fdd6bc6fc9874dd880bc8c1b\n\u2022  41bb403d2549db95cfc6c851ef92ad26bdf2e906\n\u2022  42cfe068b0f476198b93393840d400424fd77f0c\n\u2022  42fadc443025a132f833a4a5ed8a5350f79a86cc\n\u2022  43a979aa6ab08685d9ce949c67e19bebbb3c3559\n\u2022  443bc2e77b10ae64af6321c2c7bfd311c0772503\n\u2022  44406a80f13045442ce6a28ee62a923ac8f8c56a\n\u2022  482d1624f9450ca1c99926ceec2606260e7ce544\n\u2022  4975293c49ca223013088e51b8378e935322fe93\n\u2022  49fb759d133eeaab3fcc78cec64418e44ed649ab\n\u2022  4a16674c799fae6535c82f878f6a37f94ee9a49b\n\u2022  5150174a4d5e5bb0bccc568e82dbb86406487510\n\u2022  55bd71353408cdda1bdbbd54bc70b4c595d70e56\n\u2022  56ac317ed78f8016d59cb41e9283b1c08cbf149f\n\u2022  5bcd74e0c3c661580201e7d8122d7525a1480b4c\n\u2022  5d3b82cdea4ae066efd5d127c7dd222adee62d0b\n\u2022  5d4535df615a30b87b57facf4babf8d506e86a07\n\u2022  5ffe420a3cc848024884db8e2cfed68c47368dae\n\u2022  6502bffbd1324071c7461c50a2552e48084560ae\n\u2022  662d3cb303450abae2b88699c7f48d74f84f0d5a\n\u2022  669b7c98f0f697b91e95804dacdfe55fae3f0a85\n\u2022  69c82f6ca382bd2205d55b89f2e842b4790bda62\n\u2022  6b5ef7b76b35203dd323af49bfa27cfa7e1b6376\n\u2022  6b64ed0f4e39a1c320c7cbd342a93faed9f5df86\n\u2022  71c59eaa445346251467942bac489a9d4e807f7f\n\u2022  75aeaee253b5c8ae701195e3b0f49308f3d1d932\n\u2022  75e03a17d49d1b052770a21520bc13b14fc6c607\n\u2022  7765a0869530c1a17b8fd339bbe55cc4c1bdba30\n\u2022  78e9960cc5819583fb98fb619b33bff7768ee861\n\u2022  7c710cf31f20ef7e0ad1809672255d4edfdff052\n\u2022  7c79e3205323b9917f9eedcd3d5a891d87ddf256\n\u2022  7cda99eefb5150b87278f9bcf6ac0bde534b99e8\n\u2022  80935ac2ab3cf5b2900b49f6982a6a3f4575367c\n\u2022  81affba765aa87a0d0b12b5a213f09fd51e1e9a1\n\u2022  87668d14910c1e1bb8bbea0c6363f76e664dcd09\n\u2022  883292f00e5836f99a1943a6e0164d8c6c124478\n\u2022  8ad2003b99d92dfb9d85912ee6a39c46b1ec8137\n\n\u2022  8b357ff017df3ed882b278d0dbbdf129235d123d\n\u2022  8ba7932a40008881a4ed975f52271c0b679eaff2\n\u2022  8bc2d5aa1f384d56f3e921bce5326de8ff4dce2d\n\u2022  8c3ed0bbdc77aec299c77f666c21659840f5ce23\n\u2022  8cc326473fd30ab5c97709e5a91fb04e18e72e96\n\u2022  8f1ac45360196a7b5a1680ff839a131394e9d9b4\n\u2022  8f467b32f1ec0f3b2efe10b3fed2a14b16075702\n\u2022  9319bf72000f8e468c182947dd5c82fb8b9ae419\n\u2022  93d53be2c3e7961bc01e0bfa5065a2390305268c\n\u2022  93ee1c714fad9cc1bf2cba19f3de9d1e83c665e2\n\u2022  94520b93510db0dc10387a65e0a46f45ab501226\n\u2022  975b86c329c537f763f94a3f12610304dd358ff8\n\u2022  9b56155b82f14000f0ec027f29ff20e6ae5205c2\n\u2022  9dc6bbc34933ffecbfbb454788bab4230fcc2c65\n\u2022  9e156f41ff9c17692c9eba5bdb67ac14f0c0473f\n\u2022  9f8f1672594a6fbac43793c857dd7718e75f328a\n\u2022  a38ea2533e3dfa6339726aafd4bc2bc7e3eec529\n\u2022  a7a00f35797db2db9302625be456671911896d27\n\u2022  a99d8313876015fcf1b783d38fee9e9c3cde088c\n\u2022  ac2b5928f46069111f4334f650a7dbf1b5f026d5\n\u2022  b26bc0a3e35c474f7099bd2b066f1680f3394b14\n\u2022  b2b2e5c5a6f8a07f051aab14fbec1f6607888b50\n\u2022  b47e711845d03c389004c912b3fbfc59228bb18c\n\u2022  b5e973df0a159ab583fc8923c796c8cbf5b535df\n\u2022  ba29768a2452a0e3abde02a903e53a181ee05bc8\n\u2022  bdd2bae83c3bab9ba0c199492fe57e70c6425dd3\n\u2022  bf265227f9a8e22ea1c0035ac4d2449ceed43e2b\n\u2022  bf9d3a45273608caf90084c1157de2074322a230\n\u2022  c02b8c2bc15dd8a7110e5f1765716464bf421591\n\u2022  c117608dab3ab632de8110f8981dd7e773c61d05\n\u2022  c3d8a548fa0525e1e55aa592e14303fc6964d28d\n\u2022  c3fde950fe7d668805b40b1680d519f20c18b899\n\u2022  c5ef4c31693845d492285e5f1c7ff3c293f99976\n\u2022  c62e840ffe4bba50f6584b33a877475f0ebcf558\n\u2022  c6472898e9085e563cd56baeb6b6e21928c5486d\n\u2022  c7b91ff3cc69dab807016aa76d0c261411ccf27d\n\u2022  c8fe2296565c211e019cdad3918a5736d4b12d44\n\u2022  caa1083d2f20be0858e8d3d0671c042d0455a657\n\u2022  cb7652aede9b1b7d756019f44c25fb0263498313\n\u2022  ccf83cd713e0f078697f9e842a06d624f8b9757e\n\u2022  ce9d077349638ffd3e1ad68cda76c12cfb024069\n\u2022  cebcf2f495c3b95138128d0577dcac5cde29490d\n\u2022  d12e4f164a4734e8136da85001750157014d012c\n\u2022  d3254f1f4c4def8c023982dfb28fa31e91b69ab5\n\u2022  d5cbf554e4e700b37ddcb026d4407fcd87032d87\n\u2022  d89fc09f1aa72547d4b7f022470b6c8362997a5f\n\u2022  daa651188610fd9c5a6987109e7ee5504d72a35d\n\u2022  e0779ac6e5cc76e91fca71efeade2a5d7f099c80\n\u2022  e2d0edf2e7d4a09fad732d4113d970a56e9a6667\n\u2022  e76da232ec020d133530fdd52ffcc38b7c1d7662\n\u2022  e99a03ebe3462d2399f1b819f48384f6714dcba1\n\u2022  ea0cfe60a7b7168c42c0e86e15feb5b0c9674029\n\u2022  eb851adfada7b40fc4f6c0ae348694500f878493\n\u2022  efd41300ccf4143d04664715e1de98cb416ffdd1\n\u2022  f2ffc4e1d5faec0b7c03a233524bb78e44f0e50b\n\u2022  f33c980d4b6aaab1dc401226ab452ce840ad4f40\n\u2022  f38040c70024fe9e305af5a3687e0d5993bb9e96\n\u2022  f7693e5d39db067d97cd91fb22522f94c59fda3d\n\u2022  f7d47c38eca7ec68aa478c06b1ba983d9bf02e15\n\u2022  fb1b1dc288d68f695f88c5ac036b3ab1c4f5e850\n\u2022  feb9424386af47d550b13614c78530bc06ec876e \n\nAPPENDIX A\f9\n\nUser agent strings\n\u2022  Java/1.8.0_25\n\u2022  Java/1.8.0_26\n\u2022 \n\u2022  Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; \n\niTunes/12.0.1 (Windows; N)\n\nrv:11.0) like Gecko\n\n\u2022  Mozilla/5.0 (Windows NT 6.1; WOW64; rv:32.0) \n\nGecko/20100101 Firefox/32.0\n\n\u2022  Mozilla/5.0 (Windows NT 6.1; WOW64) \n\nAppleWebKit/537.36 (KHTML, like Gecko) Chrome \n/34.0.1847.137 Safari/537.36\n\nMutexes\n\u2022  Mtx\n\u2022  qdfrty\n\u2022  AgentMutex \n\nAPPENDIX B:  IOCS\n\nFilenames\n\n(Note: we believe many of these to be borrowed from \nlegitimate files)\n\n agent_wininet_dl.exe\n\n\u2022 \n\u2022  amdh264enc32.bin\n\u2022  amdh264enc32.dll\n\u2022  amdhcp32.dll\n\u2022  amdhdl32.dll\n\u2022  amdmftdecoder_32.dll\n\u2022  amdmftvideodecoder_32.bin\n\u2022  amdmftvideodecoder_32.dll\n\u2022  amdmiracast.dll\n\u2022  amdocl_as32.exe\n\u2022  amdocl.bin\n\u2022  amdocl_ld32.exe\n\u2022  amd_opencl32.dll\n\u2022  amdpcom32.bin\n\u2022  atiadlxx.bin\n\u2022  atiadlxx.dll\n\u2022  atiapfxx.exe\n\u2022  atibtmon.exe\n\u2022  aticalcl.dll\n\u2022  aticaldd.dll\n\u2022  aticalrt.dll\n\u2022  aticfx32.bin\n\u2022  aticfx32.dll\n\u2022  atidemgy.bin\n\u2022  atidxx32.bin\n\u2022  atidxx32.dll\n\u2022  atieclxx.exe\n\u2022  atiesrxx.exe\n\u2022  atiglpxx.dll\n\u2022  atiicdxx.dat\n\u2022  atikmdag.sys\n\u2022  atimuixx.dll\n\u2022  atiodcli.exe\n\u2022  atiode.exe\n\u2022  atioglxx.bin\n\u2022  atisamu32.dll\n\u2022  atiu9pag.bin\n\u2022  atiuxpag.dll\n\u2022  ativce02.dat\n\u2022  ativvaxy_cik.dat\n\u2022  ativvaxy_cik_nd.dat\n\u2022  ativvsva.dat\n\u2022  ativvsvl.dat\n\u2022  autorun.dll\n\u2022  autorun_com.dll\n\u2022  autorun_curver.dll\n\u2022  clinfo.exe\n\u2022  coinst_13.152.dll\n\u2022  observers.dll\n\u2022  ovdecode.dll\n\u2022  wininetp.dll\n\nAPPENDIX B\f\f"], "URLs": ["https://blog.gdatasoftware.com/blog/article/com-object-hijacking-the-discreet-way-of-persistence.html"], "weight": 0.0}