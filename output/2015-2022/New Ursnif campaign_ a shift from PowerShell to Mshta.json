{"rule_id": 546, "name": "New Ursnif campaign_ a shift from PowerShell to Mshta", "description": "-", "references": [], "File_Names": ["Mshta.exe", "info_03_24.doc", "zoak6.cab", "zoak4.cab", "targen.php", "Index.dll", "index.dll", "zoak2.cab"], "MD5_Hashes": ["8212E2522300EF99B03DFA18437FCA40"], "SHA1_Hashes": [], "SHA256_Hashes": [], "Registry_Entries": ["HKEY_CURRENT_USER\\\\Software\\\\test1\\\\mykey\u201d\n4. Read the newly created registry key\u00a0value\n5. Delete the registry\u00a0key\n6. Pass the read content to the decoder\u00a0routine\n7. Create a new function object where the function body is decoded ASCII data and it takes two arguments as the inputs, namely \u2018u\u2019\u00a0and \u2018c\u2019\n8. Call the newly created function with\u00a0u=\u201c261636e223b616f6a7d3c6f3078607e2e65676271647f2572746e657b6f2d6f636e28647\u00a0\n\n27f627a7c6f687f2f2a307474786\u201d and\u00a0c=0\n\nhttps://www.zscaler.com/blogs/research/new-ursnif-campaign-shift-powershell-mshta\n\n2/5\n\n\u00a0\n\f4/8/2020\n\nNew Ursnif campaign: a shift from PowerShell to Mshta\n\nFigure 3: The deobfuscated index.html\n\nDecoded ASCII data\u00a0analysis\n\nThe decoded ASCII data is another JavaScript and ActiveX code snippet, which is also obfuscatedusing garbage code and random variable names. Upon\nremoval of the obfuscation, it turns out to be performing the following\u00a0operations:\n\n1. Create an XMLHTTP object, stream object, and shell object using\u00a0ActiveX.\n2. Get the path\u00a0%temp% and append index.dll\u00a0(the \ufb01nal payload \ufb01lename)\u00a0to\u00a0it.\n3. Decode the \u2018u\u2019 variable earlier passed as an argument, which turns out to be the \ufb01nal payload\u00a0URL.\n4. Send a GET request to the decoded\u00a0URL.\n5. If the response status is 200 and the operation is complete, it saves the downloaded data to the\u00a0index.dll \ufb01le created\u00a0earlier.\n6. Execute the downloaded DLL\u00a0using regsvr32.\n\nhttps://www.zscaler.com/blogs/research/new-ursnif-campaign-shift-powershell-mshta\n\n3/5\n\n\u00a0\n\f4/8/2020\n\nNew Ursnif campaign: a shift from PowerShell to Mshta\n\nFigure 4: Decoded and deobfuscated ASCII\u00a0data\n\nIndex.dll (third and \ufb01nal\u00a0stage)\n\nThe index.dll turns out to be the \ufb01nal and main payload, which is Ursnif. The DLL is executed using regsvr32 as it doesn\u2019t contain any export functions and the\nmalicious code is present within the DllMain routine\u00a0itself.\n\nNote: rundll32 is generally used to execute DLLs, and regsvr32 is mainly meant for COM DLLs. Since no exports are present in this case, we can use regsvr32\nto execute the DllMain routine, which again might be a good way to reduce footprints or even avoid them due to the unpopularity of regsvr32 among malware.\nIf this is not the case, then only the malware author knows.\n\nConclusion\n\nThe banking Trojan\u00a0Ursnif (aka Gozi aka Dreambot) is not new, and it continually resurfaces with new distribution techniques. It appears to be back in a form\ndesigned to leave fewer footprints and avoid detection while trying to steal victim's data. The Zscaler ThreatLabZ team will continue to observe this new\nversion of Ursnif to help keep our customers safe and to monitor whether\u00a0it returns in another\u00a0form.\n\nNewly registered campaign\u00a0domains\n\nhxxp://xolzrorth[.]com\n\nhxxp://grumnoud[.]com\n\nhxxp://gandael6[.]com\n\nhxxp://chersoicryss[.]com\n\nPayload\u00a0URLs\n\nhxxp://xolzrorth[.]com/kundru/targen.php?l=zoak2.cab\n\nhxxp://grumnoud[.]com/kundru/targen.php?l=zoak4.cab\n\nhxxp://gandael6[.]com/kundru/targen.php?l=zoak6.cab\n\nhttps://www.zscaler.com/blogs/research/new-ursnif-campaign-shift-powershell-mshta\n\n4/5\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\n\f4/8/2020\n\nNew Ursnif campaign: a shift from PowerShell to Mshta\n\nhxxp://chersoicryss[.]com/kundru/targen.php?l=zoak2.cab\n\nDownload\u00a0URL:\n\ndoc-00-2o-\ndocs.googleusercontent[.]com/docs/securesc/97lq9pt3pod9mpumel15kp2j33hcurr8/c560lkciidvhh4viucof3ludaoief0m5/1585069725000/11599430631386789056/11599430\n39p5i0k7i0r?e=download&authuser=0&nonce=ua6b0u4p5r3mq&user=11599430631386789056&hash=irhbu94ms0nq978q6ipge2kgosjdll3a\n\nMD5:\n\n8212E2522300EF99B03DFA18437FCA40\n\nhttps://www.zscaler.com/blogs/research/new-ursnif-campaign-shift-powershell-mshta\n\n5/5\n\n\f"], "URLs": ["https://www.zscaler.com/blogs/research/new-ursnif-campaign-shift-powershell-mshta"], "weight": 0.0}