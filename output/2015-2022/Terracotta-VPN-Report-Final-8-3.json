{"rule_id": 300, "name": "Terracotta-VPN-Report-Final-8-3", "description": "-", "references": ["CVE-2014-4113"], "File_Names": ["enemy.pdf", "norman.no", "153.xx", "gds520.com", "fatjse.exes", "evolution.html", "162.xx", "linkedinmember.com", "xiuxiu.web", "xxxxx.net", "mm523.net", "entry.aspx", "dshield.org", "meitu.com", "fatjse.exe", "ipdetails.html", "vxxxxxx.net", "Study.pdf", "nbstat.exe", "wmiexec.py", "vxxxxxx.com", "8800free.info", "rejetto.com", "ThemanyfacesofGh0stRat.pdf"], "MD5_Hashes": ["531d30c8ee27d62e6fbe855299d0e7de", "e421d07c316ab6e04fd0bfa122f1d953", "bccbba3ed45ead051f56fc62fef005a6", "81c08ae40700d863f5dbd35599192962", "ef938cd1594b6b44507c6423cd39d5f5", "E10ADC3949BA59ABBE56E057F20F883E", "7b18614df95e71032909beb25a7b1e87"], "SHA1_Hashes": [], "SHA256_Hashes": ["4575e7fc8f156d1d499aab5064a4832953cd43795574b4c7b9165cdc92993ce5", "ad1a507709c75fe93708ce9ca1227c5fefa812997ed9104ff9adfec62a3ec2bb", "9b8257000b05116a3631630c44b9f6b18c13e5bc5635c1fa3f20a01f70380909", "3a2d5ce9f5f953f0499773a05f26317f9f6745352031bb8dafbb6aadf0e8e57b", "e42b8385e1aecd89a94a740a2c7cd5ef157b091fabd52cd6f86e47534ca2863e", "d7bd289e6cee228eb46a1be1fcdc3a2bd5251bc1eafb59f8111756777d8f373d", "deed6e2a31349253143d4069613905e1dfc3ad4589f6987388de13e33ac187fc"], "Registry_Entries": ["HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Svchost\\Netsvcs \n\nIt finds the first unused (stopped and disabled) service that runs under service process svchost netsvcs. On typical Terracotta \nvictim servers, this has been the FastUserSwitchingCompatibility service, which is a deprecated service left-over from Windows \nXP for compatibility. Since FastUserSwitchingCompatibility it is not an actual service that can run on versions later than Windows \n\n4 https://www.virustotal.com/en/file/9b8257000b05116a3631630c44b9f6b18c13e5bc5635c1fa3f20a01f70380909/analysis/ \n5 A sinkholed domain is one that was used by its owner specifically for malicious activity and thus subject to lawful seizure. Malware that is sinkholed is \nredirected to an analysis system controlled by researchers or law enforcement instead of the criminals.  The sinkhole is then used for intelligence \nresearch and victim notification. \n6 http://www.mcafee.com/us/resources/white-papers/foundstone/wp-know-your-digital-enemy.pdf \n7 https://www.virustotal.com/en/file/3a2d5ce9f5f953f0499773a05f26317f9f6745352031bb8dafbb6aadf0e8e57b/analysis/ \n\n16 \n\n \n \n \n \n                                   \n\fXP, Microsoft has omitted the service description text.  So the Gh0st dropper scans to the next description, and artifacts arising \nfrom that issue include a misspelled and mismatched description for the hijacked FastUserSwitchingCompatibility which is \n\u201cWindows Sxitcway Firewall/Internet Connection Sharing (ICS)\u201d.  A Google search for the word \u201cSxitcway\u201d will reveal other \nmalware that encounters similar platform compatibility problems. \n\nThe dropper installs its service DLL named with five random letters with the following path in the normally hidden ProgramData \ndirectory.  Example: \n\nC:\\ProgramData\\Application Data\\Storm\\update\\%SESSIONNAME%\\hbeya.cc3 \n\nThe Gh0st service DLL binary in this location is approximately 22MB in size, and because the file is generated dynamically, has a \nunique file hash for each installation. \n\nUpon initial execution, the Gh0st RAT dropper is extremely busy, querying for some 75 URLs associated with legitimate antivirus \nvendors; however, no connections are made to these URL for C2.  For control, the RAT connects to the IP found with a DNS \nquery to vps.mm523.net on port 10000 using the same connection string as the \u201ccb1st\u201d variant of Gh0st analyzed by Norman in \n\u201cThe Many Faces of Gh0st\u201d paper here: \n\nhttp://download01.norman.no/documents/ThemanyfacesofGh0stRat.pdf \n\nRSA Research determined that some 240 systems around the world are infected with this Trojan, including approximately 100 \nTerracotta VPN nodes. \n\nGh0st RAT GDS520 \n\nFile Size: 204.5KB \n\nMD5: possibly 81c08ae40700d863f5dbd35599192962 and/or ef938cd1594b6b44507c6423cd39d5f5 \n\nC2: gds520.com:8086 (Active) \n\nFollowing the neutralization of the MM523 Gh0st RAT communication with the RSA Research seizure of its C2 domain, RSA \nResearch observed malicious services installed by a dropper variant very similar to the MM523 Gh0st variant on newly \ncompromised Terracotta victims. While similar to the \u201cGh0st RAT MM523\u201d build, this build we dub GDS520 has a different \nservice DLL location and C2 URL.  The GDS520 sample had been in the wild before the RSA Research sinkholing of mm523.net, \nbased on the date two dropper variants were uploaded to VirusTotal.  Similar to Gh0st RAT MM523, these variants are \ncharacterized by DNS lookups to multiple antivirus vendor update URLs, in addition to the C2 URL, gds520.com over port TCP \nport 8086. The Ghost RAT GDS520 service DLL is named with five random letters and is installed in the following location with \nthe example file name: \n\nC:\\ProgramData\\DRM\\%SESSIONNAME%\\vxujx.cc3 \n\nNotably, the dropper deletes itself after successfully installing the RAT service. This is unlike the Gh0st RAT MM523 variant, \nwhich did not delete itself.   Finally, the two GDS520 Ghost RAT variants found on VirusTotal were built with file properties to \nresemble a legitimate Microsoft program (Figure 9), and included a digital certificate as one of the executable\u2019s resources, which \ncan be displayed in the file properties digital signatures tab (Figure 10).  RAT files were appended with a digital signature taken \nfrom a legitimate file signed by Kaspersky Lab. Since the signature corresponds to a different file, it appeared as invalid. Any \nmore than cursory review of the dropper executable properties would reveal the invalid signature.  These dropper samples used \nthe exact same Kaspersky certificate described in the article \u201cCertificate Snatching\u2014ZeuS Copies Kaspersky\u2019s Digital Signature\u201d \nby TrendMicro.8  \n\n8 http://blog.trendmicro.com/trendlabs-security-intelligence/certificate-snatching-zeus-copies-kasperskys-digital-signature/ \n\n17 \n\n \n \n                                   \n\fFigure 9.  Gds520 Gh0st RAT installer file details \n\nFigure 10.  Gds520 Gh0st RAT installer with invalid code signing using Kaspersky public certificate \n\nOn one compromised system investigated in May of 2015, forensic artifacts showed the source IP address of the GDS520 \ninstaller (Figure 11).     \n\nFigure 11.  Forensic artifacts left behind on a victim server by the actor downloading the GDS520 Gh0st \n\nRAT installer from a Beijing IP address \n\n18 \n\n \n \n \n \n \n \n\fA cache of the page indicated it was from a type of ephemeral file server known as HTTPFileServer (HFS)9.  The HFS server \ncached page showed that the HFS daemon had been up for 4 minutes (Figure 12). Fortunately for the investigation, the \nephemeral HFS daemon maintains usage statistics. Out of the 37 files available on the HFS page to the Terracotta actor, the \nGDS520 Gh0st RAT appeared to be the most commonly downloaded, with 1225 total downloads (Figure 12).   \n\n9 http://www.rejetto.com/hfs/ \n\n19 \n\n \n \n \n \n                                   \n\fFigure 12.  HFS-hosted tool repository from which Terracotta actor downloaded the GDS520 RAT \n\ninstalled on victim server.  Note the yellow-highlighted information for \u201cs.exe\u201d. \n\n20 \n\n \n \n \n \n\fThe HFS daemon was running on an IP address from a range assigned  to a middle school in Beijing according to Whois \ninformation10.  Virus Total11 12 13 14 reveals that hosts in this IP range have been used, extensively in the first half of 2015, to host \nmalicious tools including the GDS520 Gh0st RAT variant and other exploitation tools found on at least three Terracotta victim \nsystems. Also notable in Figure 12 is the third most-often downloaded tool from the actor\u2019s HFS page, named \u201cWin64.exe15.\u201d  \nRSA Research found this on one Terracotta victim server, and determined this to be a variant of the Windows privilege \nescalation exploit tool as described by Crowdstrike in a blog post on Hurricane Panda16.  RSA Research does not know if the \nBeijing IP address range was leveraged exclusively by Terracotta operators.   \n\nMitozhan Trojan \nFile Size: 87 KB \nMD5: 7b18614df95e71032909beb25a7b1e87 \n\nC2: vps.mm523.net:81 (sinkholed) \n\nThis malware copies itself to the Windows directory (C:\\Windows) and gives itself a new random name. Every time the malware \nruns, the executable name will vary but the file name length remains the same; 6 characters.  \n\nExample:              \n\nC:\\WINDOWS\\fatjse.exe \n\nThe Image Path of the newly-copied file is then used to add a new service to the ControlSet Registry Key. This will ensure \npersistence on the infected machine.  The name of the new service (GHIJKL NOPQRSTU WXY) might be suspicious to \nadministrators. \n\nExample:  \nRegKey Name: MACHINE\\SYSTEM\\CONTROLSET001\\SERVICES\\GHIJKL NOPQRSTU WXY \n\nRegKey Data: C:\\WINDOWS\\fatjse.exes\\\\0 \n\nThe malware performs a DNS request to vps.xxxxx.net for resolution of its controller.  The infected machine connects to the \ncontroller over TCP port 81 with the following initial connection string (Figure 13). \n\nFigure 13.  Mitozhan C2 connection string \n\nTwo strings of interest are revealed upon examination of the process in memory. \n\n%c%c%c%c%c%c.exe \n\nGET %s HTTP/1.1Content-Type: text/htmlHost: %sAccept: text/html, */*User-Agent:Mozilla/4.0 (compatible; MSIE %d.00; \nWindows NT %d.0; MyIE 3.01) \n\nSearch engine results for the last part of the UA string MyIE 3.01 show the exact UA string mentioned in a blog post by FireEye \nin 201017. The FireEye blog references another blog by researchers from Arbor Networks18. The latter blog describes in more \n\n10 https://whois.domaintools.com/211.153.xx.x \n11 https://www.virustotal.com/en/ip-address/211.153.xx.x/information/ \n12 https://www.virustotal.com/en/ip-address/211.153.xx.x/information/ \n13 https://www.virustotal.com/en/ip-address/211.153.xx.x/information/ \n14 https://www.virustotal.com/en/ip-address/211.153.xx.2xx/information/ \n15 https://www.virustotal.com/en/file/d7bd289e6cee228eb46a1be1fcdc3a2bd5251bc1eafb59f8111756777d8f373d/analysis/1429772817/ \n16 http://blog.crowdstrike.com/crowdstrike-discovers-use-64-bit-zero-day-privilege-escalation-exploit-cve-2014-4113-hurricane-panda/ \n17 https://www.fireeye.com/blog/threat-research/2010/10/avzhan-botnet-the-story-of-evolution.html \n18 http://www.arbornetworks.com/asert/2010/09/another-family-of-ddos-bots-avzhan \n\n21 \n\n \n \n \n \n \n \n \n \n                                   \n\fdepth the malware behavior, which shares several elements with the sample under investigation, including the use of a raw TCP \nconnection to the server, the UA string in memory, and the pattern to generate the executable name. \n\nThe legitimate properties and text depicted in the file appear to obscure the actual malicious intent.   The file is named after a \nvery popular photo markup program in China called \u7f8e(cid:0)\u79c0\u79c019  or   \u201cMito Xiu Xiu\u201d (Figure 14). \n\nFigure 14.  Mitozhan file properties shares name and description with popular benign program \n\nRSA Research determined that approximately 180 systems were infected with this Trojan, approximately one third of which were \nactive in the Terracotta VPN node ecosystem.  \n\nBackdoor Liudoor \nFile Size: 87 KB \nMD5: 531d30c8ee27d62e6fbe855299d0e7de20 \nC2: 0.0.0.0:3433 \n\nThis is a simple backdoor similar to the common Portless Backdoor21 found running as a service on at least five Terracotta VPN \nvictim servers, that RSA Research has dubbed Liudoor. It was installed as Windows\\SysWOW64\\rasauto.dll running as what \nwould be the unused \u201cRasAuto\u201d service on victim Windows Server 2008 R2 systems.   \n\nWhile RSA Research did not find the dropper for this backdoor, it could have just as easily been installed with a batch script.  \nThis sample binds to TCP port 3433 and waits for an incoming request, probably from a dedicated client used by its operator.  It \nwill send the 4 bytes "], "URLs": ["https://www.virustotal.com/en/file/deed6e2a31349253143d4069613905e1dfc3ad4589f6987388de13e33ac187fc/analysis/", "http://www.arbornetworks.com/asert/2010/09/another-family-of-ddos-bots-avzhan", "http://www.emc.com/collateral/white-papers/h12756-wp-shell-crew.pdf", "https://www.virustotal.com/en/file/ad1a507709c75fe93708ce9ca1227c5fefa812997ed9104ff9adfec62a3ec2bb/analysis/", "http://dshield.org/ipdetails.html?ip=58.162.xx.xx", "https://www.virustotal.com/en/file/d7bd289e6cee228eb46a1be1fcdc3a2bd5251bc1eafb59f8111756777d8f373d/analysis/1429772817/", "http://blog.trendmicro.com/trendlabs-security-intelligence/certificate-snatching-zeus-copies-kasperskys-digital-signature/", "http://www.mcafee.com/us/resources/white-papers/foundstone/wp-know-your-digital-enemy.pdf", "http://blog.crowdstrike.com/crowdstrike-discovers-use-64-bit-zero-day-privilege-escalation-exploit-cve-2014-4113-hurricane-panda/", "https://www.virustotal.com/en/file/3a2d5ce9f5f953f0499773a05f26317f9f6745352031bb8dafbb6aadf0e8e57b/analysis/", "https://en.wikipedia.org/wiki/Web_bug", "http://xiuxiu.web.meitu.com", "https://github.com/CoreSecurity/impacket/blob/master/examples/wmiexec.py", "http://www.microsoft.com/security/portal/threat/encyclopedia/entry.aspx?Name=TrojanDropper:Win32/Zegost.B", "https://www.virustotal.com/en/file/4575e7fc8f156d1d499aab5064a4832953cd43795574b4c7b9165cdc92993ce5/analysis/", "https://www.virustotal.com/en/ip-address/211.153.xx.2xx/information/", "https://www.virustotal.com/en/ip-address/211.153.xx.x/information/", "https://www.virustotal.com/en/file/9b8257000b05116a3631630c44b9f6b18c13e5bc5635c1fa3f20a01f70380909/analysis/", "https://blogs.rsa.com/wp-content/uploads/2015/05/RSA-IR-Case-Study.pdf", "http://www.symantec.com/security_response/writeup.jsp?docid=2003-122516-0717-99&tabid=2", "http://www.rejetto.com/hfs/", "http://download01.norman.no/documents/ThemanyfacesofGh0stRat.pdf", "https://www.virustotal.com/en/file/e42b8385e1aecd89a94a740a2c7cd5ef157b091fabd52cd6f86e47534ca2863e/analysis/", "https://www.fireeye.com/blog/threat-research/2010/10/avzhan-botnet-the-story-of-evolution.html", "https://whois.domaintools.com/211.153.xx.x"], "weight": 0.0}