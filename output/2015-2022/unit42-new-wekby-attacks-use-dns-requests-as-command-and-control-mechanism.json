{"rule_id": 832, "name": "unit42-new-wekby-attacks-use-dns-requests-as-command-and-control-mechanism", "description": "-", "references": [], "File_Names": ["proxy_plugin.exe", "local.it", "glb.it", "proxy_web_plugin.exe"], "MD5_Hashes": ["E4968C8060EA017B5E5756C16B80B012", "07B9B62FB3B1C068837C188FEFBD5DE9", "E8D58AA76DD97536AC225949A2767E05"], "SHA1_Hashes": [], "SHA256_Hashes": ["6852ba95720af64809995e04f4818517ca1bd650bc42ea86d9adfdb018d6b274", "DA3261C332E72E4C1641CA0DE439AF280E064B224D950817A11922A8078B11F1", "456FFFC256422AD667CA023D694494881BAED1496A3067485D56ECC8FEFBFAEB", "456fffc256422ad667ca023d694494881baed1496a3067485d56ecc8fefbfaeb", "1b341dab023de64598d80456349db146aafe9b9e2ec24490c7d0ac881cecc094", "4d62caef1ca8f4f9aead7823c95228a52852a1145ca6aaa58ad8493e042aed16", "9200f80c08b21ebae065141f0367f9c88f8fed896b0b4af9ec30fc98c606129b", "8FFBB7A80EFA9EE79E996ABDE7A95CF8DC6F9A41F9026672A8DBD95539FEA82A", "da3261c332e72e4c1641ca0de439af280e064b224d950817a11922a8078b11f1", "930772d6af8f43f62ea78092914fa8d6b03e8e3360dd4678eec1a3dda17206ed"], "Registry_Entries": ["HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /v lsm /t reg_sz /d\n\n\u201c%appdata%\\lsm.exe\u201d /f\n\nThis particular command will set the\n\nHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\lsm registry key with a value of\n\n\u201c%appdata%\\lsm.exe\u201d. After this key is set, the malware proceeds to decrypt a two blobs of data\n\nwith a single-byte XOR key of 0x54. The resulting data is written to the %appdata%\\lsm.exe file\n\npath.\n\nAfter this file is written, the malware executes the newly written lsm.exe file, which contains the\n\npisloader payload.\n\nThe following sample was discovered and is referenced in the subsequent analysis:\n\nMD5: 07B9B62FB3B1C068837C188FEFBD5DE9\n\nSHA256:\n\n456FFFC256422AD667CA023D694494881BAED1496A3067485D56ECC8FEFBFAEB\n\nSize: 102400 Bytes\n\nCompile Timestamp: 2016-04-27 13:39:02 UTC\n\nThe payload is heavily obfuscated using a return-oriented programming (ROP) technique, as\n\n\fwell as a number of garbage assembly instructions. In the example below, code highlighted in\n\nred essentially serves no purpose other than to deter reverse-engineering of the sample. This\n\ncode can be treated as garbage and ignored. The entirety of the function is highlighted in green,\n\nwhere two function offsets are pushed to the stack, followed by a return instruction. This return\n\ninstruction will point code execution first at the null function, which in turn will point code\n\nexecution to the \u2018next_function\u2019. This technique is used throughout the runtime of the payload,\n\nmaking static analysis difficult.\n\nFigure 3 Obfuscated code witnessed in pisloader\n\nThe malware is actually quite simplistic once the obfuscation and garbage code is ignored. It will\n\nbegin by generating a random 10-byte alpha-numeric header. The remaining data is base32-\n\nencoded, with padding removed. This data will be used to populate a subdomain that will be\n\nused in a subsequent DNS request for a TXT record.\n\nThe use of DNS as a C2 protocol has historically not been widely adopted by malware authors.\n\nNotable exceptions include the following:\n\nFrameworkPOS\n\nC3PRO-RACCOON\n\nFeederBot\n\nMorto\n\nPlugX Variants\n\nThe use of DNS as a C2 allows pisloader to bypass certain security products that may not be\n\ninspecting this traffic correctly.\n\n\fFigure 4 DNS query for TXT record by malware\n\nThe pisloader sample will send a beacon periodically that is composed of a random 4-byte\n\nuppercase string that is used as the payload. An example of this can be found below:\n\nFigure 5 pisloader DNS beacon request\n\nThe malware expects various aspects of the DNS responses to be set in a specific way, or else\n\npisloader will ignore the DNS reply. The following DNS flags must be set. Should any additional\n\nflags be set, the response will be ignored.\n\nResponse\n\nRecursion Desired\n\nRecursion Available\n\nThe \u2018Questions\u2019 field must be set to a value of 0x1. The \u2018Answer Resource Records\u2019 field must\n\nbe set to a value of 0x1. Additionally, the response query subdomain must match the original\n\nDNS request.\n\nThe remote command and control (C2) server is statically embedded within the malware. A\n\nsingle host of \u2018ns1.logitech-usa[.]com\u2019 is found in this specific sample.\n\nThe C2 server will respond with a TXT record that is encoded similar to the initial request. In the\n\nresponse, the first byte is ignored, and the remaining data is base32-encoded. An example of\n\nthis can be found below.\n\nFigure 6 Example TXT response by C2 server\n\nThe following commands, and their descriptions are supported by the malware:\n\nsifo \u2013 Collect victim system information\n\ndrive \u2013 List drives on victim machine\n\nlist \u2013 List file information for provided directory\n\nupload \u2013 Upload a file to the victim machine\n\nopen \u2013 Spawn a command shell\n\nSome examples of these commands being used can be seen below. A mock DNS server was\n\nused to generate the commands and receive the resulting data.\n\nExample sending the \u2018drive\u2019 command:\n\n1\n2\n3\n\n[+] Sending Command: drive | Encoded: CMRZGS5TF\n[+] Raw Data Received: UMAVMGAGD0IE5FY7CDHJOHYRB2LR6A\n[+] Decoded Data Received: A:\\|C:\\|D:\\|\n\nExample sending the \u2018open\u2019 command:\n\n\f1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n[+] Sending Command: open | Encoded: CN5YGK3Q\n[+] Raw Data Received: ULCBMGAGCAJVUWG4TPONXWM5BAK5UW4ZDPO5ZSAW2WMVZHG2LP\n[+] Raw Data Received: ATABMGAGCBNYQDMLRRFY3TMMBRLUGQUQ3POB4XE2LHNB2CAKDD\n[+] Raw Data Received: HTPDMGAGCCFEQDEMBQHEQE22LDOJXXG33GOQQEG33SOBXXEYLU\n[+] Raw Data Received: BNJWMGAGCDNFXW4LRAEBAWY3BAOJUWO2DUOMQHEZLTMVZHMZLE\n[+] Raw Data Received: UARCMGAGCEFYGQUDIKIM5FYVLTMVZHGXCKN5ZWQICHOJ2W46TX\n[+] Raw Data Received: UJRAMGAGC0MVUWOXCEMVZWW5DPOA7A\n[+] Decoded Data Received: Microsoft Windows [Version 6.1.7601]\nCopyright (c) 2009 Microsoft Corporation. All rights reserved.\n\nC:\\Users\\Josh Grunzweig\\Desktop>\n\nExample sending the \u2018sifo\u2019 command:\n\n1\n2\n3\n4\n5\n\n[+] Sending Command: sifo | Encoded: CONUWM3Y\n[+] Raw Data Received: FUBWMGAGIANQ6TCNZSFYYTMLRRFYYTKMZGMM6VOSKOFVGEUTCW\n[+] Raw Data Received: PGHRMGAGIBGJHEWSKPJNICAW2KN5ZWQICHOJ2W46TXMVUWOXJG\n[+] Raw Data Received: MMAZMGAGI0N46TMLBRFQZTE\n[+] Decoded Data Received: l=172.16.1.153&c=WIN-LJLV2NKIOKP [Josh Grunzweig\n\nExample listing the contents of the C:\\ drive:\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n[+] Sending Command: list C:\\ | Encoded: CNRUXG5BAIM5FY\n[+] Raw Data Received: QKTUMGAGLAGB6CIUTFMN4WG3DFFZBGS3T4GIYDCNJPGAZS6MRW\n[+] Raw Data Received: EKNPMGAGL0EAYTIORUGA5DKN34GB6DEMS6\n[+] Raw Data Received: RKMAMGAGLAGF6GC5LUN5SXQZLDFZRGC5D4GIYDAOJPGA3C6MJQ\n[+] Raw Data Received: NMSIMGAGL0EAZDCORUGI5DEMD4GI2HYMZSLY\n[+] Raw Data Received: OHRWMGAGLAGB6EE33POR6DEMBRGUXTAMZPGI3CAMJWHIZDIORQ\n[+] Raw Data Received: DPDUMGAGL0GJ6DA7BSGJPA\n[+] Raw Data Received: WIKGMGAGLAGF6GE33PORWWO4T4GIYDCNBPGA3C6MRYEAYDAORS\n* Truncated*\n[+] Decoded Data Received: 0|$Recycle.Bin|2015/03/26 14:40:57|0|22^1\n\nThe sifo command above uses the printf format string of \u2018l=%s&c=%s&o=%s\u2019. This is consistent\n\nwith previous versions of HTTPBrowser, which is another malware family frequently used by the\n\nWekby group.\n\nAdditionally, a number of commands themselves, such as the \u2018list\u2019, \u2018drive\u2019, and \u2018upload\u2019\n\ncommands are consistent with HTTPBrowser. The formatted responses from these commands\n\nare also identical. A known HTTPBrowser sample was spotted with similar metadata as the\n\ndiscussed pisloader sample, which adds further credibility that pisloader is likely a variant of this\n\nmalware family.\n\nAdditionally, the code used to generate these commands is available via GitHub.\n\nThe Wekby group continues to target various high profile organizations using sophisticated\n\nmalware. The pisloader malware family uses various novel techniques, such as using DNS as a\n\nC2 protocol, as well as making use of return-oriented programming and other anti-analysis\n\ntactics.\n\nPalo Alto Networks customers are protected against this threat in the following ways:\n\nWildFire correctly identifies all pisloader samples as malicious\n\nA pisloader AutoFocus tag has been created in order to track this malware family\n\nAll domains/IPs used in this attack have been flagged as malicious.\n\nAn IPS rule has been created to detect pisloader DNS traffic\n\nExternal Resources\n\nhttps://blog.anomali.com/evasive-maneuvers-the-wekby-group-attempts-to-evade-analysis-\n\nvia-custom-rop\n\nhttp://www.volexity.com/blog/?p=158\n\nhttps://www.secureworks.com/research/threat-group-3390-targets-organizations-for-\n\ncyberespionage\n\nhttps://www.zscaler.com/blogs/research/chinese-cyber-espionage-apt-group-leveraging-\n\nrecently-leaked-hacking-team-exploits-target-financial-services-firm\n\nhttps://www.fireeye.com/blog/threat-research/2015/07/demonstrating_hustle.html\n\nSHA256 Hashes\n\nda3261c332e72e4c1641ca0de439af280e064b224d950817a11922a8078b11f1\n\n930772d6af8f43f62ea78092914fa8d6b03e8e3360dd4678eec1a3dda17206ed\n\n6852ba95720af64809995e04f4818517ca1bd650bc42ea86d9adfdb018d6b274\n\n9200f80c08b21ebae065141f0367f9c88f8fed896b0b4af9ec30fc98c606129b\n\n4d62caef1ca8f4f9aead7823c95228a52852a1145ca6aaa58ad8493e042aed16\n\n1b341dab023de64598d80456349db146aafe9b9e2ec24490c7d0ac881cecc094\n\n456fffc256422ad667ca023d694494881baed1496a3067485d56ecc8fefbfaeb\n\n \n\fDomains\n\nns1.logitech-usa[.]com\n\nglobalprint-us[.]com\n\nintranetwabcam[.]com\n\nlogin.access-mail[.]com\n\nglb.it-desktop[.]com\n\nlocal.it-desktop[.]com\n\nhi.getgo2[.]com\n\nShare your\nthoughts\n\nMarcus on May 26, 2016 9:39 AM said\n\nGreat article, well written.\n\nYasir Irfan on May 28, 2016 10:27 PM said\n\nVery informative and well crafted\n\nName *\n\nEmail *\n\nWebsite\n\nPost Comment\n\nPrivacy Policy   Legal Notices   Site Index   Subscriptions\n\nCopyright \u00a9 2007-2013 Palo Alto Networks\n\n\f"], "URLs": ["https://blog.anomali.com/evasive-maneuvers-the-wekby-group-attempts-to-evade-analysis-", "https://www.fireeye.com/blog/threat-research/2015/07/demonstrating_hustle.html", "http://globalprint-us[.]com/proxy_web_plugin.exe", "https://www.zscaler.com/blogs/research/chinese-cyber-espionage-apt-group-leveraging-", "http://globalprint-us[.]com/proxy_plugin.exe"], "weight": 0.0}