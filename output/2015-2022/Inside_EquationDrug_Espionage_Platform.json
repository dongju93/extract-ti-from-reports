{"rule_id": 245, "name": "Inside_EquationDrug_Espionage_Platform", "description": "-", "references": [], "File_Names": ["Volrec.sys", "EquationDrug_1.jpg", "khlp760w.dll", "vnetapi.dll", "perfcom.dll", "winproc.exe", "mssvc32.vxd", "SVCHOST32.EXE", "nls933w.dll", "volrec.sys", "ATMDKDRV.SYS", "mscfg32.exe", "nls_874w.dll", "tdip.sys", "EquationDrug_2.jpg", "yh56816.tmp", "msrstd.sys", "tm154o.da", "2Fsecurelist.com", "MSCFG32.DLL", "t1445152.html", "SVCHOST32.DLL", "Unilay.DLL", "WIN32M.SYS", "EquationDrug_5_1.jpg", "Winlogon.exe", "xa1.fon", "khlp733w.dll", "svchost32.exe", "nls_933w.dll", "mstcp32.sys", "pcreview.co", "svchost32.dll", "scsi2mgr.sys", "lsasrv.dll", "khlp680w.dll", "IEXPLORE.EXE", "cmib456w.dll", "mscoreep32.dll", "wshcom.dll", "msrtvd.sys", "wpl913h.dll", "cmib158w.dll", "fat32.sys", "mslog32.dat", "EquationDrug_4.jpg", "atmdkdrv.sys", "wshapi.dll", "vnetapi32.dll", "khlp866w.dll", "mscfg32.dll", "msndsrv.sys", "unilay.dll", "khlp807w.dll", "mstkpr.dll", "EquationDrug_3.jpg", "msperf32.dat", "khlp747w.dll", "webmgr.dll"], "MD5_Hashes": ["74DE13B5EA68B3DA24ADDC009F84BAEE", "20506375665a6a62f7d9dd22d1cc9870", "f6bf3ed3bcd466e5fd1cbaf6ba658716", "60dab5bb319281747c5863b44c5ac60d", "B2C7339E87C932C491E34CDCD99FEB07", "69e7943f3d48233de4a39a924c59ed2c", "9f3f6f46c67d3fad2479963361cf118b", "bb8f56874189d5dfe9294f0553a49b83", "311D4923909E07D5C703235D83BF4479", "c17e16a54916d3838f63d208ebab9879", "2b444ac5209a8b4140dd6b747a996653", "11fb08b9126cdb4668b3f5135cf7a6c5", "15d39578460e878dd89e8911180494ff", "c4f8671c1f00dab30f5f88d684af1927", "0a5e9b15014733ee7685d8c8be81fb0d", "21C278C88D8F6FAEA64250DF3BFFD7C6", "8d87a1845122bf090b3d8656dc9d60a8", "98dea1bce37bf7087360e1958400589b", "214f7a2c95bdc265888fbcd24e3587da", "5767b9d851d0c24e13eca1bfd16ea424", "EF4405930E6071AE1F7F6FA7D4F3397D", "a6662b8ebca61ca09ce89e1e4f43665d", "c3af66b9ce29efe5ee34e87b6e136e3a", "b3487fdd1efd2d1ea1550fef5b749037"], "SHA1_Hashes": [], "SHA256_Hashes": [], "Registry_Entries": ["HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\tdip]\n\nOptions - packet \ufffdltering rules in BPF format\n\n24 of 30\n\n03/22/2015 10:21 PM\n\n\fhttp://securelist.com/blog/research/69203/inside-t...\n\nTag - selector of \ufffdltered packet types / Defaults in case of MediumWan to\nNDIS_PACKET_TYPE_BROADCAST|NDIS_PACKET_TYPE_MULTICAST|NDIS_PACKET_TYPE_DIRECTED;\n(or NDIS_PACKET_TYPE_BROADCAST|NDIS_PACKET_TYPE_DIRECTED in any other case)\nImageFile - full path name to the resulting pcap \ufffdle\nDuration - used as Length of the original packet in dump \ufffdle. (default 0xffff)\nBackup - max size of the pcap \ufffdle\n\nIOCTLs:\n\n0x80002004 getCurrentState\n0x80002008 setFilteringRules\n0x8000200C getFilteringRules\n0x80002024 getDumpFileSize\n0x80002010/0x80002014/0x80002018/0x8000201C pause/resume\n0x80002020 getVersion - returns 2.4.0\n\nDriver has three logical parts, and uses an incomplete function pointer table as interface:\n\n1. \n\nBusiness logic: \ufffdltering rules, packet dumping, device ioctl, options\n\n2. \n\nNdis driver skeleton\n\n3. \n\nPrimitives lib: Strings, XORing, registry I/O\n\nThe code is of very good quality. It looks more complicated than Winpcap 2.3 (released 28 mar 2002), but\n\nless so than Winpcap 3.0 (released by 10 apr 2003). Interestingly, the driver identi\ufffdes itself as ", "HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\MemSubSys] {08DAB849-0E1E-\nA1F0-DCF1-457081E091DB-117DB663} (encoded SHA1 of ", "HKLM\\SOFTWARE\\Classes\\CLSID\\{091FD378-422D-A36E-8487-83B57ADD2109}] TypeLib\n\nIf the key is not found, the code checks for registry value TypeLib in the following key:\n\n[HKLM\\SOFTWARE\\Classes\\CLSID\\{091FD378-422D-A36E-8487-83B57ADD2109}]\n\nIf such a value is found, it is then deleted along with the Version value if it exists in the same key.\n\nThe string obtained from one of two possible registry values is processed as if this value is a CLSID-like\n\nstring: the code takes the last 16 hexadecimal digits, splits them in two 8-chars values, converts them to\n\nbinary form (two DWORDs) and reverses the order of bytes in each DWORD and XORs, the \ufffdrst value with\n0x8ED400C0, and the second with 0x4FC2C17B.  Next, the \ufffdrst DWORD value becomes second and the\n\nsecond becomes \ufffdrst. In this order, they are stored in a structure in memory. These two values seem to be\nvery important as they override a few values in the previously known con\ufffdguration. If they don't exist,\nvalues from the current con\ufffdguration replace them and are stored back in the registry following the\nreverse procedure:\n\n1. \n\n[HKLM\\SOFTWARE\\Classes\\CLSID\\{091FD378-422D-A36E-8487-83B57ADD2109}\\Version] is created\nand @default value is set to version obtained from \ufffdle version information PrivateBuild \ufffdeld (i.e.\n3.04.00.0001). This seems to be used as kit version number.\n\n2. \n\n[HKLM\\SOFTWARE\\Classes\\CLSID\\{091FD378-422D-A36E-8487-83B57ADD2109}\\Version] is created\nand @default value is set to a CLSID like string generated from the following:\n\nFixed pre\ufffdx string: ", "HKLM\\System\\CurrentControlSet\\Services\\%driver name%]\nProcesses. This value may contain a list of process names that should be started by injected executable\ncode but only after services.exe and winlogon.exe has been started. The injection of code into\nwinlogon.exe and services.exe ensures that the newly started process will have SYSTEM user privileges.\nDuring the injection stage Windows Audit Logging is fully disabled to avoid leaving any suspicious records\n\nin Windows Logs.\n\nMagic Packet Recognition\n\n22 of 30\n\n03/22/2015 10:21 PM\n\n\fhttp://securelist.com/blog/research/69203/inside-t...\n\nAll incoming packets are \ufffdrst \ufffdltered by BPF-like rules. The \ufffdltering rules are located in [HKLM\\System\n\\CurrentControlSet\\Services\\%driver name%] Options registry value or passed via corresponding IOCTL.\nPackets that passed through the \ufffdlter are added in the end of processing queue.\n\nPackets from the queue must have valid checksum values. After checking that, the code XOR-decrypts\nadditional data from the end of the packet. The decrypted end of the packet contains another control\nstructure that de\ufffdnes which encryption algorithm is used to decipher packet body. Supported algorithms\ninclude RC5 and RSA. There is a 1024-bits RSA public key hardcoded inside the module body, while a\n96-bits RC5 key is generated dynamically.\n\nThe backdoor command may arrive in a single packet or be split into pieces and come with several\npackets. There is a procedure for re-assembling pieces together: a multi-packet command is added to a\nspecial packet collector which puts all the pieces together before passing it further.\n\nBackdoor command is stored in the \ufffdrst byte of the decrypted request and can be one of the following\n\nvalues:\n\nCommand\n\nShort Name\n\nDescription\n\nByte\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\nStatusCheck\n\nReply with encrypted DriverName, packet collector keys, ", "HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\MemSubSys] registry key.\n\nSample registry value names:\n\nOriginal String\n\nGUID-like registry value name\n\nSkyhookChow Target\n\n{B6F5CD13-A74D-8B82-A6AA-6FA1BE2484C1-6832DF06}\n\nSkyhookChow Payload {F4CF0326-6DCD-EEC8-5323-01CEDB66741A-B55F6F12}\n\nThese registry values are encrypted using an RC5 algorithm using a hardcoded 1024-bit key with 24\nrounds.\n\nThe registry value:\n\n[HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\MemSubSys] {F4CF0326-6DCD-\nEEC8-5323-01CEDB66741A-B55F6F12} (", "HKLM\\SOFTWARE\\Clients\\StartMenuInternet\\{current @default\nvalue}\\shell\\open\\command]\n%SystemRoot%\\System32\\svchost.exe\n%SystemRoot%\\System32\\lsass.exe\nSpoolsv service binary from the [HKLM\\SYSTEM\\CurrentControlSet\\Services\\Spooler] ImagePath\nregistry value.\nDefault html \ufffdle handler from [HKLM\\SOFTWARE\\Classes\\html\ufffdle\\shell\\open\\command]registry value.\n\n6. \n\nInternet Explorer path from [HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\]\n\nIEXPLORE.EXE registry value.\n\nNext, the module injects extra code into a newly started target process. The injected code loads the\n\npayload DLL (", "HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\MemSubSys] {42E14DD3-\nF07A-78F1-7659-26AE141569AC-E0B3EE89}\n\nThe con\ufffdguration block stored in the registry value is encrypted using RC5 with the 1024-bit key. Both the\nloader and the orchestrator share the same key for encrypting and decrypting the registry values in the\n", "HKLM\\System\\CurrentControlSet\\Services\\%driver name%] 1\n\n[HKLM\\System\\CurrentControlSet\\Services\\%driver name%] 2\n\nThese values are also protected by the rootkit. They can be revealed by booting Windows in Safe Mode.\n\nThe driver contains the following unused strings:\n\n\\\\.\\mailslot\\dskInfo\nDissecorp\n\nUser-mode loader - mscfg32.exe, svchost32.exe\n\nMD5\n\nc3af66b9ce29efe5ee34e87b6e136e3a\n\n10 of 30\n\n03/22/2015 10:21 PM\n\n\fhttp://securelist.com/blog/research/69203/inside-t...\n\nSize\n\n22 016 bytes\n\nFormat\n\nPE32 EXE\n\nCompiled 2008.01.23 14:26:05 (GMT)\n\nLocation %System32%\\mscfg32.exe\n\nThis module opens a unique event named ", "HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\MemSubSys] {B6F5CD13-A74D-8B82-\nA6AA-6FA1BE2484C1-6832DF06} (", "HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\MemSubSys] 1\n\nThis value has information about all the components of the current kit. It may include Unicode strings\n\nwith paths to extra DLLs which serve as plugins. Each DLL exports at least four functions which are\n\nimported by ordinal numbers from 1 to 4.\n\nThe structure of the registry value ", "HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\MemSubSys] D\n\nThe \ufffdle ", "HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\MemSubSys] Con\ufffdg\n\nIf the value is not present in the registry, it uses the following fallback string hardcoded in the binary:\n\nC:\\WINDOWS\\SYSTEM\\SVCHOST32.EXE\n\nNext, it installs a callback procedure using Windows function _SHELL_CallAtAppyTime. This procedure\n\nwill be called when CPU is running in ring-3 mode, so that a new executable (loader process) can be\nstarted via the traditional way. This is a standard trick that was used by developers in the 90s to initiate a\ncall to DLL export in ring-3 from ring-0 in Windows 9x OS family.\n\nKernel mode stage 0 and rootkit (Windows 2000 and above) - msndsrv.sys\n\nMD5\n\nSize\n\nc4f8671c1f00dab30f5f88d684af1927\n\n105 392 bytes\n\n9 of 30\n\n03/22/2015 10:21 PM\n\n\fhttp://securelist.com/blog/research/69203/inside-t...\n\nFormat\n\nPE32 Native\n\nCompiled 2008.01.23 14:12:33 (GMT)\n\nLocation %System32%\\drivers\\msndsrv.sys\n\nThis module can create log \ufffdles in the following known locations:\n\n%systemroot%\\system32\\mslog32.dat\n%systemroot%\\system32\\msperf32.dat (default location)\n\nThe driver acts as the \ufffdrst stage of the EquationDrug platform on Windows 2000+ and implements rootkit\nfunctions for hiding the components of the platform. Additionally, it implements a NDIS driver for\n\ufffdltering network traf\ufffdc.\n\nWhen started and initialized, the driver retrieves the location of the user-mode loader executable from the\n\nregistry value:\n\n[HKLM\\System\\CurrentControlSet\\Services\\%driver name%] Con\ufffdg\n\nThe %driver name% is not hardcoded and is obtained dynamically from the current module name, which\nmeans that different instances may check different registry keys and this may not be a reliable way to\n\ncheck for infection. The sample we analyzed used "], "URLs": ["https://twitter.com/share?url=http%3A%2F%2Fsecurelist.com%2Fblog%2Fresearch%2F69203%2Finside-", "http://www.pcreview.co.uk", "http://securelist.com/blog/research/67741/regin-nation-state-ownage-of-gsm-networks/", "http://securelist.com/blog/research/68750/equation-the-death-star-of-malware-galaxy/", "http://www.pcreview.co.uk/forums/mstcp32-t1445152.html", "http://securelist.com/blog/research/69203/inside-t...", "http://cdn.securelist.com/", "http://securelist.com/analysis/publications/65545/the-epic-turla-operation/"], "weight": 0.0}