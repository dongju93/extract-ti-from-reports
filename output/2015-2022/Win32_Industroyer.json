{"rule_id": 689, "name": "Win32_Industroyer", "description": "-", "references": ["CVE-2015-5374"], "File_Names": ["61850.exe", "haslo.exe", "haslo.dat", "OPC.exe", "SYS_BASCON.COM", "Crash101.dll", "OPCClientDemo.dll", "i.ini", "61850.dll", "D2MultiCommService.exe", "101.dll"], "MD5_Hashes": [], "SHA1_Hashes": ["B92149F046F00BB69DE329B8457D32C24726EE00", "F6C21F8189CED6AE150F9EF2E82A3A57843B587D", "8E39ECA1E48240C01EE570631AE8F0C9A9637187", "B335163E6EB854DF5E08E85026B2C3518891EDA8", "2CB8230281B86FA944D3043AE906016C8B5984D9", "5A5FAFBC3FEC8D36FD57B075EBF34119BA3BFF04", "CCCCE62996D578B984984426A024D9B250237533", "94488F214B165512D2FC0438A581F5C9E3BD4D4C", "79CA89711CDAEDB16B0CCCCFDCFBD6AA7E57120A"], "SHA256_Hashes": [], "Registry_Entries": ["HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\n\nIt attempts to set the registry value ImagePath with an empty string in \neach of the entries found  This operation will make the operating system \nunbootable \n\nThe next step is actual deletion of file contents  The component \nenumerates files with specific file extensions on all drives connected to \ncomputer, from C:\\ to Z:\\  It should be noted that during enumeration \nthe component skips files that are located in subdirectory that contains \nWindows in its name \nThe component rewrites file content with meaningless data obtained from \nnewly allocated memory  In order to perform this operation thoroughly the \ncomponent attempts to rewrite files twice  The first attempt happens once \nthe file is found on a drive  If the first attempt is unsuccessful then the wiper \nmalware makes a second attempt, but before that the malware terminates \n\nFigure 16  The disassembled code of the OPC DA component that uses the Abdul string \n\nOn the final step, the OPC DA payload attempts to change the state of \ndiscovered OPC items using the IOPCSyncIO interface by writing the 0x01 \nvalue twice \n\nFigure 17  Disassembled code of OPC DA payload that uses IOPCSyncIO interface \n\nWin32/Industroyer\fall processes except those included in a list of critical system processes  The \nlist of these processes is displayed in Figure 18 \n\nTo speed up the wiping operation this component rewrites only partial file \ncontent at the beginning of the file  The amount of data to be rewritten \ndepends on file size: the smallest amount of data will be rewritten for files \nless than or equal to 1Mb (4096 bytes); the largest amount of data will be \nrewritten for files less than or equal to 10Mb (32768 bytes) \n\nFinally, this component attempts to terminate all processes (including \nsystem processes) except its own  This will result in the system becoming \nunresponsive and eventually crashing \n\nFigure 18  List of processes that are not terminated on second rewriting attempt \n\nThe filename masks targeted by the data wiper component to be \noverwritten are:\n\nSYS_BASCON COM\n\n* v\n\n* PL\n\n* paf\n\n* XRF\n\n* trc\n\n* pcmi\n\n* pcmt\n\n* ini\n\n* xml\n\n* CIN\n\n* prj\n\n* bk\n\n* bkp\n\n* log\n\n* zip\n\n* rar\n\n* tar\n\n14\n\n* SCL\n\n* bak\n\n* cid\n\n* scd\n\n* pcmp\n\n* cxm\n\n* elb\n\n* epl\n\n* mdf\n\n* ldf\n\n* 7z\n\n* exe\n\n* dll\n\nThis list contains filename extensions that are used in a standard \nenvironment, such as Windows binaries ( exe/ dll), archives ( 7z / tar/ rar/ \nzip), backup files ( bak/ bk/ bkp), Microsoft SQL server files ( mdf/ ldf), \nand various configuration files ( ini/ xml)  In addition, the component also \nwipes files that may be used in industrial control systems, such as files \nwritten using Substation Configuration description Language ( scl/ cid/ scd) and \nthere are many files and file extensions that are used by various products \nfrom ABB  For example, a file named SYS_BASCON.COM is used by ABB \nsolutions for storing configuration data, and files with the .paf\u200c(Product\u200c\nAuthorization\u200cFile) filename extension are used to store license data \nfor ABB MicroSCADA products \n\nAdditional tools: port scanner tool\n\nThe attackers\u2019 arsenal includes a port scanner that can be used to map \nthe network and to find computers relevant to their attack  Interestingly, \ninstead of using software already existing, the attackers built their own \ncustom-made port scanner  As is evident from Figure 19, the attacker can \ndefine a range of IP addresses and a range of network ports that are to be \nscanned by this tool \n\nFigure 19  The port scanner tool usage example \n\nWin32/Industroyer\fAdditional tools: DoS tool\n\nAnother tool from the attackers\u2019 arsenal is a Denial-of-Service (DoS) tool \nthat can be used against Siemens SIPROTEC devices  This tool leverages \nthe CVE-2015-5374 vulnerability in order to render a device unresponsive  \nOnce this vulnerability is successfully exploited, the target device stops \nresponding to any commands until it is rebooted manually \n\nTo exploit this vulnerability the attackers hardcoded the device IP addresses \ninto this tool  Once the tool is executed it sends specifically crafted packets \nto port 50,000 of the target IP addresses using UDP  The UDP packet \ncontains only 18 bytes \n\nFigure 20  Content of UDP packet used during exploitation of CVE-2015-5374 \n\nConclusion\n\nThe investigation behind the Ukrainian power outage last December is still \nongoing and it is currently not confirmed that the malware analyzed here \nwas the direct cause  Nevertheless, we believe that to be a very probable \nexplanation, as the malware is able to directly control switches and circuit \nbreakers at power grid substations using four ICS protocols and contains an \nactivation timestamp for December 17, 2016, the day of the power outage \n\nWe can definitely say that the Win32/Industroyer malware family is an \nadvanced and sophisticated piece of malware that is used against industrial \ncontrol systems  However, it should be noted that the malware itself is just \na tool in the hands of an even more advanced and very capable malicious \nactor  Using logs produced by the toolset and highly configurable payloads, \nthe attackers could adapt the malware to any comparable environment \n\n15\n\nThe commonly-used industrial control protocols used in this malware \nwere designed decades ago without taking security into consideration  \nTherefore, any intrusion into an industrial network with systems using \nthese protocols should be considered as \u201cgame over\u201d \n\nIndicators of Compromise (IoC)\n\nSHA-1 hashes:\n\nF6C21F8189CED6AE150F9EF2E82A3A57843B587D\nCCCCE62996D578B984984426A024D9B250237533\n8E39ECA1E48240C01EE570631AE8F0C9A9637187\n2CB8230281B86FA944D3043AE906016C8B5984D9\n79CA89711CDAEDB16B0CCCCFDCFBD6AA7E57120A\n94488F214B165512D2FC0438A581F5C9E3BD4D4C\n5A5FAFBC3FEC8D36FD57B075EBF34119BA3BFF04\nB92149F046F00BB69DE329B8457D32C24726EE00\nB335163E6EB854DF5E08E85026B2C3518891EDA8\n\nIP addresses of C&C servers:\n\n195.16.88[.]6\n46.28.200[.]132\n188.42.253[.]43\n5.39.218[.]152\n93.115.27[.]57\n\nWarning! Most of the servers with these IP addresses were part of Tor \nnetwork which means that the use of these indicators could result in a \nfalse positive match \n\nWin32/Industroyer\f\f"], "URLs": [], "weight": 0.0}